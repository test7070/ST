z_umm_rk01:--z_umm_rk01 應收帳款明細表 	
	SET QUOTED_IDENTIFIER OFF
	declare @t_path nvarchar(max) = '[23]'
	declare @t_db nvarchar(max) = '[24]'
	declare @t_bcustno nvarchar(20) = case when '#non'=[5] then '' else [5] end 
	declare @t_ecustno nvarchar(20) = case when '#non'=[6] then char(255) else [6] end
	declare @t_bmon nvarchar(20) = case when '#non'=[13] then '' else [13] end 
	declare @t_emon nvarchar(20) = case when '#non'=[14] then char(255) else [14] end
	declare @t_curnoa nvarchar(max) = case when '#non'=[26] then '' else [26] end
	------------------------------------------------------------------------
	declare @tmp table(
		sel int identity(1,1)
		,gno nvarchar(10)
		,datea nvarchar(20)
		,accy nvarchar(20)
		,noa nvarchar(20)
		,ordeno nvarchar(20)
		,quatno nvarchar(20)
		,product nvarchar(50)
		,dime float
		,radius float
		,width float
		,lengthb float
		,[weight] float
		,mount float
		,unit nvarchar(20)
		,price float
		,[money] float
		,size nvarchar(max)
		,memo nvarchar(max)
		,ordememo nvarchar(max)
		,po nvarchar(max)
		,pn nvarchar(max)
		,unit2 nvarchar(20)
		
		,custno nvarchar(20)
		,cust nvarchar(50)
		,serial nvarchar(20)
		,tel nvarchar(50)
		,fax nvarchar(50)
		,post nvarchar(20)
		,zip nvarchar(20)
		,addr nvarchar(50)
		,tmoney float
		,ttax float
		,ttotal float
		,invono nvarchar(max)
		,tmount nvarchar(max)
	)
	insert into @tmp(gno,custno,datea,accy,noa,ordeno,quatno,product,dime,radius,width,lengthb,unit,price
		,size,memo
		,[weight],mount,[money]
		,ordememo,unit2)
	select '1',b.custno,b.datea,b.accy,b.noa,b.ordeno,d.quatno,a.product,a.dime,a.radius,a.width,a.lengthb,a.unit,a.price
		,LTRIM(rtrim(isnull(a.size,''))),LTRIM(rtrim(isnull(a.memo,'')))
		,sum(isnull(a.[weight],0)),sum(isnull(a.[mount],0)),sum(isnull(a.[total],0))
		,LTRIM(rtrim(isnull(e.memo,''))),ISNULL(e.unit2,'')
	from view_vccs a
	left join view_vcc b on a.accy=b.accy and a.noa=b.noa
	left join view_orde c on a.ordeno=c.noa
	left join view_quat d on c.quatno=d.noa
	left join view_ordes e on a.ordeno=e.noa and a.no2=e.no2
	where ISNULL(b.custno,'') between @t_bcustno and @t_ecustno
	and ISNULL(b.mon,'') between @t_bmon and @t_emon
	and ISNULL(b.typea,'')='1'
	group by b.custno,b.datea,b.accy,b.noa,b.ordeno,d.quatno,a.product,a.dime,a.radius,a.width,a.lengthb,a.unit,a.price,LTRIM(rtrim(isnull(a.size,''))),LTRIM(rtrim(isnull(a.memo,''))),LTRIM(rtrim(isnull(e.memo,''))),ISNULL(e.unit2,'')
	order by b.custno,b.datea,b.accy,b.noa,b.ordeno,d.quatno,a.product,a.dime,a.radius,a.width,a.lengthb,a.unit,a.price,LTRIM(rtrim(isnull(a.size,''))),LTRIM(rtrim(isnull(a.memo,'')))
	
	-------------從ordememo 取得 PO,PN
	declare @sel int
	declare @memo nvarchar(max)
	declare @po nvarchar(max)
	declare @pn nvarchar(max)
	
	declare cursor_table cursor for
	select sel,ordememo from @tmp
	open cursor_table
	fetch next from cursor_table
	into @sel,@memo
	while(@@FETCH_STATUS <> -1)
	begin
		select @po='',@pn=''
		
		if CHARINDEX('chr(10)',@memo)>0
		begin
			set @po = LEFT(@memo,CHARINDEX('chr(10)',@memo)-1)
			set @pn = substring(@memo,CHARINDEX('chr(10)',@memo)+7,LEN(@memo))
		end
		else
		begin
			set @po = @memo
		end
		update @tmp set po=@po,pn=@pn where sel=@sel
		fetch next from cursor_table
		into @sel,@memo
	end
	close cursor_table
	deallocate cursor_table
	------------------------------------------------------------------------------------------------------
	insert into @tmp(gno,custno)select '2',custno from @tmp group by custno
	insert into @tmp(gno,custno)select '3',custno from @tmp group by custno
	------------------------------------------------------------------------------------------------------
	update @tmp set cust=ISNULL(b.comp,''),serial=ISNULL(b.serial,'')
		,tel=ISNULL(b.tel,''),fax=ISNULL(b.fax,''),zip=ISNULL(b.zip_comp,''),addr=ISNULL(b.addr_comp,'')
	from @tmp a
	left join cust b on a.custno=b.noa
	
	update @tmp set tmoney=ISNULL(b.[money],0)
	from @tmp a
	left join (select custno, SUM(ISNULL([money],0)) [money] from @tmp group by custno) b on a.custno=b.custno
	update @tmp set ttax=ROUND(tmoney*0.05,0)
	update @tmp set ttotal=tmoney+ttax
	------------------------------------------------------------------------------------------------------
	declare @custno nvarchar(20)
	declare @noa nvarchar(20)
	declare @unit nvarchar(20)
	declare @mount float
	declare @weight float
	declare @invono nvarchar(max)
	declare @tmount nvarchar(max)
	
	declare @t_invono nvarchar(max)
	declare @t_tmount nvarchar(max)
	
	declare cursor_table cursor for
	select custno from @tmp group by custno
	open cursor_table
	fetch next from cursor_table
	into @custno
	while(@@FETCH_STATUS <> -1)
	begin
		select @t_invono='',@t_tmount=''
		declare cursor_table2 cursor for
		select noa from @tmp where custno=@custno group by noa
		open cursor_table2
		fetch next from cursor_table2
		into @noa
		while(@@FETCH_STATUS <> -1)
		begin
			set @invono = ''
			select @invono = invono from view_vcc where noa=@noa 
			set @t_invono = @t_invono + case when len(@t_invono)>0 and len(ISNULL(@invono,''))>0 then ',' else '' end + ISNULL(@invono,'')
			
			fetch next from cursor_table2
			into @noa
		end
		close cursor_table2
		deallocate cursor_table2
		
		declare cursor_table2 cursor for
		select unit,sum(isnull(mount,0)),sum(isnull([weight],0)) from @tmp where custno=@custno group by unit
		open cursor_table2
		fetch next from cursor_table2
		into @unit,@mount,@weight
		while(@@FETCH_STATUS <> -1)
		begin
			set @tmount = ''
			if upper(isnull(@unit,''))='KG' 
				or upper(isnull(@unit,''))='公斤' 
				or upper(isnull(@unit,''))='噸' 
				or upper(isnull(@unit,''))='頓' 
				or len(ISNULL(@unit,''))=0 
				or upper(ISNULL(@unit,''))='M2' 
				or upper(ISNULL(@unit,''))=N'M²' 
				or upper(ISNULL(@unit,''))='M'
				or upper(ISNULL(@unit,''))='批' 
			begin
				if ISNULL(@weight,0)!=0
					set @tmount = dbo.getComma(@weight,-1) + isnull(@unit,'')
			end
			else
			begin
				if ISNULL(@mount,0)!=0
					set @tmount = dbo.getComma(@mount,-1) + isnull(@unit,'')
			end
			set @t_tmount = @t_tmount + case when len(@t_tmount)>0 and len(ISNULL(@tmount,''))>0 then '、' else '' end + ISNULL(@tmount,'')
			
			fetch next from cursor_table2
			into @unit,@mount,@weight
		end
		close cursor_table2
		deallocate cursor_table2
		
		update @tmp set invono=@t_invono,tmount=@t_tmount where custno=@custno
		
		fetch next from cursor_table
		into @custno
	end
	close cursor_table
	deallocate cursor_table
	
	------------------------------------------------------------------------------------------------------
	select gno
		,'<img src="'+@t_path+'getlogo.aspx?noa=lienchy'+CHAR(38)+'db='+@t_db+'"/>' logo
		,custno a01
		,cust a02
		,tel a03
		,fax a04
		,post+addr a05
		,serial a06
		,@t_curnoa a07
		,dbo.AD2ChineseEraName(GETDATE()) a08
		
		,datea b01
		,noa b02
		,ordeno b03
		,po b04 --orde.po
		,product b05
		,case when len(size)>0 then size
			else dbo.getComma(dime,-1)
			+case when ISNULL(radius,0)!=0 then '+'+cast(radius as nvarchar) else '' end
			+case when ISNULL(width,0)!=0 then '*'+cast(width as nvarchar) else '' end
			+case when ISNULL(lengthb,0)!=0 then '*'+cast(lengthb as nvarchar) else '' end end  b06
		,case when upper(isnull(unit,''))='KG' 
			or upper(isnull(unit,''))='公斤' 
			or upper(isnull(unit,''))='噸' 
			or upper(isnull(unit,''))='頓' 
			or len(ISNULL(unit,''))=0 
			or upper(ISNULL(unit,''))='M2' 
			or upper(ISNULL(unit,''))=N'M²' 
			or upper(ISNULL(unit,''))='M'
			or upper(ISNULL(unit,''))='批' 
			then dbo.getComma([weight],-1)  
			else dbo.getComma(mount,-1) end + isnull(unit,'') b07
		,dbo.getComma(price,-1) b08
		,dbo.getComma([money],-1) b09
		,case when unit!=unit2 then unit2 else '' end b10
		
		,dbo.getComma(tmoney,-1) c01
		,dbo.getComma(ttax,-1) c02
		,dbo.getComma(ttotal,-1) c03
		,invono c04
		,tmount c05
		
	from @tmp order by custno,sel;

z_ummst9:--z_ummst9
	SET QUOTED_IDENTIFIER OFF
	declare @t_pageline int = 28   --------一頁幾行
	declare @t_bcustno nvarchar(35) = case when '#non'=[5] then '' else [5] end 
	declare @t_ecustno nvarchar(35) = case when '#non'=[6] then char(255) else [6] end
	declare @t_bmon nvarchar(20) = case when '#non'=[13] then '' else [13] end
	declare @t_emon nvarchar(20) = case when '#non'=[14] then char(255) else [14] end
	--======================================================================================
	declare @tmp1 table(
		custno nvarchar(20),
		mon nvarchar(10),
		[money] float,
		bkmoney float,
		tax float
	)
	insert into @tmp1(custno,mon,[money],bkmoney,tax)
	select custno,mon
	,SUM(case when typea='1' then ISNULL([money],0) else 0 end)
	,SUM(case when typea!='1' then ISNULL([money],0) else 0 end)
	,SUM(case when typea='1' then ISNULL([tax],0) else -ISNULL([tax],0) end)
	from view_vcc 
	where custno between @t_bcustno and @t_ecustno
	and mon <= @t_emon
	group by custno,mon
	
	declare @tmp2 table(
		custno nvarchar(20),
		mon nvarchar(10),
		tax float
	)
	insert into @tmp2(custno,mon,tax)
	select custno,mon,SUM(ISNULL([tax],0))
	from vcca
	where custno between @t_bcustno and @t_ecustno
	and mon <= @t_emon
	group by custno,mon
	
	declare @tmp3 table(
		custno nvarchar(20),
		mon nvarchar(10),
		paysale float 
	)
	insert into @tmp3(custno,mon,paysale)
	select case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
		when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
		else b.custno end
	,case when len(ISNULL(a.vccno,''))=0 then '' 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
		else isnull(c.mon,'') end
	,SUM(ISNULL(a.paysale,0))
	from umms a
	left join umm b on a.noa=b.noa
	left join view_vcc c on a.accy=c.accy and a.vccno=c.noa
	where --b.noa is not null and 
	ISNULL(a.paysale,0)!=0
	and case when len(ISNULL(a.vccno,''))=0 then '' 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
		else isnull(c.mon,'') end <= @t_emon
	group by case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
		when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
		else b.custno end
		,case when len(ISNULL(a.vccno,''))=0 then '' 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
		else isnull(c.mon,'') end
	delete @tmp3 where not(custno between @t_bcustno and @t_ecustno)
	--------------------------------------------------------------------------------------------------
	declare @tmp table(
		custno nvarchar(20),
		cust nvarchar(50),
		zip nvarchar(20),
		addr1 nvarchar(max),
		addr2 nvarchar(max),
		tel nvarchar(max),
		[money] float,
		bkmoney float,
		tax float,
		total float,
		payed float,
		unpay float,
		tot float
	)
	insert into @tmp(custno,[money],bkmoney,tax)
	select custno,SUM(ISNULL([money],0)),SUM(ISNULL([bkmoney],0)),SUM(ISNULL([tax],0))
	from @tmp1
	where mon between @t_bmon and @t_emon
	group by custno
	
	---------------------------------------------------------------------------------------
	update @tmp set tax = ISNULL(a.tax,0)+ISNULL(b.tax,0)
	from @tmp a
	right join @tmp2 b on a.custno=b.custno and b.mon between @t_bmon and @t_emon
	
	insert into @tmp(custno,[money],bkmoney,tax)
	select custno,0,0,tax
	from @tmp2 a
	where not exists(select * from @tmp where custno=a.custno)
	and a.mon between @t_bmon and @t_emon
	----------------------------------------------------------------------------------------
	update @tmp set total = ISNULL([money],0)-ISNULL(bkmoney,0)+ISNULL(tax,0)
	
	----------------------------------------------------------------------------------------
	update @tmp set payed=isnull(a.payed,0) + isnull(b.paysale,0)
	from @tmp a
	right join @tmp3 b on a.custno=b.custno and b.mon between @t_bmon and @t_emon
	
	insert into @tmp(custno,[money],bkmoney,tax,total, payed)
	select custno,0,0,0,0,paysale
	from @tmp3 a
	where not exists(select * from @tmp where custno=a.custno)
	and a.mon between @t_bmon and @t_emon
	------------------------------------------------------------------------------------------
	--unpay
	
	update @tmp set unpay = ISNULL(a.unpay,0)+ISNULL(b.unpay,0)
	from @tmp a
	right join (select custno ,SUM(ISNULL([money],0)-ISNULL(bkmoney,0)+isnull(tax,0)) unpay
		from @tmp1
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
	
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,a.unpay
	from (select custno ,SUM(ISNULL([money],0)-ISNULL(bkmoney,0)+isnull(tax,0)) unpay
		from @tmp1
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.unpay,0)!=0
	
	
	update @tmp set unpay = ISNULL(a.unpay,0)+ISNULL(b.unpay,0)
	from @tmp a
	right join (select custno ,sum(isnull(tax,0)) unpay
		from @tmp2
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
		
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,a.unpay
	from (select custno ,SUM(isnull(tax,0)) unpay
		from @tmp2
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.unpay,0)!=0
	
	update @tmp set unpay = ISNULL(a.unpay,0)-ISNULL(b.paysale,0)
	from @tmp a
	right join (select custno ,sum(isnull(paysale,0)) paysale
		from @tmp3
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
	
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,-a.paysale
	from (select custno ,sum(isnull(paysale,0)) paysale
		from @tmp3
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.paysale,0)!=0
	------------------------------------------------------------------------------------------
	update @tmp set tot = ISNULL([money],0)-ISNULL(bkmoney,0)+ISNULL(tax,0)-ISNULL(payed,0)+ISNULL(unpay,0)
	
	update @tmp set cust=c.comp,zip=c.zip_home,addr1=d.xaddr,addr2=d.yaddr,tel=c.tel
	from @tmp a
	left join cust c on a.custno=c.noa
	outer apply (select top 1 
		substring(c.addr_home,1,CHARINDEX(road,c.addr_home)+len(road)-1) xaddr,
		substring(c.addr_home,CHARINDEX(road,c.addr_home)+len(road),len(c.addr_home)) yaddr 
		from road where CHARINDEX(road,c.addr_home)>0 and CHARINDEX(city,c.addr_home)>0 order by road desc) d
	------------------------------------------------------------------------------------------
	--當月有帳款的才顯示
	delete @tmp where [money]=0 and bkmoney=0 and tax=0 and total=0 --and payed=0 and unpay=0 and tot=0
	
	--出貨明細
	declare @tmpa table(
		recno int,
		custno nvarchar(20),
		noa nvarchar(20),
		datea nvarchar(10),
		typea nvarchar(20),
		productno nvarchar(20),
		product nvarchar(50),
		size nvarchar(max),
		unit nvarchar(20),
		mount float,
		[weight] float,
		price float,
		total float,
		
		vcctax float,
		vcctotal float
	)
	insert into @tmpa(recno,custno,noa,datea,typea
		,productno,product,size,unit,mount,[weight],price,total
		,vcctax,vcctotal)	
	select ROW_NUMBER()over(partition by a.custno order by a.datea,a.noa,Min(b.noq))
		,a.custno,a.noa,a.datea,a.typea
		,b.productno,case when charindex(left(b.uno,1),'XYZ') > 0 then '廢料' else b.product end,dbo.csize(a.kind,b.dime,b.width,b.lengthb,b.radius)
		,b.unit,SUM(ISNULL(b.mount,0)),SUM(ISNULL(b.[weight],0)),b.price,SUM(ISNULL(b.total,0))
		,ISNULL(a.tax,0),ISNULL(a.total,0)
	from view_vcc a
	left join view_vccs b on a.accy=b.accy and a.noa=b.noa
	where a.custno between @t_bcustno and @t_ecustno
	and a.mon between @t_bmon and @t_emon
	group by a.custno,a.noa,a.typea,a.datea
		,b.productno,case when charindex(left(b.uno,1),'XYZ') > 0 then '廢料' else b.product end,dbo.csize(a.kind,b.dime,b.width,b.lengthb,b.radius)
		,b.unit,b.price,ISNULL(a.tax,0),ISNULL(a.total,0)
	order by a.custno,a.datea,a.noa,Min(b.noq)
	
	----------------------------------------------------------------------------------------------------------
	declare @tmpb table(
		gno nvarchar(10),
		currecno int,
		curpage int,
		totpage int,
		custno nvarchar(20),
		cust nvarchar(50),
		zip nvarchar(10),
		addr1 nvarchar(max),
		addr2 nvarchar(max),
		tel nvarchar(max),
		
		recno int,
		typea nvarchar(10),
		datea nvarchar(10),
		noa nvarchar(20),
		productno nvarchar(20),
		product nvarchar(50),
		size nvarchar(50),
		mount float,
		[weight] float,
		price float,
		vcctax float,
		vcctotal float,
		
		[money] float,
		bkmoney float,
		tax float,
		payed float,
		unpay float,
		tot float
	)
	
	insert into @tmpb(gno,custno,cust,zip,addr1,addr2,tel
		,recno,typea,datea,noa,productno,product,size,mount,[weight],price,vcctax,vcctotal
		,[money],bkmoney,tax,payed,unpay,tot)
	select '1',a.custno,a.cust,a.zip,a.addr1,a.addr2,a.tel
		,isnull(b.recno,0),b.typea,b.datea,b.noa,b.productno,b.product
		,b.size,b.mount,b.[weight],b.price,b.vcctax,b.vcctotal
		,a.[money],a.bkmoney,a.tax,a.payed,a.unpay,a.tot 
	from @tmp a
	left join @tmpa b on a.custno=b.custno

	
	insert into @tmpb(gno,recno,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot)
	select '4',0,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot
	from @tmp
	
	insert into @tmpb(gno,recno,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot)
	select '5',0,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot
	from @tmp
	
	insert into @tmpb(gno,recno,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot)
	select '6',0,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot
	from @tmp
	
	insert into @tmpb(gno,recno,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot)
	select '7',0,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot
	from @tmp
	
	insert into @tmpb(gno,recno,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot)
	select '8',0,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot
	from @tmp
	
	insert into @tmpb(gno,recno,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot)
	select '9',0,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot
	from @tmp
	
	insert into @tmpb(gno,recno,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot)
	select '10',0,custno,cust,zip,addr1,addr2,tel,[money],bkmoney,tax,payed,unpay,tot
	from @tmp
	--------------------------------------------------------------------------------------------
	declare @custno nvarchar(20)
	declare @cust nvarchar(50)
	declare @zip nvarchar(20)
	declare @addr1 nvarchar(max)
	declare @addr2 nvarchar(max)
	declare @tel nvarchar(max)
	declare @n int
	
	declare cursor_table cursor for
	select custno,cust,zip,addr1,addr2,tel,count(1) from @tmpb group by custno,cust,zip,addr1,addr2,tel
	open cursor_table
	fetch next from cursor_table
	into @custno,@cust,@zip,@addr1,@addr2,@tel,@n
	while(@@FETCH_STATUS <> -1)
	begin		
		if(@n%@t_pageline!=0)
		begin
			set @n=@n+1
			insert into @tmpb(gno,custno,cust,zip,addr1,addr2,tel,recno)values('2',@custno,@cust,@zip,@addr1,@addr2,@tel,0)
		end
		while(@n%@t_pageline!=0)
		begin
			set @n=@n+1
			insert into @tmpb(gno,custno,cust,zip,addr1,addr2,tel,recno)values('3',@custno,@cust,@zip,@addr1,@addr2,@tel,@n)
		end
		fetch next from cursor_table
		into @custno,@cust,@zip,@addr1,@addr2,@tel,@n
	end
	close cursor_table
	deallocate cursor_table
	
	update @tmpb set currecno = b.currecno 
	from @tmpb a
	left join (select custno,gno,recno,ROW_NUMBER()over(partition by custno order by gno,recno) currecno 
		from @tmpb ) b on a.custno=b.custno and a.gno=b.gno and a.recno=b.recno
	
	update @tmpb set curpage = floor((a.currecno-1)/@t_pageline)+1,totpage=floor((b.currecno-1)/@t_pageline)+1
	from @tmpb a
	outer apply (select top 1 currecno from @tmpb where a.custno=custno order by currecno desc)b	
	
	select custno a01
		,cust a02
		,zip a03
		,addr1 a04
		,addr2 a05
		,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">電　　話：'+tel +'</a>' a06
		,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">第'+CAST(curpage as nvarchar)+'/'+CAST(totpage as nvarchar)+'頁</a>' d01
		,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">日期區間：'+@t_bmon+'至'+ @t_emon +'</a>' d02
		,case when ROW_NUMBER()over(partition by custno,noa order by recno)=1 and gno='1' then '<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+case typea when '1' then '出' else '退' end +'&nbsp'+CHAR(59)+ RIGHT(datea,5) +'</a>' else '' end b01
		,case when ROW_NUMBER()over(partition by custno,noa order by recno)=1 and gno='1' then noa else '' end b02
		,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+replace(product,'~#$',char(39)) +'</a>' b03
		,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+case when size='0' then '' else size end+'</a>' b04
		,case when charindex('管',product)>0 then dbo.getComma(mount,0) else '' end b05
		,case when charindex('運費',product)>0 then '' when charindex('管',product)=0 or charindex('廢料',product)>0 then dbo.getComma([weight],0) else '' end b06
		,dbo.getComma(price,3) b07
		,case when ROW_NUMBER()over(partition by custno,noa order by recno)=1 and gno='1' then dbo.getComma(vcctax,0) else '' end b08 
		,case when ROW_NUMBER()over(partition by custno,noa order by recno)=1 and gno='1' then dbo.getComma(vcctotal,0) else '' end b09
		,dbo.getComma(isnull([money],0)-isnull(bkmoney,0),0) c01--合計
		,dbo.getComma(isnull(tax,0),0) c02--營業稅
		,dbo.getComma(isnull([money],0)-isnull(bkmoney,0)+isnull(tax,0),0) c03--總金額
		,dbo.getComma(0,0) c04--折讓
		,dbo.getComma(isnull(payed,0),0) c05--已收
		,dbo.getComma(isnull([money],0)-isnull(bkmoney,0)+isnull(tax,0)-isnull(payed,0),0) c06--本期應收
		,dbo.getComma(0,0) c07--預收貨款
		,dbo.getComma(isnull(unpay,0),0) c08--前期餘額
		,dbo.getComma(isnull(tot,0),0) c09--總應收款
		,* 
	from @tmpb 
	order by custno,cast(gno as int),recno;
	
z_ummst03:--z_ummst03 
	SET QUOTED_IDENTIFIER OFF 
	declare @cmd nvarchar(max) 

	declare @t_bmon nvarchar(10) = case when '#non' = [13] then '' else [13] end
	declare @t_emon nvarchar(10) = case when '#non' = [14] then CHAR(255) else [14] end
	declare @t_bcustno nvarchar(20) = case when '#non' = [5] then '' else [5] end
	declare @t_ecustno nvarchar(20) = case when '#non' = [6] then CHAR(255) else [6] end
	declare @t_memo nvarchar(max) = case when '#non' = [19] then '' else [19] end
	declare @t_proj nvarchar(max) = '[25]'
	---------------------------------------------------------------------------------
	declare @tmp1 table(
		custno nvarchar(20),
		mon nvarchar(10),
		[money] float,
		bkmoney float,
		tax float
	)
	insert into @tmp1(custno,mon,[money],bkmoney,tax)
	select custno,mon
	,SUM(case when typea='1' then ISNULL([money],0) else 0 end)
	,SUM(case when typea!='1' then ISNULL([money],0) else 0 end)
	,SUM(case when typea='1' then ISNULL([tax],0) else -ISNULL([tax],0) end)
	from view_vcc 
	where custno between @t_bcustno and @t_ecustno
	and mon <= @t_emon
	group by custno,mon
	
	declare @tmp2 table(
		custno nvarchar(20),
		mon nvarchar(10),
		tax float
	)
	
	if((select count(*) from acomp where acomp like '%信屹%')>0)--月結 將折讓單稅額也要付款
	begin
		insert into @tmp2(custno,mon,tax)
		select custno,mon,SUM(tax) from (
			select custno,mon,ISNULL([tax],0)tax from vcca
			where custno between @t_bcustno and @t_ecustno
			and mon<=@t_emon
			union all
			select custno,mon,-1*ISNULL([tax],0)tax from vccb
			where (typea='1' or typea='2') and custno between @t_bcustno and @t_ecustno
			and mon<=@t_emon
		)tmp group by custno,mon
	end
	else
	begin
		insert into @tmp2(custno,mon,tax)
		select custno,mon,SUM(ISNULL([tax],0))
		from vcca
		where custno between @t_bcustno and @t_ecustno
		and mon <= @t_emon
		group by custno,mon
	end
	
	declare @tmp3 table(
		custno nvarchar(20),
		mon nvarchar(10),
		paysale float 
	)
	insert into @tmp3(custno,mon,paysale)
	select case when isnull(a.custno,'')!='' then a.custno when isnull(c.custno,'')!='' then c.custno else b.custno end
	,case when isnull(a.paymon,'')!='' then a.paymon else isnull(c.mon,'') end
	,SUM(ISNULL(a.paysale,0))
	from umms a
	left join umm b on a.noa=b.noa
	left join view_vcc c on a.accy=c.accy and a.vccno=c.noa
	where --b.noa is not null and 
	ISNULL(a.paysale,0)!=0
	and case when isnull(a.paymon,'')!='' then a.paymon else isnull(c.mon,'') end <= @t_emon
	group by case when isnull(a.custno,'')!='' then a.custno when isnull(c.custno,'')!='' then c.custno else b.custno end
		,case when isnull(a.paymon,'')!='' then a.paymon else isnull(c.mon,'') end
	
	--insert into @tmp3(custno,mon,paysale)
	--select case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
	--	when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
	--	else b.custno end
	--,case when len(ISNULL(a.vccno,''))=0 then '' 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
	--	else isnull(c.mon,'') end
	--,SUM(ISNULL(a.paysale,0))
	--from umms a
	--left join umm b on a.noa=b.noa
	--left join view_vcc c on a.accy=c.accy and a.vccno=c.noa
	--where b.noa is not null
	--and ISNULL(a.paysale,0)!=0
	--and case when len(ISNULL(a.vccno,''))=0 then '' 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
	--	else isnull(c.mon,'') end <= @t_emon
	--group by case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
	--	when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
	--	else b.custno end
	--	,case when len(ISNULL(a.vccno,''))=0 then '' 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
	--	else isnull(c.mon,'') end
	
	delete @tmp3 where not(custno between @t_bcustno and @t_ecustno)
	--------------------------------------------------------------------------------------------------
	declare @tmp table(
		custno nvarchar(20),
		[money] float,
		bkmoney float,
		tax float,
		total float,
		payed float,
		unpay float,
		tot float
	)
	insert into @tmp(custno,[money],bkmoney,tax)
	select custno,SUM(ISNULL([money],0)),SUM(ISNULL([bkmoney],0)),SUM(ISNULL([tax],0))
	from @tmp1
	where mon between @t_bmon and @t_emon
	group by custno
	
	---------------------------------------------------------------------------------------
	update @tmp set tax = ISNULL(a.tax,0)+ISNULL(b.tax,0)
	from @tmp a
	right join @tmp2 b on a.custno=b.custno and b.mon between @t_bmon and @t_emon
	
	insert into @tmp(custno,[money],bkmoney,tax)
	select custno,0,0,tax
	from @tmp2 a
	where not exists(select * from @tmp where custno=a.custno)
	and a.mon between @t_bmon and @t_emon
	----------------------------------------------------------------------------------------
	update @tmp set total = ISNULL([money],0)-ISNULL(bkmoney,0)+ISNULL(tax,0)
	
	----------------------------------------------------------------------------------------
	update @tmp set payed=isnull(a.payed,0) + isnull(b.paysale,0)
	from @tmp a
	right join @tmp3 b on a.custno=b.custno and b.mon between @t_bmon and @t_emon
	
	insert into @tmp(custno,[money],bkmoney,tax,total, payed)
	select custno,0,0,0,0,paysale
	from @tmp3 a
	where not exists(select * from @tmp where custno=a.custno)
	and a.mon between @t_bmon and @t_emon
	------------------------------------------------------------------------------------------
	--unpay
	
	update @tmp set unpay = ISNULL(a.unpay,0)+ISNULL(b.unpay,0)
	from @tmp a
	right join (select custno ,SUM(ISNULL([money],0)-ISNULL(bkmoney,0)+isnull(tax,0)) unpay
		from @tmp1
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
	
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,a.unpay
	from (select custno ,SUM(ISNULL([money],0)-ISNULL(bkmoney,0)+isnull(tax,0)) unpay
		from @tmp1
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.unpay,0)!=0
	
	
	update @tmp set unpay = ISNULL(a.unpay,0)+ISNULL(b.unpay,0)
	from @tmp a
	right join (select custno ,sum(isnull(tax,0)) unpay
		from @tmp2
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
		
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,a.unpay
	from (select custno ,SUM(isnull(tax,0)) unpay
		from @tmp2
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.unpay,0)!=0
	
	update @tmp set unpay = ISNULL(a.unpay,0)-ISNULL(b.paysale,0)
	from @tmp a
	right join (select custno ,sum(isnull(paysale,0)) paysale
		from @tmp3
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
	
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,-a.paysale
	from (select custno ,sum(isnull(paysale,0)) paysale
		from @tmp3
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.paysale,0)!=0
	------------------------------------------------------------------------------------------
	update @tmp set tot = ISNULL([money],0)-ISNULL(bkmoney,0)+ISNULL(tax,0)-ISNULL(payed,0)+ISNULL(unpay,0)
	
	declare @linecount int --每頁行數
	declare @endcount int --總計行數
	set @linecount = 11
	--set @endcount = 7
	
	declare @custno nvarchar(20)
	declare @money float
	declare @bkmoney float
	declare @tax float
	declare @total float
	declare @payed float
	declare @unpay float
	declare @tot float
	declare @nn int
	declare @mm int
	declare @totpage int
	
	declare @result table(
		gno nvarchar(10),
		pno int,
		totpage int,
		custno nvarchar(20),
		[money] float,
		bkmoney float,
		tax float,
		total float,
		payed float,
		unpay float,
		tot float,
		
		nn int,--出貨單張數
		
		typea nvarchar(10),
		datea nvarchar(10),
		vccno nvarchar(20),
		productno nvarchar(20),
		product nvarchar(50),
		size nvarchar(max),
		unit nvarchar(20),
		[weight] float,
		mount float,
		price float,
		moneys float,
		memo nvarchar(max)
	)
	
	declare cursor_table cursor for
	select custno,[money],bkmoney,tax,total,payed,unpay,tot from @tmp
	open cursor_table
	fetch next from cursor_table
	into @custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select top 1 * from @tmp1 where custno=@custno and mon between @t_bmon and @t_emon)
		begin
			insert into @result(gno,pno,custno
				,typea,datea,vccno,productno,product,unit,[weight],mount,price,moneys
				,size)
			select '1','1',@custno
			,case when a.typea='1' then '出' else '退' end
			,a.datea,a.noa,b.productno,b.product,b.unit
			--,case when len(b.uno)>0 or len(b.style)>0 or b.dime!=0 then b.[weight] else null end
			--,case when len(b.uno)>0 or len(b.style)>0 or b.dime!=0 then b.mount  else null end
			--,case when len(b.uno)>0 or len(b.style)>0 or b.dime!=0 then b.price  else null end
			,b.weight
			,b.mount
			,b.price
			,b.total
			,case when len(ISNULL(b.size,''))>0 then b.size else dbo.csize(a.kind,b.dime,b.width,b.lengthb,b.radius) end
			from view_vcc a
			left join view_vccs b on a.noa=b.noa
			where a.custno=@custno 
			and a.mon between @t_bmon and @t_emon
			order by a.datea,a.noa,b.noq
			
			insert into @result(gno,pno,custno
				,typea,datea,vccno,productno,product,unit,[weight],mount,price,moneys)
			select '2','2',@custno
			,'稅',datea,noa,'','稅額','',null,null,null,tax
			from view_vcc 
			where custno=@custno 
			and mon between @t_bmon and @t_emon
			and isnull(tax,0)!=0
		end
		if exists(select top 1 * from @tmp2 where custno=@custno and mon between @t_bmon and @t_emon)
		begin
			insert into @result(gno,pno,custno,typea,datea,vccno,productno,product,unit,[weight],mount,price,moneys)
			select '2','2',@custno	,'稅',datea,noa,'稅額','','',0,0,0,tax 
			from vcca where custno=@custno and mon between @t_bmon and @t_emon
			
			if((select count(*) from acomp where acomp like '%信屹%')>0)--月結 將折讓單稅額也要付款
			begin
				insert into @result(gno,pno,custno,typea,datea,vccno,productno,product,unit,[weight],mount,price,moneys)
				select '2','2',@custno	,'折',datea,noa,'稅額','','',0,0,0,tax 
				from vccb where (typea='1' or typea='2') and custno=@custno and mon between @t_bmon and @t_emon
			end 
		end
		
		set @endcount = 7
		set @endcount = @endcount + case when isnull(@payed,0)=0 then -1 else 0 end 
		set @endcount = @endcount + case when isnull(@unpay,0)=0 then -1 else 0 end
		set @endcount = @endcount + case when isnull(@payed,0)=0 and isnull(@unpay,0)=0 then -1 else 0 end
		
		select @mm = COUNT(1) from @result where custno=@custno
		if @mm>0 or @money!=0 or @bkmoney !=0 or @tax !=0 or @payed !=0 or @unpay!=0 or @tot!=0
		begin
			if(@mm+@endcount)%@linecount != 0
			begin
				insert into @result(gno,pno,custno,memo)
				select '3','3',@custno,'---以下空白---'
				set @mm = @mm + 1
				while @linecount-@mm%@linecount!=@endcount
				begin
					insert into @result(gno,pno,custno)
					select '4','4',@custno
					set @mm = @mm + 1
				end
			end
			
			insert into @result(gno,pno,custno,[money],bkmoney,tax,total,payed,unpay,tot)
			select '5','5',@custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
			insert into @result(gno,pno,custno,[money],bkmoney,tax,total,payed,unpay,tot)
			select '6','6',@custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
			insert into @result(gno,pno,custno,[money],bkmoney,tax,total,payed,unpay,tot)
			select '7','7',@custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
			insert into @result(gno,pno,custno,[money],bkmoney,tax,total,payed,unpay,tot)
			select '8','8',@custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
			if isnull(@payed,0)!=0
			begin
				insert into @result(gno,pno,custno,[money],bkmoney,tax,total,payed,unpay,tot)
				select '9','9',@custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
			end
			if isnull(@unpay,0)!=0
			begin
				insert into @result(gno,pno,custno,[money],bkmoney,tax,total,payed,unpay,tot)
				select '10','10',@custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
			end
			if not(isnull(@payed,0)=0 and isnull(@unpay,0)=0)
			begin
				insert into @result(gno,pno,custno,[money],bkmoney,tax,total,payed,unpay,tot)
				select '11','11',@custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
			end
			
			select @nn = count(1) from (select vccno from @result where custno=@custno and gno='1' group by vccno)a
			select @totpage = COUNT(1) from @result where custno=@custno
			update @result set nn = ISNULL(@nn,0),totpage = @totpage/@linecount where custno=@custno
		end
		fetch next from cursor_table
		into @custno,@money,@bkmoney,@tax,@total,@payed,@unpay,@tot
	end
	close cursor_table
	deallocate cursor_table

	select a.* 
	,(ROW_NUMBER()over(partition by a.custno order by pno)-1)/@linecount+1 pp
	,a.totpage qq
	,a.datea dd
	,a.typea tt
	,a.unit uu
	,a.mount a1
	,a.[weight] a2
	,a.price a3
	,dbo.getComma(a.[moneys],0) a4
	,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+replace(b.comp,'~#$',"'") +'</a>'comp
	,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+b.nick+'</a>' nick
	,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+case when @t_proj!='pe' then b.addr_comp else b.addr_home end+'</a>' addr
	,dbo.getComma(a.[money],0) b1
	,dbo.getComma(a.[bkmoney],0) b2
	,dbo.getComma(a.[tax],0) b3
	,dbo.getComma(a.[total],0) b4
	,dbo.getComma(a.[payed],0) b5
	,dbo.getComma(a.[unpay],0) b6
	,dbo.getComma(a.[tot],0) b7
	,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+@t_memo+'</a>' memot
	,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+replace(product,'~#$',char(39)) +'</a>' ppt
	,'<a style="font-family:'+ "'Times New Roman','標楷體', serif"+char(59)+'">'+replace(size,'~#$',char(39)) +'</a>' csize
	from @result a
	left join cust b on a.custno=b.noa
	order by a.custno,case when len(isnull(a.vccno,''))=0 then 2 else 1 end,isnull(a.vccno,''),a.pno;

z_ummst02:--z_ummst02 
	SET QUOTED_IDENTIFIER OFF 
	declare @cmd nvarchar(max) 

	declare @t_bmon nvarchar(10) 
	declare @t_emon nvarchar(10) 
	declare @t_bcustno nvarchar(20) 
	declare @t_ecustno nvarchar(20) 

	set @t_bmon = case when '#non' = [13] then '' else [13] end
	set @t_emon = case when '#non' = [14] then CHAR(255) else [14] end
	set @t_bcustno = case when '#non' = [5] then '' else [5] end
	set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
	---------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#tmp1')is not null
	BEGIN
		set @cmd = 'drop table #tmp1'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp2')is not null
	BEGIN
		set @cmd = 'drop table #tmp2'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp3')is not null
	BEGIN
		set @cmd = 'drop table #tmp3'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp4')is not null
	BEGIN
		set @cmd = 'drop table #tmp4'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp5')is not null
	BEGIN
		set @cmd = 'drop table #tmp5'
		EXECUTE sp_executesql @cmd
	END
	
	create table #tmp1(
		custno nvarchar(20),
		mon nvarchar(10),--帳款月份	
		[money] float,
		tax float,
		total float
	)
	create table #tmp2(
		custno nvarchar(20),
		mon nvarchar(20),--帳款月份
		[money] float,
		tax float,
		total float
	)
	create table #tmp3(
		custno nvarchar(20),
		mon nvarchar(20),--帳款月份
		paysale float
	)
	
	create table #tmp4(
		custno nvarchar(20),
		mon nvarchar(10),
		[money] float,
		tax float,
		paysale float,
		unpay float
	)
	
	create table #tmp5(
		gno nvarchar(10),
		custno nvarchar(20),
		memo nvarchar(max),
		
		[money] float,
		pay float,
		unpay float
	)
	
	insert into #tmp1(custno,mon,[money],tax,total)
	select custno,mon
	,SUM(case when typea='1' then ISNULL([money],0) else -ISNULL([money],0) end)
	,SUM(case when typea='1' then ISNULL([tax],0) else -ISNULL([tax],0) end)
	,SUM(case when typea='1' then ISNULL([total],0) else -ISNULL([total],0) end)
	from view_vcc
	where custno between @t_bcustno and @t_ecustno
	and mon<=@t_emon
	group by custno,mon
	
	if((select count(*) from acomp where acomp like '%信屹%')>0)--月結 將折讓單稅額也要付款
	begin
		insert into #tmp2(custno,mon,[money],tax,total)
		select custno,mon,SUM(money),SUM(tax),SUM(total) from (
			select custno,mon,ISNULL([money],0)[money],ISNULL([tax],0)tax,ISNULL([total],0)total
			from vcca
			where custno between @t_bcustno and @t_ecustno
			and mon<=@t_emon
			union all
			select custno,mon,-1*ISNULL([money],0)[money],-1*ISNULL([tax],0)tax,-1*ISNULL([total],0)total
			from vccb
			where (typea='1' or typea='2') and custno between @t_bcustno and @t_ecustno
			and mon<=@t_emon
		)tmp group by custno,mon
	end
	else
	begin
		insert into #tmp2(custno,mon,[money],tax,total)
		select custno,mon,SUM(ISNULL([money],0)),SUM(ISNULL([tax],0)),SUM(ISNULL([total],0))
		from vcca
		where custno between @t_bcustno and @t_ecustno
		and mon<=@t_emon
		group by custno,mon
	end
	
	insert into #tmp3(custno,mon,paysale)
	select case when isnull(a.custno,'')!='' then a.custno
		when isnull(c.custno,'')!='' then c.custno else b.custno end
	,case when isnull(a.paymon,'')!='' then a.paymon else isnull(c.mon,'') end
	,SUM(ISNULL(a.paysale,0))
	from umms a
	left join umm b on a.noa=b.noa
	left join view_vcc c on a.accy=c.accy and a.vccno=c.noa
	where --b.noa is not null and 
	ISNULL(a.paysale,0)!=0
	and case when isnull(a.custno,'')!='' then a.custno
		when isnull(c.custno,'')!='' then c.custno else b.custno end between @t_bcustno and @t_ecustno
	and case when isnull(a.paymon,'')!='' then a.paymon else isnull(c.mon,'') end <= @t_emon
	group by case when isnull(a.custno,'')!='' then a.custno
		when isnull(c.custno,'')!='' then c.custno else b.custno end
	,case when isnull(a.paymon,'')!='' then a.paymon else isnull(c.mon,'') end
	
	--insert into #tmp3(custno,mon,paysale)
	--select case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
	--	when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
	--	else b.custno end
	--,case when len(ISNULL(a.vccno,''))=0 then '' 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
	--	else isnull(c.mon,'') end
	--,SUM(ISNULL(a.paysale,0))
	--from umms a
	--left join umm b on a.noa=b.noa
	--left join view_vcc c on a.accy=c.accy and a.vccno=c.noa
	--where b.noa is not null
	--and ISNULL(a.paysale,0)!=0
	--and case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
	--	when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
	--	else b.custno end between @t_bcustno and @t_ecustno
	--and case when len(ISNULL(a.vccno,''))=0 then '' 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
	--	else isnull(c.mon,'') end <= @t_emon
	--group by case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
	--	when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
	--	else b.custno end
	--	,case when len(ISNULL(a.vccno,''))=0 then '' 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
	--	when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
	--	else isnull(c.mon,'') end
	
	---------------------------------------------------------------------------------------
	insert into #tmp4(custno,mon,[money],tax)
	select custno,mon,[money],tax from #tmp1
	
	---------------------------------------------------------------------------------------
	update #tmp4 set tax = isnull(a.tax,0) + isnull(b.tax,0)
	from #tmp4 a
	left join #tmp2 b on a.custno=b.custno and a.mon=b.mon
	
	insert into #tmp4(custno,mon,[money],tax)
	select custno,mon,0,tax from #tmp2 a
	where not exists(select * from #tmp4 where custno=a.custno and mon=a.mon)
	---------------------------------------------------------------------------------------
	update #tmp4 set paysale=ISNULL(b.paysale,0)
	from #tmp4 a
	left join #tmp3 b on a.custno=b.custno and a.mon=b.mon
	
	insert into #tmp4(custno,mon,[money],tax,paysale)
	select custno,mon,0,0,paysale from #tmp3 a
	where not exists(select * from #tmp4 where custno=a.custno and mon=a.mon)
	---------------------------------------------------------------------------------------
	update #tmp4 set unpay = ISNULL(money,0)+ISNULL(tax,0)-ISNULL(paysale,0)
	
	---------------------------------------------------------------------------------------
	declare @custno nvarchar(20)
	declare @mon nvarchar(10)
	declare @money float
	declare @tax float
	declare @pay float
	declare @unpay float
	
	declare cursor_table cursor for
	select custno from #tmp4 group by custno
	open cursor_table
	fetch next from cursor_table
	into @custno
	while(@@FETCH_STATUS <> -1)
	begin
		set @cmd = ''
		declare cursor_table2 cursor for
		select mon,unpay from #tmp4 
		where custno=@custno and unpay !=0 and mon<@t_bmon
		order by mon
		open cursor_table2
		fetch next from cursor_table2
		into @mon,@unpay
		while(@@FETCH_STATUS <> -1)
		begin
			set @cmd = @cmd + case when LEN(@cmd)>0 then ', ' else '' end 
				+case when len(@mon)>0 then @mon else '無帳款月份'end
				+'：'+reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,@unpay),1)),4,12))
		
			fetch next from cursor_table2
			into @mon,@unpay
		end
		close cursor_table2
		deallocate cursor_table2
		
		select @money=0,@tax=0,@pay=0,@unpay=0
		select @money=SUM(ISNULL([money],0)),@tax=SUM(ISNULL([tax],0)),@pay=SUM(ISNULL([paysale],0)) from #tmp4 where custno=@custno and mon between @t_bmon and @t_emon
		select @unpay=SUM(ISNULL([unpay],0)) from #tmp4 where custno=@custno
		
		insert into #tmp5(gno,custno,memo,[money],pay,unpay)values('1',@custno,@cmd,@money+@tax,@pay,@unpay)
	
		fetch next from cursor_table
		into @custno
	end
	close cursor_table
	deallocate cursor_table
	
	insert into #tmp5(gno,[money],pay,unpay)
	select '2',SUM(ISNULL([money],0)),SUM(ISNULL(pay,0)),SUM(ISNULL(unpay,0)) from #tmp5
	
	select a.*,b.nick
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[money]),1)),4,12)) aa1
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[pay]),1)),4,12)) aa2
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,[unpay]),1)),4,12)) aa3
	from #tmp5 a
	left join cust b on a.custno=b.noa
	order by gno,custno
	
	IF OBJECT_ID('tempdb..#tmp1')is not null
	BEGIN
		set @cmd = 'drop table #tmp1'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp2')is not null
	BEGIN
		set @cmd = 'drop table #tmp2'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp3')is not null
	BEGIN
		set @cmd = 'drop table #tmp3'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp4')is not null
	BEGIN
		set @cmd = 'drop table #tmp4'
		EXECUTE sp_executesql @cmd
	END
	IF OBJECT_ID('tempdb..#tmp5')is not null
	BEGIN
		set @cmd = 'drop table #tmp5'
		EXECUTE sp_executesql @cmd
	END
	;

z_ummst01:--z_ummst01
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_detail nvarchar(max)
	
	set @t_bdate = case when '#non' = [3] then '' else [3] end
	set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
	set @t_bcustno = case when '#non' = [5] then '' else [5] end
	set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
	set @t_detail = case when '#non'=[21] then '' else [21] end
	---------------------------------------------------------------------------------
	declare @recno int
	declare @custno nvarchar(20)
	declare @datea nvarchar(10)
	declare @vccno nvarchar(max)
	declare @paysale float 
	declare @opay float
	
	declare @tmp table(
		gno nvarchar(10),
		recno int,
		custno nvarchar(20),
		datea nvarchar(10),
		
		noa nvarchar(20),
		noq nvarchar(10),
		acc1 nvarchar(20),
		acc2 nvarchar(max),
		[money] float,
		checkno nvarchar(20),
		bankno nvarchar(20),
		bank nvarchar(max),
		indate nvarchar(10),
		
		vccno nvarchar(20),
		paysale float,
		
		mm1 float,
		mm2 float,
		mm3 float,
		opay float
	)
	--select * from umm
	
	--收款金額
	insert into @tmp(recno,custno,datea,noa,noq,acc1,acc2,[money],checkno,bankno,bank,indate)
	select ROW_NUMBER()over(partition by a.custno,a.datea order by a.noa,a.noq),a.*
	from(
		select b.custno,b.datea,a.noa,a.noq,a.acc1,a.acc2,a.[money],a.checkno,a.bankno,a.bank,a.indate
		from umms a
		left join umm b on a.noa=b.noa
		where --b.noa is not null and 
		b.datea between @t_bdate and @t_edate
		and b.custno between @t_bcustno and @t_ecustno
		and isnull(a.[money],0)!=0
		union all
		select custno,datea,noa,'','','預收沖帳',unopay,'','','','' from umm 
		where isnull(unopay,0)!=0
		and datea between @t_bdate and @t_edate
		and custno between @t_bcustno and @t_ecustno
	)a
	order by a.custno,a.datea,a.noa,a.noq
	
	--沖帳
	declare cursor_table cursor for
	select b.custno,b.datea,a.vccno,a.paysale
	from umms a
	left join umm b on a.noa=b.noa
	where --b.noa is not null and 
	b.datea between @t_bdate and @t_edate
	and b.custno between @t_bcustno and @t_ecustno
	and isnull(a.paysale,0)!=0
	order by b.custno,b.datea,a.noa,a.noq
	open cursor_table
	fetch next from cursor_table
	into @custno,@datea,@vccno,@paysale
	while(@@FETCH_STATUS <> -1)
	begin
		set @recno = 0
		select @recno = recno
		from @tmp where custno=@custno and datea=@datea and len(ISNULL(vccno,''))=0

		if @recno>0
		begin
			update @tmp set vccno=@vccno,paysale=@paysale where custno=@custno and datea=@datea and recno=@recno
		end
		else
		begin
			select @recno = max(recno)
			from @tmp where custno=@custno and datea=@datea
			set @recno = ISNULL(@recno,0)+1
			insert into @tmp(recno,custno,datea,vccno,paysale)
			select @recno,@custno,@datea,@vccno,@paysale
		end
	
		fetch next from cursor_table
		into @custno,@datea,@vccno,@paysale
	end
	close cursor_table
	deallocate cursor_table
	----------------------------------------------------------------------------------------
	insert into @tmp(gno,custno,datea,mm1,mm2,mm3)
	select '1',custno,''
	,SUM(case when len(isnull(noq,''))=0 then ISNULL([money],0) else 0 end) --預收沖帳
	,SUM(case when len(isnull(noq,''))>0 then ISNULL([money],0) else 0 end) --收款金額	
	,SUM(ISNULL(paysale,0))--沖帳金額
	from @tmp
	group by custno

	declare cursor_table cursor for
	select b.custno,SUM(ISNULL(a.[money],0)-ISNULL(a.paysale,0))
	from umms a
	left join umm b on a.noa=b.noa
	where --b.noa is not null or 
	b.custno between @t_bcustno and @t_ecustno
	and b.datea <= @t_edate
	group by b.custno
	open cursor_table
	fetch next from cursor_table
	into @custno,@opay
	while(@@FETCH_STATUS <> -1)
	begin
		if exists(select * from @tmp where custno=@custno and gno='1')
		begin
			update @tmp set opay=@opay where custno=@custno and gno='1'
		end
		else
		begin
			insert into @tmp(gno,custno,datea,opay)
			select '1',@custno,'',@opay
		end
	
		fetch next from cursor_table
		into @custno,@opay
	end
	close cursor_table
	deallocate cursor_table
	
	if LEN(@t_detail)>0
	begin
		update @tmp set gno='2' where gno is null
	end
	else
	begin
		delete @tmp where gno is null
		update @tmp set gno='3' where gno='1'
	end
	select a.* 
	,b.comp tcomp
	,b.nick tnick
	from @tmp a
	left join cust b on a.custno=b.noa
	order by a.custno,a.datea,a.recno;


z_ummst1:--z_ummst1
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
set @t_cno = case when '#non' = [1] then '' else [1] end
set @t_part = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table( 
	gno nvarchar(1), 
	noa nvarchar(30), 
	noq nvarchar(20), 
	datea nvarchar(10), 
	cno nvarchar(20), 
	acc1 nvarchar(20),
	typea nvarchar(50), 
	custno nvarchar(20), 
	comp nvarchar(50), 
	[money] int, 
	chgs int, 
	paysales int, 
	mons nvarchar(6), 
	part nvarchar(10), 
	vccno nvarchar(20), 
	unpay int, 
	checkno nvarchar(20), 
	bank nvarchar(20), 
	indate nvarchar(10), 
	acomp nvarchar(50), 
	account nvarchar(20), 
	memo nvarchar(200) 
) 
insert into @tmp 
	select '0' gno,b.noa,b.noq,a.datea,a.cno,b.acc1,b.acc2,a.custno,left(a.comp,4),b.money,b.chgs,b.paysale,b.mon,b.part,b.vccno,a.unpay, 
	b.checkno,b.bank,b.indate,left(a.acomp,4),b.account,b.memo 
from umm a 
left join umms b on b.noa = a.noa 
where (LEN(@t_cno) = 0 or a.cno = @t_cno) and 
	(LEN(@t_part) = 0 or b.partno = @t_part) and 
	(a.datea between @t_bdate and @t_edate) 
	and (a.custno between @t_bcustno and @t_ecustno)
insert into @tmp
	select '1' gno,'','','','','','',custno,MAX(comp),sum(money),sum(chgs),sum(paysales),'','','',sum(unpay), 
	'','','','','','' m
from @tmp
group by custno 
	
select gno,noa,noq,datea,cno,acc1,typea,custno,comp, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysales),1)),4,12)) paysales, 
	mons,part,vccno,unpay,checkno,bank,indate,acomp,account,memo 
from @tmp 
order by custno,gno,noa,noq; 
--*************************************************************************************************************************************
z_ummst2:--z_ummst2
declare @t_cno nvarchar(20)
declare @t_part nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
set @t_cno = case when '#non' = [1] then '' else [1] end
set @t_part = case when '#non' = [2] then '' else [2] end
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
declare @tmp table( 
	gno nvarchar(1), 
	noa nvarchar(30), 
	noq nvarchar(20), 
	datea nvarchar(10), 
	cno nvarchar(20), 
	typea nvarchar(50), 
	custno nvarchar(20), 
	comp nvarchar(50), 
	[money] int, 
	chgs int, 
	paysales int, 
	mons nvarchar(6), 
	part nvarchar(10), 
	vccno nvarchar(20), 
	unpay int, 
	checkno nvarchar(20), 
	bank nvarchar(20), 
	indate nvarchar(10), 
	opay int, 
	unopay int, 
	textopay int 
) 
--上期餘額
insert into @tmp 
	select '0' gno,null,'000',null,null,'上期餘額',a.custno,left(a.comp,4),null,null,null,null,null,null,null, 
	null,null,null,sum(a.opay),sum(a.unopay),SUM(a.opay)-SUM(a.unopay)
	from umm a 
	where (LEN(@t_cno) = 0 or a.cno = @t_cno) and 
	(a.datea <@t_bdate) and 
	(a.custno between @t_bcustno and @t_ecustno) 
	group by a.custno,a.comp
--指定時間的資料 
insert into @tmp 
	select '0' gno,a.noa,case when len(b.noq)>0 then b.noq else '001' end,a.datea,a.cno,b.acc2,a.custno,left(a.comp,4),b.money,b.chgs,b.paysale,b.mon,b.part,b.vccno,a.unpay, 
	b.checkno,b.bank,b.indate,0,0,0
	from umm a 
	left join umms b on b.noa = a.noa 
	where (LEN(@t_cno) = 0 or a.cno = @t_cno) and 
	(LEN(@t_part) = 0 or b.partno = @t_part) and 
	(a.datea between @t_bdate and @t_edate) and 
	(a.custno between @t_bcustno and @t_ecustno) 

declare @noa nvarchar(20)
declare @noq nvarchar(20)
declare @opay float
declare @unopay float
declare cursor_table cursor for
	select noa,'001',opay,unopay from umm 
open cursor_table
fetch next from cursor_table
into @noa,@noq,@opay,@unopay
while(@@FETCH_STATUS <> -1)
begin 
	update @tmp 
	set opay = @opay ,unopay = @unopay,textopay = @opay-@unopay where noa = @noa and noq=@noq
	fetch next from cursor_table
	into @noa,@noq,@opay,@unopay
end
close cursor_table
deallocate cursor_table

declare @t_opay float 
set @t_opay=0
insert into @tmp 
	select '1' gno,'','',CHAR(255),'','',custno,'',SUM(money),SUM(chgs),SUM(paysales),'','','',0, 
	'','','',sum(opay),sum(unopay),sum(opay) - sum(unopay) 
	from @tmp 
	group by custno 
	
--只保留一筆預收金額 
	update @tmp set opay=0 where noq>'001' 
	
select gno,noa,noq,datea,cno,typea,custno,comp, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,chgs),1)),4,12)) chgs, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,paysales),1)),4,12)) paysales, 
	mons,part,vccno,unpay,checkno,bank,indate, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opay, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,textopay),1)),4,12)) textopay 
	from @tmp order by custno,datea,gno,noa,noq;
--*******************************************************************************	
z_ummst3:--z_ummst3
declare @t_bscno nvarchar(20)
declare @t_escno nvarchar(20)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_bsmon nvarchar(10)
declare @t_esmon nvarchar(10)
declare @t_xaccy nvarchar(20)
declare @t_xpart nvarchar(20)
set @t_xaccy = '[10]'
set @t_bscno = case when '#non' = [11] then '' else [11] end
set @t_escno = case when '#non' = [12] then CHAR(255) else [12] end
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bsmon = case when '#non' = [13] then '' else [13] end
set @t_esmon = case when '#non' = [14] then CHAR(255) else [14] end
set @t_xpart = case when '#non' = [2] then '' else [2] end
---------------顯示每個月份應收金額 begin--------------------------------------------------------------------------------------------
declare @tmpa table( 
	custno nvarchar(20), 
	money float, 
	mon nvarchar(MAX)
)

insert into @tmpa (custno,money,mon) 
select custno,SUM(money),mon from ( 
--vcc 
select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno 
,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*unpay,0))-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where len(vccno)>8 and right(vccno,6)<@t_bsmon and left(vccno,len(vccno)-7)=(case when aa.custno2!='' then aa.custno2 else aa.custno end)),0) money
,(case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) mon
from view_vcc[10] aa left join cust bb on aa.custno=bb.noa where (case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) < @t_bsmon
group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) ,(case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end)
)tmp where custno between @t_bcustno and @t_ecustno group by custno,mon

delete @tmpa where money=0 
--------------------顯示每個月份應收金額 end---------------------------------------------------------------------------------------

declare @tmp table( 
	gno nvarchar(1), 
	custno nvarchar(20), 
	comp nvarchar(50), 
	salesno nvarchar(30), 
	namea nvarchar(30), 
	money float, 
	total float, 
	payed float
) 

--前期
insert into @tmp (gno,custno,salesno,money,total,payed)
select '9',custno,salesno,SUM(money),0,0 from (
	--vcc 
	select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno
	,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*unpay,0))-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where len(vccno)>8 and right(vccno,6)<@t_bsmon and left(vccno,len(vccno)-7)=(case when aa.custno2!='' then aa.custno2 else aa.custno end)),0) money
	from view_vcc[10] aa left join cust bb on aa.custno=bb.noa where (case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) < @t_bsmon
	group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) 
)tmp where custno between @t_bcustno and @t_ecustno group by custno,salesno

--本期

insert into @tmp (gno,custno,salesno,money,total,payed)
select '9',custno,salesno,0,SUM(total),0 from (
	--vcc 
	select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno
	,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*total,0)) total
	from view_vcc[10] aa left join cust bb on aa.custno=bb.noa where (case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) between @t_bsmon and @t_esmon
	group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) 
)tmp where custno between @t_bcustno and @t_ecustno group by custno,salesno

--本期已付
insert into @tmp (gno,custno,salesno,money,total,payed)
select '9',custno,salesno,0,0,SUM(payed) from (
	--vcc 
	select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno
	,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*payed,0)) 
	+isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where len(vccno)>8 and right(vccno,6) between @t_bsmon and @t_esmon and left(vccno,len(vccno)-7)=(case when aa.custno2!='' then aa.custno2 else aa.custno end)),0) payed
	from view_vcc[10] aa left join cust bb on aa.custno=bb.noa where (case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) between @t_bsmon and @t_esmon and (left(kind,4)!='健勞勞退') 
	group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) 
)tmp where custno between @t_bcustno and @t_ecustno group by custno,salesno

insert into @tmp (gno,custno,salesno,money,total,payed)
select '0',custno,salesno,SUM(money),SUM(total),SUM(payed) from @tmp group by custno,salesno

delete @tmp where gno='9'

delete @tmp where money=0 and total=0 and payed=0 
update @tmp
set comp=(select top 1 nick from ((select nick from cust where noa=custno union select namea from carOwner where noa=custno union select namea from sss where noa=custno))tmp)
,namea=(select namea from sss where noa=salesno)

insert into @tmp 
select '1'gno,'','','','',sum(money),sum(total),sum(payed) from @tmp

select gno,custno,comp 
	,replace((select mon+'：'+reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12))+'@' from @tmpa where custno=a.custno FOR XML PATH('')),'@','</BR>') memo 
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money+total-payed),1)),4,12)) unpay
from @tmp a order by gno,custno;
--*************************************************************************************************************************************
z_ummst4:--z_ummst4
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_bsmon nvarchar(10)
declare @t_esmon nvarchar(10)
declare @t_bsalesno nvarchar(10)
declare @t_esalesno nvarchar(10)
declare @t_xaccy nvarchar(20)
declare @t_paytype nvarchar(MAX)
set @t_xaccy = '[10]'
set @t_bcustno = case when '#non' = [5] then '' else [5] end
set @t_ecustno = case when '#non' = [6] then CHAR(255) else [6] end
set @t_bsmon = case when '#non' = [13] then '' else [13] end
set @t_esmon = case when '#non' = [14] then CHAR(255) else [14] end
set @t_bsalesno = case when '#non' = [15] then '' else [15] end
set @t_esalesno = case when '#non' = [16] then CHAR(255) else [16] end
set @t_paytype = case when '#non' = [20] then '' else [20] end

declare @tmp table( 
	gno nvarchar(1), 
	custno nvarchar(20), 
	comp nvarchar(50), 
	salesno nvarchar(30), 
	namea nvarchar(30), 
	money float, 
	total float, 
	payed float
) 

--前期
insert into @tmp (gno,custno,salesno,money,total,payed)
select '9',custno,salesno,SUM(money),0,0 from (
	--vcc 
	select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno
	,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*unpay,0))-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where len(vccno)>8 and right(vccno,6)<@t_bsmon and left(vccno,len(vccno)-7)=(case when aa.custno2!='' then aa.custno2 else aa.custno end)),0) money
	from view_vcc[10] aa left join cust bb on aa.custno=bb.noa where (case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) < @t_bsmon and (left(kind,4)!='健勞勞退')
	and (@t_paytype='全部' or aa.paytype=@t_paytype)
	group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end)
)tmp where (custno between @t_bcustno and @t_ecustno ) and (salesno between @t_bsalesno and @t_esalesno) group by custno,salesno

--本期

insert into @tmp (gno,custno,salesno,money,total,payed)
select '9',custno,salesno,0,SUM(total),0 from (
	--vcc 
	select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno
	,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*total,0)) total
	from view_vcc[10] aa left join cust bb on aa.custno=bb.noa where (case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) between @t_bsmon and @t_esmon and (left(kind,4)!='健勞勞退') 
	and (@t_paytype='全部' or aa.paytype=@t_paytype) 
	group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) 
)tmp where (custno between @t_bcustno and @t_ecustno ) and (salesno between @t_bsalesno and @t_esalesno) group by custno,salesno

--本期已付
insert into @tmp (gno,custno,salesno,money,total,payed)
select '9',custno,salesno,0,0,SUM(payed) from (
	--vcc 
	select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno
	,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*payed,0))
	+isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where len(vccno)>8 and right(vccno,6) between @t_bsmon and @t_esmon and left(vccno,len(vccno)-7)=(case when aa.custno2!='' then aa.custno2 else aa.custno end)),0) payed 
	from view_vcc[10] aa left join cust bb on aa.custno=bb.noa where (case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) between @t_bsmon and @t_esmon and (left(kind,4)!='健勞勞退')
	and (@t_paytype='全部' or aa.paytype=@t_paytype) 
	group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) 
)tmp where (custno between @t_bcustno and @t_ecustno ) and (salesno between @t_bsalesno and @t_esalesno) group by custno,salesno

insert into @tmp (gno,custno,salesno,money,total,payed)
select '0',custno,salesno,SUM(money),SUM(total),SUM(payed) from @tmp group by custno,salesno

delete @tmp where gno='9'

delete @tmp where money=0 and total=0 and payed=0 
update @tmp
set comp=(select top 1 nick from ((select nick from cust where noa=custno union select namea from carOwner where noa=custno union select namea from sss where noa=custno))tmp)
,namea=(select namea from sss where noa=salesno)

insert into @tmp 
select '1'gno,'','',salesno,'',sum(money),sum(total),sum(payed) from @tmp group by salesno

select gno,custno,comp,salesno saleno,namea sales
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) money
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,payed),1)),4,12)) payed
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money+total-payed),1)),4,12)) unpay
from @tmp order by salesno,gno,custno;
--********************************************************************************
z_ummst5:--z_ummst5
declare @t_bdate nvarchar(20) 
declare @t_edate nvarchar(20) 
set @t_bdate = case when '#non' = [3] then '' else [3] end 
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end 
declare @tmp table( 
	gno nvarchar(1), 
	custno nvarchar(20), 
	comp nvarchar(30), 
	bmoney float, 
	opay float, 
	unopay float, 
	opbalance float 
) 

insert into @tmp
	select '0'gno,a.noa,a.nick
	--前期預收
	,isnull((select SUM(opay-unopay)  from umm where custno=a.noa and datea < @t_bdate),0) bmoney
	--本期預收
	,isnull((select SUM(opay)  from umm where custno=a.noa and datea  between @t_bdate and @t_edate),0) opay
	--本期預收沖帳
	,isnull((select SUM(unopay)  from umm where custno=a.noa and datea between @t_bdate and @t_edate),0) unopay
	,0
from (select noa,nick from cust union all select noa,namea from carOwner)a

delete @tmp where bmoney=0 and opay=0 and opbalance=0

select gno,custno,comp,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmoney),1)),4,12)) bmoney, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,opay),1)),4,12)) opays, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unopay),1)),4,12)) unopay, 
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,bmoney+opay-unopay),1)),4,12)) opbalance 
from @tmp order by custno;
--*******************************************************************************************
z_ummst6:--z_ummst6
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bcustno nvarchar(30)
declare @t_ecustno nvarchar(30)
set @t_bdate = case when '#non'=[3] then '' else [3] end
set @t_edate = case when '#non'=[4] then char(255) else [4] end
set @t_bcustno = case when '#non'=[5] then '' else [5] end
set @t_ecustno = case when '#non'=[6] then char(255) else [6] end

declare @tmp table(
	gno nvarchar(1),
	custno nvarchar(30), ----客戶編號
	comp nvarchar(90), ----客戶名稱
	vcc_money float, ----出貨金額 > vcc.應收
	vcc_tax float, ----營業稅 > vcc.稅金
	vcc_weight float, ----出貨重量 > if vcc.type = 退 *-1 if vccs.實重>0 then 實重 else vccs.重量
	oinvoice_money float, ----已開發票金額 > vcca.產品金額
	uninvoice_money float, ----未開發票金額 >出貨金額-已開發票金額
	uninvoice_tax float, ----未開發票稅額 > 營業稅 -vcca.稅額
	oinvoice_weight float, ----已開發票重 > vccas.數量
	uninvoice_weight float, ----未開發票重 > 出貨重量-已開發票重 
	unsales_money float, ----未開銷貨收入 > if vcc.type = 退 *-1 if len(會計傳票)=0 then vcc.應收 else 0
	unsales_tax float ----未開銷項稅額 > if vcc.type = 退 *-1  if len(會計傳票)=0 then vcc.稅額 else 0
)

insert into @tmp
select '0', a.custno
,(select nick from cust where noa=a.custno union select namea nick from sss where noa=a.custno)
,isnull((select SUM(money) from view_vcc[10] where custno=a.custno and datea between @t_bdate and @t_edate),0)
,isnull((select SUM(tax) from view_vcc[10] where custno=a.custno and datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when va.typea='1' then 1 else -1 end)*(case when vb.gweight>0 then vb.gweight else vb.weight end)) from view_vcc[10] va left join view_vccs[10] vb on va.noa=vb.noa where va.custno=a.custno and va.datea between @t_bdate and @t_edate),0)
,isnull((select SUM(money) from vcca where custno=a.custno and datea between @t_bdate and @t_edate),0)
,isnull((select SUM(money) from view_vcc[10] where custno=a.custno and datea between @t_bdate and @t_edate),0)-isnull((select SUM(money) from vcca where custno=a.custno and datea between @t_bdate and @t_edate),0)
,isnull((select SUM(tax) from view_vcc[10] where custno=a.custno and datea between @t_bdate and @t_edate),0)-isnull((select SUM(tax) from vcca where custno=a.custno and datea between @t_bdate and @t_edate),0)
,isnull((select SUM(vb.mount) from vcca va left join vccas vb on va.noa=vb.noa where va.custno=a.custno and va.datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when vb.gweight>0 then vb.gweight else vb.weight end)) from view_vcc[10] va left join view_vccs[10] vb on va.noa=vb.noa where va.custno=a.custno and va.datea between @t_bdate and @t_edate),0)
-isnull((select SUM(vb.mount) from vcca va left join vccas vb on va.noa=vb.noa where va.custno=a.custno and va.datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when typea='1' then 1 else -1 end)*case when len(accno)=0 then money else 0 end) from view_vcc[10] where custno=a.custno and datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when typea='1' then 1 else -1 end)*case when len(accno)=0 then tax else 0 end) from view_vcc[10] where custno=a.custno and datea between @t_bdate and @t_edate),0)
from view_vcc[10] a
where a.custno between @t_bcustno and @t_ecustno 
and a.datea between @t_bdate and @t_edate 
group by a.custno

select
	gno,custno,comp,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,vcc_money),1)),4,12)) vcc_money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,vcc_tax),1)),4,12)) vcc_tax,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,vcc_weight),1)),4,12)) vcc_weight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,oinvoice_money),1)),4,12)) oinvoice_money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,uninvoice_money),1)),4,12)) uninvoice_money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,uninvoice_tax),1)),4,12)) uninvoice_tax,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,oinvoice_weight),1)),4,12)) oinvoice_weight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,uninvoice_weight),1)),4,12)) uninvoice_weight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unsales_money),1)),4,12)) unsales_money,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,unsales_tax),1)),4,12)) unsales_tax
from @tmp;
--*******************************************************************************************
--********************************************************************************************
z_ummst7:--z_ummst7
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bmon nvarchar(7)
declare @t_emon nvarchar(7)
declare @t_bcustno nvarchar(20)
declare @t_ecustno nvarchar(20)
declare @t_bsalesno nvarchar(20)
declare @t_esalesno nvarchar(20)
declare @t_bproductno nvarchar(30)
declare @t_eproductno nvarchar(30)
set @t_bdate = case when '#non'=[3] then '' else [3] end
set @t_edate = case when '#non'=[4] then char(255) else [4] end
set @t_bmon = case when '#non'=[13] then '' else [13] end
set @t_emon = case when '#non'=[14] then char(255) else [14] end
set @t_bcustno = case when '#non'=[5] then '' else [5] end
set @t_ecustno = case when '#non'=[6] then char(255) else [6] end
set @t_bsalesno = case when '#non'=[15] then '' else [15] end
set @t_esalesno = case when '#non'=[16] then char(255) else [16] end
set @t_bproductno = case when '#non'=[17] then '' else [17] end
set @t_eproductno = case when '#non'=[18] then char(255) else [18] end
declare @result table(
	gno nvarchar(1),
	typea nvarchar(4),
	noa nvarchar(15),
	noq nvarchar(3),
	datea nvarchar(10),
	mon nvarchar(7),
	custno nvarchar(20),
	comp nvarchar(40),
	addr_invo nvarchar(90),
	tel nvarchar(90),
	productno nvarchar(30),
	xproduct nvarchar(40),
	unit nvarchar(8),
	mount decimal(16,2),
	weight decimal(16,2),
	price decimal(16,2),
	total decimal(18,0),
	money decimal(18,0),
	back decimal(18,0),
	tax decimal(18,0),
	total1 decimal(18,0),
	pay decimal(18,0),
	unpay decimal(18,0),
	total2 decimal(18,0),
	pcount int
	primary key (custno,gno,mon,datea,noa,noq) 
)
insert into @result
	select '0' gno, a.typea, a.noa noa, b.noq noq, a.datea datea, (case when a.mon='' then left(a.datea,6) else a.mon end) mon, 
		   (case when a.custno2!='' then a.custno2 else a.custno end) custno, isnull(c.comp,''), isnull(c.addr_invo,''), isnull(c.tel,''), b.productno, b.product, b.unit, 
	       b.mount, b.weight, b.price, b.total, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from view_vccs[10] b
	left join view_vcc[10] a on a.noa = b.noa
	left join cust c on  (case when a.custno2!='' then a.custno2 else a.custno end) = c.noa
	where (a.datea between @t_bdate and @t_edate) and
		  ((case when a.mon='' then left(a.datea,6) else a.mon end) between @t_bmon and @t_emon) and
		  ((case when a.custno2!='' then a.custno2 else a.custno end) between @t_bcustno and @t_ecustno) and
		  (a.salesno between @t_bsalesno and @t_esalesno) and
		  (b.productno between @t_bproductno and @t_eproductno)
	union all
	select '0' gno, '稅' typea, noa, CHAR(255) noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   (case when custno2!='' then custno2 else custno end), '' comp, '' addr_invo, '' tel, '' productno, '稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from view_vcc[10]
	where tax > 0 and (taxtype='1' or taxtype='5') and
		  (datea between @t_bdate and @t_edate)and
		  ((case when mon='' then left(datea,6) else mon end) between @t_bmon and @t_emon) and
		  ( (case when custno2!='' then custno2 else custno end) between @t_bcustno and @t_ecustno)
	union all
	select '0' gno, '稅' typea, noa, '' noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   custno, '' comp, '' addr_invo, '' tel, '' productno, '稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount	 
	from vcca
	where tax > 0 and (taxtype='1' or taxtype='5') and noa not in (select invono from view_vcc[10]) and
			(datea between @t_bdate and @t_edate)and
		  ((case when mon='' then left(datea,6) else mon end) between @t_bmon and @t_emon) and
		  (custno between @t_bcustno and @t_ecustno)	  	    	  
	order by custno,gno,mon,datea,noa,noq
declare @gno nvarchar(1)
declare @typea nvarchar(4)
declare @noa nvarchar(15)
declare @total decimal(18,0)
declare @mon nvarchar(7)
declare @custno nvarchar(20)
declare @comp nvarchar(40)
declare @t_custno nvarchar(20)
declare @t_comp nvarchar(40)
declare @t_money decimal(18,0)
declare @t_back decimal(18,0)
declare @t_tax decimal(18,0)
declare @t_total1 decimal(18,0)
declare @t_pay decimal(18,0)
declare @t_unpay decimal(18,0)
declare @t_total2 decimal(18,0)
declare @t_pcount int
set @t_custno = '#zzzz#zzzz'
set @t_comp = ''
set @t_money = 0
set @t_back = 0
set @t_tax = 0
set @t_total1 = 0
set @t_pay = 0
set @t_unpay = 0
set @t_total2 = 0
set @t_pcount = 0
declare cursor_table cursor for
	select gno,typea,custno,comp,mon,total from @result
open cursor_table
fetch next from cursor_table
into @gno,@typea,@custno,@comp,@mon,@total
while(@@FETCH_STATUS <> -1)
begin
	if @t_custno != @custno
	begin
		if @t_custno != '#zzzz#zzzz'
		begin
			set @t_total1 = @t_money - @t_back + @t_tax
			insert into @result
			select '1' gno, '' typea, '' noa, '' noq, '' datea, '' mon, @t_custno, @t_comp comp, '' addr_invo, '' tel, 
			       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
				   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
		end
		set @t_custno = @custno
		set @t_comp = @comp
		set @t_money = case when @typea = '1' then @total else 0 end
		set @t_back = case when @typea = '2' then @total else 0 end
		set @t_tax = case when @typea = '稅' then @total else 0 end
		set @t_pcount = 1
	end
	else
	begin
		set @t_money = @t_money + case when @typea = '1' then @total else 0 end
		set @t_back = @t_back + case when @typea = '2' then @total else 0 end
		set @t_tax = @t_tax + case when @typea = '稅' then @total else 0 end
		set @t_pcount = @t_pcount + 1
	end
	fetch next from cursor_table
	into @gno,@typea,@custno,@comp,@mon,@total
end
close cursor_table
deallocate cursor_table
	
if @t_custno != '#zzzz#zzzz'
begin
	set @t_total1 = @t_money - @t_back + @t_tax
	insert into @result
		select '1' gno, '' typea, '' noa, '' noq, '' datea, '' mon, @t_custno, @t_comp comp, '' addr_invo, '' tel, 
		       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
			   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
	end
update @result set typea = (case typea when '1' then '出' else '退' end) where typea ='1' or typea = '2'
--已收款 
update a
	set pay=isnull((select SUM(paysale) from umms where vccno in(select noa from @result where custno=a.custno)),0)
	+isnull((select SUM(ub.paysale) from umm ua left join umms ub on ua.noa=ub.noa where ub.vccno=a.custno and ua.datea  between @t_bdate and @t_edate),0)
from @result a where a.gno='1'
--前期
declare @tmp table(
	gno nvarchar(1),
	typea nvarchar(4),
	noa nvarchar(15),
	noq nvarchar(3),
	datea nvarchar(10),
	mon nvarchar(7),
	custno nvarchar(20),
	comp nvarchar(40),
	addr_invo nvarchar(90),
	tel nvarchar(90),
	productno nvarchar(30),
	xproduct nvarchar(40),
	unit nvarchar(8),
	mount decimal(16,2),
	weight decimal(16,2),
	price decimal(16,2),
	total decimal(18,0),
	money decimal(18,0),
	back decimal(18,0),
	tax decimal(18,0),
	total1 decimal(18,0),
	pay decimal(18,0),
	unpay decimal(18,0),
	total2 decimal(18,0),
	pcount int
	primary key (custno,gno,mon,datea,noa,noq) 
)
insert into @tmp
	select '0' gno, a.typea, a.noa noa, b.noq noq, a.datea datea, (case when a.mon='' then left(a.datea,6) else a.mon end) mon, 
		    (case when a.custno2!='' then a.custno2 else a.custno end) custno, isnull(c.comp,''), isnull(c.addr_invo,''), isnull(c.tel,''), b.productno, b.product, b.unit, 
	       b.mount, b.weight, b.price, b.total, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from view_vccs[10] b
	left join vcc[10] a on a.noa = b.noa
	left join cust c on  a.custno = c.noa
	where (a.datea < @t_bdate ) and
		  ((case when a.mon='' then left(a.datea,6) else a.mon end) < @t_bmon ) and
		  ( (case when a.custno2!='' then a.custno2 else a.custno end) between @t_bcustno and @t_ecustno) and
		  (a.salesno between @t_bsalesno and @t_esalesno) and
		  (b.productno between @t_bproductno and @t_eproductno)
	union all
	select '0' gno, '稅' typea, noa, CHAR(255) noq, datea, (case when mon='' then left(datea,6) else mon end), 
		    (case when custno2!='' then custno2 else custno end), '' comp, '' addr_invo, '' tel, '' productno, '稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount
	from view_vcc[10]
	where tax > 0 and (taxtype='1' or taxtype='5') and
		  (datea < @t_bdate)and
		  ((case when mon='' then left(datea,6) else mon end) < @t_bmon) and
		  ( (case when custno2!='' then custno2 else custno end) between @t_bcustno and @t_ecustno)
	union all
	select '0' gno, '稅' typea, noa, '' noq, datea, (case when mon='' then left(datea,6) else mon end), 
		   custno, '' comp, '' addr_invo, '' tel, '' productno, '稅額' product, '' unit, 
		   0 mount, 0 weight, 0 price, tax, 0 money, 0 back, 0 tax, 0 total1, 0 pay, 0 unpay, 0 total2, 0 pcount	 
	from vcca
	where tax > 0 and
			(datea < @t_bdate) and (taxtype='1' or taxtype='5') and noa not in (select invono from view_vcc[10]) and
		  ((case when mon='' then left(datea,6) else mon end) < @t_bmon ) and
		  (custno between @t_bcustno and @t_ecustno)	  	    	  
	order by custno,gno,mon,datea,noa,noq
set @t_custno = '#zzzz#zzzz'
set @t_comp = ''
set @t_money = 0
set @t_back = 0
set @t_tax = 0
set @t_total1 = 0
set @t_pay = 0
set @t_unpay = 0
set @t_total2 = 0
set @t_pcount = 0
declare cursor_table cursor for
	select gno,typea,custno,comp,mon,total from @tmp
open cursor_table
fetch next from cursor_table
into @gno,@typea,@custno,@comp,@mon,@total
while(@@FETCH_STATUS <> -1)
begin
	if @t_custno != @custno
	begin
		if @t_custno != '#zzzz#zzzz'
		begin
			set @t_total1 = @t_money - @t_back + @t_tax
			insert into @tmp
			select '1' gno, '' typea, '' noa, '' noq, '' datea, '' mon, @t_custno, @t_comp comp, '' addr_invo, '' tel, 
			       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
				   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
		end
		set @t_custno = @custno
		set @t_comp = @comp
		set @t_money = case when @typea = '1' then @total else 0 end
		set @t_back = case when @typea = '2' then @total else 0 end
		set @t_tax = case when @typea = '稅' then @total else 0 end
		set @t_pcount = 1
	end
	else
	begin
		set @t_money = @t_money + case when @typea = '1' then @total else 0 end
		set @t_back = @t_back + case when @typea = '2' then @total else 0 end
		set @t_tax = @t_tax + case when @typea = '稅' then @total else 0 end
		set @t_pcount = @t_pcount + 1
		end
	fetch next from cursor_table
	into @gno,@typea,@custno,@comp,@mon,@total
end
close cursor_table
deallocate cursor_table
	
if @t_custno != '#zzzz#zzzz'
begin
	set @t_total1 = @t_money - @t_back + @t_tax
	insert into @tmp
	select '1' gno, '' typea, '' noa, '' noq, '' datea, '' mon, @t_custno, @t_comp comp, '' addr_invo, '' tel, 
		       '' productno, '' product, '' unit, 0 mount, 0 weight, 0 price, 0 total, 
			   @t_money, @t_back, @t_tax, @t_total1, 0 pay, 0 unpay, 0 total2, @t_pcount
end
update @tmp set typea = (case typea when '1' then '出' else '退' end) where typea ='1' or typea = '2'
--已收款 
update a
	set pay=isnull((select SUM(paysale) from umms where vccno in(select noa from @result where custno=a.custno)),0)
	+isnull((select SUM(ub.paysale) from umm ua left join umms ub on ua.noa=ub.noa where ub.vccno=a.custno and ua.datea  < @t_bdate ),0)
from @tmp a where a.gno='1'

update a
	set unpay=isnull((select total1-pay from @tmp where custno=a.custno and gno='1'),0)
from @result a where a.gno='1'
	
update @result
	set total2=total1+unpay-pay 
where gno='1'
	
select 
	gno,typea,noa,noq,datea,mon,custno,comp,addr_invo,tel,productno,replace(xproduct,'~#$',char(39))  xproduct,unit
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,mount),1)),0,30)) mount 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,weight),1)),0,30)) weight 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,price),1)),0,30)) price 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total),1)),4,30)) total 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,money),1)),4,30)) money 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,back),1)),4,30)) back 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,tax),1)),4,30)) tax 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total1),1)),4,30)) total1 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,pay),1)),4,30)) pay 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unpay),1)),4,30)) unpay 
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total2),1)),4,30)) total2 
	,pcount 
from @result order by custno,gno,mon,datea,noa,noq;
--**************************************************************************************************
z_ummst8:--z_ummst8
declare @t_pageline int = 16   --------一頁幾行
declare @t_bcustno nvarchar(35)
declare @t_ecustno nvarchar(35)
declare @t_bmon nvarchar(20)
declare @t_emon nvarchar(20)
set @t_bmon = case when '#non'=[13] then '' else [13] end
set @t_emon = case when '#non'=[14] then char(255) else [14] end
set @t_bcustno = case when '#non'=[5] then '' else [5] end
set @t_ecustno = case when '#non'=[6] then char(255) else [6] end

----------******************---------------------------------
	declare @tmp1 table(
		custno nvarchar(20),
		mon nvarchar(10),
		[money] float,
		bkmoney float,
		tax float
	)
	insert into @tmp1(custno,mon,[money],bkmoney,tax)
	select custno,mon
	,SUM(case when typea='1' then ISNULL([money],0) else 0 end)
	,SUM(case when typea!='1' then ISNULL([money],0) else 0 end)
	,SUM(case when typea='1' then ISNULL([tax],0) else -ISNULL([tax],0) end)
	from view_vcc 
	where custno between @t_bcustno and @t_ecustno
	and mon <= @t_emon
	group by custno,mon
	
	declare @tmp2 table(
		custno nvarchar(20),
		mon nvarchar(10),
		tax float
	)
	insert into @tmp2(custno,mon,tax)
	select custno,mon,SUM(ISNULL([tax],0))
	from vcca
	where custno between @t_bcustno and @t_ecustno
	and mon <= @t_emon
	group by custno,mon
	
	declare @tmp3 table(
		custno nvarchar(20),
		mon nvarchar(10),
		paysale float 
	)
	insert into @tmp3(custno,mon,paysale)
	select case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
		when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
		else b.custno end
	,case when len(ISNULL(a.vccno,''))=0 then '' 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
		else isnull(c.mon,'') end
	,SUM(ISNULL(a.paysale,0))
	from umms a
	left join umm b on a.noa=b.noa
	left join view_vcc c on a.accy=c.accy and a.vccno=c.noa
	where --b.noa is not null and 
	ISNULL(a.paysale,0)!=0
	and case when len(ISNULL(a.vccno,''))=0 then '' 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
		else isnull(c.mon,'') end <= @t_emon
	group by case when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]%' then SUBSTRING(a.vccno,0,charindex('-',a.vccno)) 
		when len(ISNULL(a.vccno,''))=0 and len(ISNULL(c.custno,''))>0 then c.custno
		else b.custno end
		,case when len(ISNULL(a.vccno,''))=0 then '' 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]-TAX' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6) 
		when a.vccno like '%-[0-9][0-9][0-9]/[0-9][0-9]' then SUBSTRING(a.vccno,charindex('-',a.vccno)+1,6)
		else isnull(c.mon,'') end
	delete @tmp3 where not(custno between @t_bcustno and @t_ecustno)
	--------------------------------------------------------------------------------------------------
	declare @tmp table(
		custno nvarchar(20),
		[money] float,
		bkmoney float,
		tax float,
		total float,
		payed float,
		unpay float,
		tot float
	)
	insert into @tmp(custno,[money],bkmoney,tax)
	select custno,SUM(ISNULL([money],0)),SUM(ISNULL([bkmoney],0)),SUM(ISNULL([tax],0))
	from @tmp1
	where mon between @t_bmon and @t_emon
	group by custno
	
	---------------------------------------------------------------------------------------
	update @tmp set tax = ISNULL(a.tax,0)+ISNULL(b.tax,0)
	from @tmp a
	right join @tmp2 b on a.custno=b.custno and b.mon between @t_bmon and @t_emon
	
	insert into @tmp(custno,[money],bkmoney,tax)
	select custno,0,0,tax
	from @tmp2 a
	where not exists(select * from @tmp where custno=a.custno)
	and a.mon between @t_bmon and @t_emon
	----------------------------------------------------------------------------------------
	update @tmp set total = ISNULL([money],0)-ISNULL(bkmoney,0)+ISNULL(tax,0)
	
	----------------------------------------------------------------------------------------
	update @tmp set payed=isnull(a.payed,0) + isnull(b.paysale,0)
	from @tmp a
	right join @tmp3 b on a.custno=b.custno and b.mon between @t_bmon and @t_emon
	
	insert into @tmp(custno,[money],bkmoney,tax,total, payed)
	select custno,0,0,0,0,paysale
	from @tmp3 a
	where not exists(select * from @tmp where custno=a.custno)
	and a.mon between @t_bmon and @t_emon
	------------------------------------------------------------------------------------------
	--unpay
	
	update @tmp set unpay = ISNULL(a.unpay,0)+ISNULL(b.unpay,0)
	from @tmp a
	right join (select custno ,SUM(ISNULL([money],0)-ISNULL(bkmoney,0)+isnull(tax,0)) unpay
		from @tmp1
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
	
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,a.unpay
	from (select custno ,SUM(ISNULL([money],0)-ISNULL(bkmoney,0)+isnull(tax,0)) unpay
		from @tmp1
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.unpay,0)!=0
	
	
	update @tmp set unpay = ISNULL(a.unpay,0)+ISNULL(b.unpay,0)
	from @tmp a
	right join (select custno ,sum(isnull(tax,0)) unpay
		from @tmp2
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
		
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,a.unpay
	from (select custno ,SUM(isnull(tax,0)) unpay
		from @tmp2
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.unpay,0)!=0
	
	update @tmp set unpay = ISNULL(a.unpay,0)-ISNULL(b.paysale,0)
	from @tmp a
	right join (select custno ,sum(isnull(paysale,0)) paysale
		from @tmp3
		where mon<@t_bmon
		group by custno) b on a.custno=b.custno
	
	insert into @tmp(custno,[money],bkmoney,tax,total,payed,unpay)
	select a.custno,0,0,0,0,0,-a.paysale
	from (select custno ,sum(isnull(paysale,0)) paysale
		from @tmp3
		where mon<@t_bmon
		group by custno) a
	where not exists(select * from @tmp where custno=a.custno)
	and ISNULL(a.paysale,0)!=0
	------------------------------------------------------------------------------------------
	update @tmp set tot = ISNULL([money],0)-ISNULL(bkmoney,0)+ISNULL(tax,0)-ISNULL(payed,0)+ISNULL(unpay,0)
----------------------******************-----------------------------

declare @result table(
	orderno int,
	gno nvarchar(1),
	idno int identity(0,1),
	pageno int,
	typea nvarchar(10),
	custno nvarchar(35),
	custs nvarchar(90),
	zipcode nvarchar(90),
	addr nvarchar(max),
	tel nvarchar(max),
	datea nvarchar(20),
	noa nvarchar(30),
	noq nvarchar(10),
	pno nvarchar(30),
	products nvarchar(90),
	csize nvarchar(max),
	b_mount float,
	b_weight float,
	b_price float,
	b_money float,
	b_tax float,
	b_total float,
	a_total float,
	t_total1 float,
	t_total2 float,
	t_total3 float,
	t_total4 float,
	t_total5 float,
	t_total6 float,
	t_total7 float,
	t_total8 float,
	t_total9 float
)
declare @checkUcca int = (select count(*) from ucca)
insert into @result
	select
		ROW_NUMBER()over(partition by a.custno,a.comp,a.zip_home,a.addr_home order by a.custno,a.comp,a.zip_home,a.addr_home,a.datea),a.*
	from (
		select
			 '0' gno,1 pageno,a.typea typea,a.custno,a.comp,c.zip_home,c.addr_home,
			 a.tel,right(a.datea,5) datea,a.noa,b.noq,b.productno,
			 case when charindex(left(b.uno,1),'XYZ') > 0 then  '廢料' else b.product end product,
			 case when  (b.style='' and b.dime='') then null else
				(case when ltrim(rtrim(isnull(b.size,'')))='' then dbo.csize(a.kind,b.dime,b.width,b.lengthb,b.radius) else b.size end) 
			 end size,
			 case when  (b.style='' and b.dime='' and not(charindex(left(b.uno,1),'XYZ') > 0)) then null else
			 	case when left(a.kind,1)='B' then b.mount else null end end b_mount ,
			 case when  (b.style='' and b.dime='' and not(charindex(left(b.uno,1),'XYZ') > 0)) then null else
			 	case when left(a.kind,1)='B' then null else b.weight end end b_weight ,
			 b.price,b.total,
			 case when @checkUcca>0 then 0 else isnull(a.tax,0) end tax,
			 0 b_total,a.total a_total,0 t_total1,0 t_total2,0 t_total3,
			 isnull((isnull(d.total,0)+isnull(d.tax,0)),0) t_total4,f.payed t_total5,
			 0 t_total6,0 t_total7,f.unpay t_total8,0 t_total9
		from view_vcc a
		left join view_vccs b on (a.noa = b.noa)
		left join cust c on a.custno = c.noa
		left join vccbs d on a.invono = d.invono
		left join vccb e on (d.noa = e.noa) and (e.typea = '2'/*銷貨折讓*/)
		outer apply(select * from @tmp where custno=a.custno) f
		where (a.custno between @t_bcustno and @t_ecustno) and (a.mon between @t_bmon and @t_emon)
	) a where a.custno between @t_bcustno and @t_ecustno
update @result set b_mount=b_mount*(-1),b_weight=b_weight*(-1),b_price=b_price*(-1),b_money=b_money*(-1),b_tax=b_tax*(-1),a_total=a_total*(-1) where typea='2'
if(@checkUcca>0)
begin
	update @result set b_tax=isnull(c.tax,0)
	from @result a
	left join view_vcc b on a.noa=b.noa
	outer apply  (select sum(isnull(tax,0))  tax from vcca where noa=b.invono) c
	where b_tax is not null
end

-----前期餘額


declare @a_count int
declare @idno int
declare @k int = 0 ----差幾頁
declare @pageCount int
declare @orderno int
declare @pageno int
declare @custno nvarchar(30)
declare @custs nvarchar(90)
declare @zipcode nvarchar(20)
declare @addr nvarchar(max)
declare @tel nvarchar(90)
declare cursor_table cursor for
	select custno,custs,count(*),max(orderno) from @result group by custno,custs
open cursor_table
fetch next from cursor_table
into @custno,@custs,@a_count,@orderno
while(@@FETCH_STATUS <> -1)
begin		
	if(@a_count > @t_pageline)
	begin
		set @k = CEILING((cast(@a_count as float)/@t_pageline))
		while(@k > 0)
		begin
			update @result set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
			set @k -=1
		end
	end
	fetch next from cursor_table
	into @custno,@custs,@a_count,@orderno
end
close cursor_table
deallocate cursor_table
update @result set orderno = orderno-((pageno-1)*@t_pageline)

declare @noa nvarchar(30)
declare @b_tax float
declare @t_total4 float
declare @b_total float
---------整理BBM資料--------------------------------------------------------------
declare cursor_table cursor for
	select distinct noa,idno,b_tax,t_total4,a_total from @result where products !='運費' order by noa
open cursor_table
fetch next from cursor_table
into @noa,@idno,@b_tax,@t_total4,@b_total
while(@@FETCH_STATUS <> -1)
begin	
	update @result set b_tax = 0 where noa = @noa
	update @result set b_tax = @b_tax where (noa = @noa) and (idno = @idno)
	update @result set b_total = 0 where noa = @noa
	update @result set b_total = @b_total where (noa = @noa) and (idno = @idno)
	update @result set t_total4 = 0 where noa = @noa
	update @result set t_total4 = @t_total4 where (noa = @noa) and (idno = @idno)
	fetch next from cursor_table
	into @noa,@idno,@b_tax,@t_total4,@b_total
end
close cursor_table
deallocate cursor_table
------------------------------------------------------------------------------
declare @maxpage int
declare cursor_table cursor for
	select distinct custno,max(custs),max(zipcode),max(addr),max(tel),max(orderno),pageno,min(idno),count(*),max(pageno) from @result group by custno,custs,zipcode,addr,tel,pageno
open cursor_table
fetch next from cursor_table
into @custno ,@custs,@zipcode,@addr,@tel,@orderno,@pageno,@idno,@a_count,@maxpage
while(@@FETCH_STATUS <> -1)
begin		
	set @k = @t_pageline -(@a_count%@t_pageline)
	set @pageCount = @a_count/@t_pageline
	if(@k < @t_pageline and (@pageCount =0))
	begin
		while(@k > 0)
		begin
			insert into @result(gno,orderno,pageno,custno,custs,zipcode,addr,tel,t_total1,t_total2,t_total3,t_total4,t_total5,t_total6,t_total7,t_total8,t_total9) 
				select '0',(@orderno+1),@pageno,@custno,@custs,@zipcode,@addr,@tel,t_total1,t_total2,t_total3,t_total4,t_total5,t_total6,t_total7,t_total8,t_total9 from @result where idno = @idno 
			set @k = @k-1
			set @orderno = @orderno +1
		end
	end
	fetch next from cursor_table
	into @custno,@custs,@zipcode,@addr,@tel,@orderno,@pageno,@idno,@a_count,@maxpage
end
close cursor_table
deallocate cursor_table
insert into @result(gno,orderno,pageno,custno,custs,zipcode,addr,tel) 
	select '1',(max(orderno)+1),max(pageno),custno,custs,zipcode,addr,tel from @result where gno=0 group by pageno,custno,custs,zipcode,addr,tel
insert into @result(gno,orderno,pageno,custno,custs,zipcode,addr,tel,t_total1,t_total2,t_total4,t_total5,t_total8)
	select '2',(max(orderno)+2),max(pageno),custno,custs,zipcode,addr,tel,sum(b_money),sum(b_tax),sum(t_total4),max(t_total5),max(t_total8) from @result where gno=0 group by custno,custs,zipcode,addr,tel
insert into @result(gno,orderno,pageno,custno,custs,zipcode,addr,tel) 
	select '3',(max(orderno)+3),max(pageno),custno,custs,zipcode,addr,tel from @result where gno=0 group by pageno,custno,custs,zipcode,addr,tel
update @result set t_total3 = isnull((isnull(t_total1,0) + isnull(t_total2,0)),0) where gno = '2'
update @result set t_total6 = isnull((isnull(t_total3,0) - isnull(t_total4,0) - isnull(t_total5,0)),0) where gno = '2'
update @result set t_total9 = isnull((isnull(t_total6,0) + isnull(t_total8,0) - isnull(t_total7,0)),0) where gno = '2'
update @result set t_total9 = 0 where gno = '2' and (t_total9 <=0)
update @result set csize = replace(csize,'~#$','''')
--update @result set datea = isnull(typea,'') + isnull(datea,'')
update @result set b_mount=b_mount*(-1),b_price=b_price*(-1),b_money=b_money*(-1),b_tax=b_tax*(-1),a_total=a_total*(-1),b_total=b_total*(-1) where typea='2'
update @result set typea = (case typea when '1' then '出' when '2' then '退' end)

	select
		gno,idno,orderno,pageno,(select max(pageno) from @result where a.custno=custno) maxpage
		,typea,custno,custs,zipcode
		,addr
		,b.xaddr xaddr
		,b.yaddr yaddr
		,tel
		,isnull(typea,'') + isnull(datea,'')  a1,noa,pno,replace(products,'~#$',char(39)) a2,csize,
		b_mount,b_weight,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,floor(b_price)),1)),4,12))+'.'+LEFT(CAST((cast(floor((b_price*1000)-(floor(b_price)*1000)) as nvarchar)) as NVARCHAR) + REPLICATE('0', 3), 3) b_price,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_money),1)),4,12)) b_money,
		(case when b_tax = 0 then null else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_tax),1)),4,12)) end) b_tax,
		(case when b_total = 0 then null else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,b_total),1)),4,12)) end) b_total, 
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total1,0)),1)),4,12)) t_total1,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total2,0)),1)),4,12)) t_total2,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total3,0)),1)),4,12)) t_total3,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total4,0)),1)),4,12)) t_total4,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total5,0)),1)),4,12)) t_total5,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total6,0)),1)),4,12)) t_total6,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total7,0)),1)),4,12)) t_total7,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total8,0)),1)),4,12)) t_total8,
		reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,isnull(t_total9,0)),1)),4,12)) t_total9
	from @result a 
	outer apply (select top 1 
		substring(a.addr,1,CHARINDEX(road,addr)+len(road)-1) xaddr,
		substring(a.addr,CHARINDEX(road,addr)+len(road),len(addr)) yaddr 
		from road where CHARINDEX(road,a.addr)>0 and CHARINDEX(city,a.addr)>0 order by road desc) b
	order by custno,custs,zipcode,addr,pageno,gno,isnull(datea,char(255));
--********************************************************************************
z_ummst10:--z_ummst10
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
declare @t_bcustno nvarchar(50)
declare @t_ecustno nvarchar(50)
set @t_bdate = case when '#non'=[3] then '' else [3] end
set @t_edate = case when '#non'=[4] then char(255) else [4] end
set @t_bcustno = case when '#non'=[5] then '' else [5] end
set @t_ecustno = case when '#non'=[6] then char(255) else [6] end

declare @tmp table(
	gno nvarchar(1),
	custno nvarchar(50), ----客戶編號
	comp nvarchar(MAX), ----客戶名稱
	vcc_money float, ----出貨金額 > vcc.應收
	vcc_tax float, ----營業稅 > vcc.稅金
	vcc_weight float, ----出貨重量 > if vcc.type = 退 *-1 if vccs.實重>0 then 實重 else vccs.重量
	oinvoice_money float, ----已開發票金額 > vcca.產品金額
	uninvoice_money float, ----未開發票金額 >出貨金額-已開發票金額
	uninvoice_tax float, ----未開發票稅額 > 營業稅 -vcca.稅額
	oinvoice_weight float, ----已開發票重 > vccas.數量
	uninvoice_weight float, ----未開發票重 > 出貨重量-已開發票重
	unsales_money float, ----未開銷貨收入 > if vcc.type = 退 *-1 if len(會計傳票)=0 then vcc.應收 else 0
	unsales_tax float, ----未開銷項稅額 > if vcc.type = 退 *-1  if len(會計傳票)=0 then vcc.稅額 else 0
	dmoney float,	---1123會計借方 
	cmoney float,	---1123會計貸方
	acmoney float,	---會計餘額 (含上期)
	unpay float	--未收餘額CUST_2S
)


insert into @tmp
select '0', (case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)
,(select nick from cust where noa=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) union select namea nick from sss where noa=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and  noa not in (select noa from cust))
,isnull((select SUM((case when typea='1' then 1 else -1 end)*total) from view_vcc where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when typea='1' then 1 else -1 end)*case when taxtype='1' then round(money*0.05,0) when taxtype='3' then round(total/1.05*0.05,0) else 0 end) from view_vcc where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when va.typea='1' then 1 else -1 end)*(case when vb.gweight>0 then vb.gweight else vb.weight end)) from view_vcc va left join view_vccs vb on va.noa=vb.noa where (case when isnull(va.custno2,'')!='' then va.custno2 else va.custno end)=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and va.datea between @t_bdate and @t_edate),0)
,isnull((select SUM(total) from vcca where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
-isnull((select SUM(total) from vccb where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when typea='1' then 1 else -1 end)*total) from view_vcc where (case when isnull(custno2,'')!='' then custno2 else custno end)=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
-isnull((select SUM(total) from vcca where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
+isnull((select SUM(total) from vccb where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when typea='1' then 1 else -1 end)*case when taxtype='1' then round(money*0.05,0) when taxtype='3' then round(total/1.05*0.05,0) else 0 end) from view_vcc where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
-isnull((select SUM(tax) from vcca where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
+isnull((select SUM(tax) from vccb where custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
,isnull((select SUM(vb.mount) from vcca va left join vccas vb on va.noa=vb.noa where va.custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and va.datea between @t_bdate and @t_edate),0)
-isnull((select SUM(vb.mount) from vccb va left join vccas vb on va.noa=vb.noa where va.custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and va.datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when va.typea='1' then 1 else -1 end)*(case when vb.gweight>0 then vb.gweight else vb.weight end)) from view_vcc va left join view_vccs vb on va.noa=vb.noa where (case when isnull(va.custno2,'')!='' then va.custno2 else va.custno end)=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and va.datea between @t_bdate and @t_edate),0)
-isnull((select SUM(vb.mount) from vcca va left join vccas vb on va.noa=vb.noa where va.custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and va.datea between @t_bdate and @t_edate),0)
+isnull((select SUM(vb.mount) from vccb va left join vccas vb on va.noa=vb.noa where va.custno=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and va.datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when typea='1' then 1 else -1 end)*case when len(accno)=0 then total else 0 end) from view_vcc where (case when isnull(custno2,'')!='' then custno2 else custno end) =(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
,isnull((select SUM((case when typea='1' then 1 else -1 end)*case when len(accno)=0 then case when taxtype='1' then round(money*0.05,0) when taxtype='3' then round(total/1.05*0.05,0) else 0 end else 0 end) from view_vcc where (case when isnull(custno2,'')!='' then custno2 else custno end)=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) and datea between @t_bdate and @t_edate),0)
,isnull((select SUM(dmoney) from view_acccs[9] where accc5 like '1123%' and (accy+'/'+accc2 between @t_bdate and @t_edate) and right(accc5,len((case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)))=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)),0)
,isnull((select SUM(cmoney) from view_acccs[9] where accc5 like '1123%' and (accy+'/'+accc2 between @t_bdate and @t_edate) and right(accc5,len((case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)))=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)),0)
,isnull((select SUM(dmoney-cmoney) from acccs[9] where accc5 like '1123%' and ('[10]/'+accc2 <= @t_edate) and right(accc5,len((case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)))=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)),0)
,isnull((select sum(unpay) from cust_2s where mon<left(@t_bdate,6) and noa=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)),0)
+isnull((select sum(unpay) from view_vcc where (datea between left(@t_bdate,6)+'/01' and @t_edate) and noa=(case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)),0)
from view_vcc a
where (case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) between @t_bcustno and @t_ecustno
and a.datea between @t_bdate and @t_edate
group by (case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end)

select
	gno,custno,replace(comp,'~#$',char(39)) comp,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,vcc_money),1)),4,30)) vcc_money,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,vcc_tax),1)),4,30)) vcc_tax,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,vcc_weight),1)),4,30)) vcc_weight,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,oinvoice_money),1)),4,30)) oinvoice_money,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,uninvoice_money),1)),4,30)) uninvoice_money,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,uninvoice_tax),1)),4,30)) uninvoice_tax,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,oinvoice_weight),1)),4,30)) oinvoice_weight,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,uninvoice_weight),1)),4,30)) uninvoice_weight,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unsales_money),1)),4,30)) unsales_money,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unsales_tax),1)),4,30)) unsales_tax,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,dmoney),1)),4,30)) dmoney,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,cmoney),1)),4,30)) cmoney,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,acmoney),1)),4,30)) acmoney,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unpay),1)),4,30)) unpay
from @tmp;
--********************************************************************************
z_ummst11:--z_ummst11
declare @t_bmon nvarchar(7)
declare @t_emon nvarchar(7)
declare @t_bcustno nvarchar(50)
declare @t_ecustno nvarchar(50)
set @t_bmon = case when '#non'=[13] then '' else [13] end
set @t_emon = case when '#non'=[14] then char(255) else [14] end
set @t_bcustno = case when '#non'=[5] then '' else [5] end
set @t_ecustno = case when '#non'=[6] then char(255) else [6] end
-------------------------------------------------------------------------------------------------------------
declare @cmd nvarchar(max) 
IF OBJECT_ID('tempdb..#result')is not null
BEGIN
	set @cmd = 'drop table #result'
	EXECUTE sp_executesql @cmd
END

create table #result(
	gno nvarchar(10),
	idno int identity(0,1),
	pageno int,
	totpage int,
	orderno int,
	typea nvarchar(20),
	noa nvarchar(50),
	invoiceno nvarchar(max),
	datea nvarchar(10),
	mon nvarchar(7),
	custno nvarchar(50),
	comp nvarchar(MAX),
	addr_invo nvarchar(max),
	serial nvarchar(90),
	tel nvarchar(90),
	total float,
	money float,
	back float,
	tax float,
	total1 float,
	pay float,
	unpay float,
	total2 float,
	salesno nvarchar(30),
	saless nvarchar(30),
	form nvarchar(90),
	memo nvarchar(max),--104/10
	fax nvarchar(90)--104/10
)

insert into #result
select '0' gno,0 pageno,0 totpage,0 orderno, a.typea, a.noa noa,isnull(a.invono,'') invoiceno, a.datea datea, (case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end) mon,
	   (case when isnull(a.custno2,'')!='' then isnull(a.custno2,'') else a.custno end) custno, '', '','','',
       sum(b.total) total, 0 money, 0 back, 0 tax, 0 total1,payed,unpay, 0 total2
       ,(case when isnull(a.salesno2,'')!='' then a.salesno2 when isnull(a.salesno,'')!='' then a.salesno else isnull(c.salesno,'') end) salesno 
		,(case when isnull(a.salesno2,'')!='' then a.sales2 when isnull(a.salesno,'')!='' then a.sales else c.sales end)sales 
       ,'vcc','',''
from view_vccs b
left join view_vcc a on a.noa = b.noa
left join cust c on  (case when a.custno2!='' then a.custno2 else a.custno end) = c.noa
where ((case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end) between @t_bmon and @t_emon) and
	  ((case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) between @t_bcustno and @t_ecustno)
group by a.typea, a.noa,a.invono,a.datea,a.mon,a.custno2,a.custno
,(case when isnull(a.salesno2,'')!='' then a.salesno2 when isnull(a.salesno,'')!='' then a.salesno else isnull(c.salesno,'') end) 
,(case when isnull(a.salesno2,'')!='' then a.sales2 when isnull(a.salesno,'')!='' then a.sales else c.sales end) 
,payed,unpay
union all --無發票系統
select '0' gno,0 pageno,0 totpage,0 orderno, '稅' typea, a.noa,a.invono, a.datea, (case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end),
	   (case when a.custno2!='' then a.custno2 else a.custno end), '' comp, '' addr_invo,'' serial, '' tel,
	   0 total, 0 money, 0 back, (case when a.typea!='1' then -1 else 1 end) *a.tax tax, 0 total1, 0 pay, 0 unpay, 0 total2
	   ,(case when isnull(a.salesno2,'')!='' then a.salesno2 when isnull(a.salesno,'')!='' then a.salesno else isnull(c.salesno,'') end) salesno 
		,(case when isnull(a.salesno2,'')!='' then a.sales2 when isnull(a.salesno,'')!='' then a.sales else c.sales end)sales 
	   ,'vcc','',''
from view_vcc a
left join cust c on  (case when a.custno2!='' then a.custno2 else a.custno end) = c.noa
where tax > 0 and (a.taxtype='1' or a.taxtype='5') and
	  ((case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end) between @t_bmon and @t_emon) and
	  ( (case when isnull(a.custno2,'')!='' then a.custno2 else a.custno end) between @t_bcustno and @t_ecustno)
union all --有發票系統
select '0' gno,0 pageno,0 totpage,0 orderno, '稅' typea, a.vccno,a.noa, a.datea, (case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end),
	   a.custno, '' comp, '' addr_invo,'' serial, '' tel,
	   0 total, 0 money, 0 back, a.tax, 0 total1, 0 pay, 0 unpay, 0 total2,c.salesno,c.sales
	   ,'vcca','',''
from vcca a left join cust c on a.custno=c.noa
where a.tax > 0 and (a.taxtype='1' or a.taxtype='5') and ([22]!=3) and
	  ((case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end) between @t_bmon and @t_emon) and
	  (a.custno between @t_bcustno and @t_ecustno) 
union all 
select '0' gno,0 pageno,0 totpage,0 orderno, '折' typea, a.vccno,a.noa, a.datea, (case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end),
	   a.custno, '' comp, '' addr_invo,'' serial, '' tel,
	   0 total, 0 money, 0 back, -1*a.tax, 0 total1, 0 pay, 0 unpay, 0 total2,c.salesno,c.sales
	   ,'vccb','',''
from vccb a left join cust c on a.custno=c.noa
where (a.typea='1' or a.typea='2') and (select count(*) from acomp where acomp like '%信屹%')>0 and --月結 將折讓單稅額也要付款
	  a.tax > 0  and ([22]!=3) and
	  ((case when isnull(a.mon,'')='' then left(a.datea,6) else a.mon end) between @t_bmon and @t_emon) and
	  (a.custno between @t_bcustno and @t_ecustno) 
order by custno,gno,mon,datea,noa

update a 
set tax=isnull((select sum(tax) tax from #result where noa=a.noa and (typea='稅')),0)
,comp=isnull(c.comp,''),addr_invo=isnull(c.addr_invo,''),serial=isnull(c.serial,''),tel=isnull(c.tel,'') 
from #result a left join cust c on a.custno = c.noa 
where isnull(a.noa,'')!='' and (a.typea!='稅')

delete #result where (typea='稅') and isnull(noa,'')!=''

declare @gno nvarchar(10)
declare @typea nvarchar(20)
declare @noa nvarchar(50)
declare @total float
declare @tax float
declare @mon nvarchar(7)
declare @custno nvarchar(50)
declare @comp nvarchar(max)
declare @t_custno nvarchar(50)
declare @t_comp nvarchar(max)
declare @t_money float
declare @t_back float
declare @t_tax float
declare @t_total1 float
declare @t_pay float
declare @t_unpay float
declare @t_total2 float
declare @salesno nvarchar(30) =''
declare @sales nvarchar(30) =''
declare @t_addr_invo nvarchar(max)
declare @t_serial nvarchar(max)
declare @t_tel nvarchar(max)
declare @addr_invo nvarchar(max)
declare @serial nvarchar(max)
declare @tel nvarchar(max)

set @t_custno = '#zzzz#zzzz'
set @t_comp = ''
set @t_money = 0
set @t_back = 0
set @t_tax = 0
set @t_total1 = 0
set @t_pay = 0
set @t_unpay = 0
set @t_total2 = 0

insert #result
select '1' gno,0 pageno,0 totpage,0 orderno, '' typea, '' noa,'' invoiceno, '' datea, '' mon, custno, MAX(comp) comp
		,MAX(addr_invo) addr_invo,MAX(serial) serial, MAX(tel) tel,0 total
		,SUM(case when typea = '1' then total else 0 end), sum(case when typea = '2' then total else 0 end)
		,sum(tax),0
		,isnull((select sum(ub.paysale) from umms ub where ub.vccno in (select noa from #result where gno='0' and custno=a.custno)),0) --單據
		+isnull((select sum(ub.paysale) from umms ub where (ub.custno+'-'+ub.paymon=ub.vccno 
		and (ub.paymon between @t_bmon and @t_emon) 
		and ub.custno=a.custno)),0) --月結 
		pay, 0 unpay, 0 total2,'','','','',''  from #result a group by custno
		
update #result set total1=money-back+tax where gno='1'
	
update #result set typea = (case typea when '1' then '出' else '退' end) where typea ='1' or typea = '2'

declare @tmp table( 
	coin nvarchar(20), 
	gno nvarchar(1), 
	custno nvarchar(50), 
	total decimal(18,0), 
	salesno nvarchar(30)
) 

insert into @tmp (gno,custno,salesno,total)
select '1',custno,salesno,SUM(money) from (
	--vcc
	select (case when aa.custno2!='' then aa.custno2 else aa.custno end) custno,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end) salesno
	,SUM(isnull((case when aa.typea='1' then 1 else -1 end)*unpay,0))
	-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where ub.custno+'-'+ub.paymon=ub.vccno and (ub.paymon<@t_bmon ) and ub.custno=(case when aa.custno2!='' then aa.custno2 else aa.custno end)),0) money 
	from view_vcc aa left join cust bb on aa.custno=bb.noa 
	where ((case when len(aa.mon)=0 then left(aa.datea,6) else aa.mon end) < @t_bmon ) and (left(isnull(kind,''),4)!='健勞勞退')
	group by (case when aa.custno2!='' then aa.custno2 else aa.custno end) ,(case when aa.salesno2!='' then aa.salesno2 when aa.salesno !='' then aa.salesno else bb.salesno end)
	having SUM(isnull((case when aa.typea='1' then 1 else -1 end)*unpay,0))	-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where ub.custno+'-'+ub.paymon=ub.vccno and (ub.paymon<@t_bmon ) and ub.custno=(case when aa.custno2!='' then aa.custno2 else aa.custno end)),0)!=0
	--vcca
	union all
	select  ca.custno,(case when cb.salesno2!='' then cb.salesno2 when cb.salesno !='' then cb.salesno else cc.salesno end) salesno
	,SUM(isnull(ca.tax,0))-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where ca.noa=ub.vccno and (ub.paymon<@t_bmon ) and ub.custno=ca.custno),0) 
	from vcca ca left join view_vcc cb on ca.noa=cb.invono left join cust cc on ca.custno=cc.noa
	where ((case when ca.mon!='' then ca.mon else LEFT(ca.datea,6) end) < @t_bmon ) and ([22]!=3)
	and (ca.taxtype='1' or ca.taxtype='5')
	group by ca.custno,(case when cb.salesno2!='' then cb.salesno2 when cb.salesno !='' then cb.salesno else cc.salesno end),ca.noa
	having SUM(isnull(ca.tax,0))-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where ca.noa=ub.vccno and (ub.paymon<@t_bmon ) and ub.custno=ca.custno),0) !=0
	--vccb
	union all
	select  ca.custno,cc.salesno salesno
	,SUM(isnull(-1*ca.tax,0))-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where ca.noa=ub.vccno and (ub.paymon<@t_bmon ) and ub.custno=ca.custno),0) 
	from vccb ca left join cust cc on ca.custno=cc.noa
	where (ca.typea='1' or ca.typea='2') and (select count(*) from acomp where acomp like '%信屹%')>0 and
	((case when ca.mon!='' then ca.mon else LEFT(ca.datea,6) end) < @t_bmon) and ([22]!=3)
	group by ca.custno,cc.salesno,ca.noa
	having SUM(isnull(ca.tax,0))-isnull((select sum(ub.paysale) from umms ub left join umm ua on ub.noa=ua.noa where ca.noa=ub.vccno and (ub.paymon<@t_bmon) and ub.custno=ca.custno),0) !=0
)tmp group by custno,salesno

delete @tmp where (custno not between @t_bcustno and @t_ecustno ) 

-----end 前期----------------------------------------------------------------------------------
update a 
set unpay=isnull((select sum(total) from @tmp where custno=a.custno and gno='1'),0) 
from #result a where a.gno='1' 

insert into #result (gno,noa,datea,mon,custno,comp,salesno,saless,total1,pay,unpay) 
select gno,'','','',a.custno,b.comp,a.salesno,c.namea,0,0,total from @tmp a 
left join cust b on a.custno=b.noa left join sss c on a.salesno=c.noa
where  not exists (select custno from #result where custno=a.custno) and gno='1' and total!=0

update #result set total1=total,total2=total+tax where gno='0'
update #result set total2=total1+unpay-pay where gno='1'


--插入前期帳款
insert #result(gno,typea,noa,mon,datea,total1,tax,total2,unpay,form,custno,comp,addr_invo,serial,tel,salesno,saless) 
select '0','出','前期帳款',@t_bmon,@t_bmon+'/01',0,0,0,sum(total),'vcc',custno
,MAX(b.comp),MAX(b.addr_invo),MAX(b.serial),MAX(b.tel),'' salesno,'' saless
from @tmp a left join cust b on a.custno=b.noa where gno='1'
and exists (select custno from #result where custno=a.custno group by custno) 
group by custno

insert #result (gno,noa,datea,mon,custno,comp,total1,pay,unpay,total2,salesno)
select '3','','','',custno,comp,SUM(total1),SUM(pay),SUM(unpay),SUM(total2),'' 
from #result where gno='1' group by custno,comp

--預收
update a
set pay=isnull((select SUM( opay - unopay) total from umm where custno=a.custno),0)
from #result a where gno='3'

delete #result where gno='1'
----------------------------------------------------
declare @idno int
declare @pageCount int = 12 --一頁含合計共幾行
declare @totalLineCount int = 5 --合計有幾行
----------------------------------------------------
------>>頁數處理 gno='1' 空白行 gno='2' 跳頁 gno='3' 合計

declare @nowOrder int = 0
declare @thisPageno int = 0
set @t_custno = '#zzzz#zzzz'
declare cursor_table cursor for
	select idno,gno,custno from #result where gno != '3' order by custno,case when noa like '前期帳款%' then '' else noa end,gno,datea
open cursor_table
fetch next from cursor_table
into @idno,@gno,@custno
while(@@FETCH_STATUS <> -1)
begin
	if(@t_custno != @custno)
	begin
		set @nowOrder = 1
		set @thisPageno = 1
		set @t_custno = @custno
	end
	else
	begin
		if(@nowOrder = (@pageCount))
		begin
			set @nowOrder = 1
			set @thisPageno = @thisPageno+1
		end
		else
		begin
			set @nowOrder = @nowOrder+1
		end
	end
	update #result set orderno=@nowOrder,pageno=@thisPageno where idno=@idno
	fetch next from cursor_table
	into @idno,@gno,@custno
end
close cursor_table
deallocate cursor_table

update a
	set totpage=b.maxpageno
from #result a
outer apply(select max(pageno) maxpageno from #result where a.custno=custno) b

update a
	set orderno=case when b.maxorderno>=@pageCount then 1 else b.maxorderno+1 end,
		pageno=case when b.maxorderno>=@pageCount then a.totpage+1 else a.totpage end,
		totpage=case when b.maxorderno>=@pageCount then a.totpage+1 else a.totpage end
from #result a
outer apply(select max(orderno) maxorderno from #result where a.custno=custno and (a.totpage=pageno)) b
where a.gno='3'

declare @totpage int = 0
declare cursor_table cursor for
	select idno,custno,totpage from #result where gno = '3' order by custno
open cursor_table
fetch next from cursor_table
into @idno,@custno,@totpage
while(@@FETCH_STATUS <> -1)
begin
	declare @t_maxOrderno int = (select max(orderno) from #result where (custno=@custno) and (totpage=@totpage))
	if(@t_maxOrderno>(@pageCount-@totalLineCount))
	begin
		update #result set pageno=@totpage+1,totpage=@totpage+1 where (custno=@custno) and (pageno=@totpage) and ((orderno>@t_maxOrderno) or pageno=0)
	end
	declare @thisOrder int = (select top 1 orderno from #result where (custno=@custno) and (gno='3'))
	declare @allLine int = (select sum(case when gno='0' or gno='4'  then 1 when gno='3' then @totalLineCount end) from #result where custno=@custno)
	while((@allLine % @pageCount) != 0)
	begin
		insert into #result(gno,orderno,pageno,totpage,typea,noa,invoiceno,datea,mon,custno,comp,addr_invo,serial,tel,salesno,saless,form)
			select
				'1',@thisOrder orderno,pageno,totpage,'' typea,'' noa,'' invoiceno,'' datea,'' mon,custno,comp,addr_invo,serial,tel,salesno,saless,'Empty' + cast(@thisOrder as nvarchar)
			from #result where idno=@idno
		set @thisOrder = @thisOrder+1
		if(@thisOrder > @pageCount)
		begin
			set @thisOrder = 1
			update #result set pageno=pageno+1 where custno=@custno and gno='3'
		end
		set @allLine = @allLine+1
	end
	update #result set orderno=@thisOrder where custno=@custno and gno='3'
	fetch next from cursor_table
	into @idno,@custno,@totpage
end
close cursor_table
deallocate cursor_table

update a
	set totpage = b.maxpageno
from #result a
outer apply(select max(pageno) maxpageno from #result where a.custno=custno) b

insert into #result(gno,orderno,pageno,totpage,custno)
	select
		'2',max(orderno)+1,pageno,totpage,custno
	from #result
	where pageno != totpage
	group by custno,pageno,totpage

update #result set fax=b.fax
		from #result a
		left join (
			select noa,fax
			from cust
		)b on a.custno=b.noa 

select
	gno,idno,orderno,pageno,totpage,typea,noa,invoiceno,datea,mon,custno,replace(comp,'~#$',char(39)) comp,addr_invo,serial,tel
	,(select top 1 saless from #result where custno=a.custno and saless!='' order by datea desc) saless
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,total),1)),4,30)) total
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,money),1)),4,30)) money
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,back),1)),4,30)) back
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,tax),1)),4,30)) tax
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,(case when typea !='出' and typea!='稅' and gno='0' then -1 else 1 end)*total1),1)),4,30)) total1
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,pay),1)),4,30)) pay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,(case when typea !='出' and typea!='稅' and gno='0' then -1 else 1 end)*unpay),1)),4,30)) unpay
	,reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,(case when typea !='出' and typea!='稅' and gno='0' then -1 else 1 end)*total2),1)),4,30)) total2
	,(select count(*) from #result where (gno='0') and (custno=a.custno)) pcount
	,memo,fax
from #result a
order by custno,totpage,pageno,orderno,mon,datea,case when noa='前期帳款' then '0' else noa end,idno


IF OBJECT_ID('tempdb..#result')is not null
BEGIN
	set @cmd = 'drop table #result'
	EXECUTE sp_executesql @cmd
END;
--************************************************************************************************
z_ummst12:--z_ummst12
	declare @t_bdate nvarchar(10) = case when '#non'=[3] then '' else [3] end
	declare @t_edate nvarchar(10) = case when '#non'=[4] then char(255) else [4] end
	declare @t_bcustno nvarchar(50) = case when '#non'=[5] then '' else [5] end
	declare @t_ecustno nvarchar(50) = case when '#non'=[6] then char(255) else [6] end
	declare @t_bmon nvarchar(10) = case when '#non'=[13] then '' else [13] end
	declare @t_emon nvarchar(10) = case when '#non'=[14] then char(255) else [14] end
	declare @t_project nvarchar(50)=case when '#non' = '[25]' then '' else '[25]' end
	----------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(10),
		custno nvarchar(50),
		cust nvarchar(100),
		nick nvarchar(100),
		salesno nvarchar(50),
		sales nvarchar(100),
		discount float
	)
	insert into @tmp(gno,custno,discount)
	select '1',ISNULL(a.custno,''),sum(isnull(b.[money],0))
	from umm a
	left join umms b on a.noa=b.noa
	where (LEFT(b.acc1,4)=(case when @t_project='FE' then '4107' else '4106' end) or charindex(b.acc2,'銷貨折讓')>0)
	and isnull(a.datea,'') between @t_bdate and @t_edate
	and isnull(a.mon,'') between @t_bmon and @t_emon
	and ISNULL(a.custno,'') between @t_bcustno and @t_ecustno
	group by ISNULL(a.custno,'')
	
	insert into @tmp(gno,discount)
	select '2',SUM(ISNULL(discount,0))
	from @tmp
	
	update @tmp set cust=b.comp,nick=b.nick,salesno=b.salesno,sales=b.sales
	from @tmp a
	left join cust b on a.custno=b.noa
	
	select custno a01
		,replace(cust,'~#$',char(39)) a02
		,sales a03
		,dbo.getComma(discount,0) a04
		,* 
	from @tmp order by gno,custno;
--*************************************************************************************************************************************
z_ummst13:--z_ummst13
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_bdate = case when '#non' = [3] then '' else [3] end
set @t_edate = case when '#non' = [4] then CHAR(255) else [4] end
declare @tmp table(
	gno nvarchar(1),
	custno nvarchar(50),
	comp nvarchar(MAX),
	bmoney float,
	opay float,
	unopay float,
	opbalance float
)

insert into @tmp
	select '0'gno,a.noa,a.nick
	--前期預收
	,isnull((select SUM(opay-unopay)  from umm where custno=a.noa and datea < @t_bdate),0) bmoney
	--本期預收
	,isnull((select SUM(opay)  from umm where custno=a.noa and datea  between @t_bdate and @t_edate),0) opay
	--本期預收沖帳
	,isnull((select SUM(unopay)  from umm where custno=a.noa and datea between @t_bdate and @t_edate),0) unopay
	,0
from (select noa,nick from cust union all select noa,namea from carOwner union all select ''noa,''namea union all select null noa,null namea)a

delete @tmp where bmoney=0 and opay=0 and opbalance=0 and unopay=0

insert into @tmp
select '1','','',sum(bmoney),sum(opay),sum(unopay),sum(opbalance) from @tmp

select gno,custno,replace(comp,'~#$',char(39)) comp,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,bmoney),1)),4,30)) bmoney,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,opay),1)),4,30)) opays,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,unopay),1)),4,30)) unopay,
	reverse(substring(reverse(convert(nvarchar(30),CONVERT(money,bmoney+opay-unopay),1)),4,30)) opbalance
from @tmp order by gno,custno;	