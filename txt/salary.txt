changedata_dj:--更新大博異動資料
declare @t_mon nvarchar(50) = [1]
declare @t_terr nvarchar(MAX) = [2]
declare @t_typea nvarchar(MAX) = [3]

if(@t_typea='1')
begin
	update salary
	set changedata=isnull(changedata,'')+(case when isnull(changedata,'')!='' then ',' else '' end)+@t_terr
	where mon=@t_mon
end

if(@t_typea='2')
begin
	update salary
	set changedata=isnull(changedata,'')+(case when isnull(changedata,'')!='' then ',' else '' end)+@t_terr
	where mon>=@t_mon
end
;
---------------------------------------------------------------------------------------------------------------------
inssalvaca:--inssalvaca
declare @t_year nvarchar(50) = [1]

if((select count(*) from salvaca where noa=@t_year)=0)
begin
	insert salvaca(noa,total)
	select @t_year,0
end

declare @tmp table(
	noa nvarchar(255),
	noq nvarchar(255),
	sssno nvarchar(255),
	namea nvarchar(255),
	id nvarchar(255),
	job nvarchar(255),
	jobday nvarchar(255),
	inday float, 
	outday float,
	boutday float,
	total float,
	cno nvarchar(50),
	memo nvarchar(MAX),
	prevyeartime float,
	limitday float,
	nextyeartime float,
	
	t_datea float,
	t_date1 float,
	t_date2 float,
	t_year float
)

insert @tmp
select @t_year,'000',noa,namea,id,job,indate jobday,0 inday,0 outday,0 boutday,0 total,cno,'' memo
,0 prevyeartime,0 limitday,0 nextyeartime,0,0,0,0
from sss a where isnull(outdate,'')=''
and not exists (select * from salvacas where sssno=a.noa and noa=@t_year)
and ISNULL(indate,'')!='' and left(indate,len(@t_year))<=@t_year
and len(indate)=len(@t_year)+6 and indate like '%[0-9][0-9][0-9]/[0-9][0-9]/[0-9][0-9]'

update @tmp
set t_datea=CAST(@t_year as float)-cast(left(jobday,len(@t_year)) as float)
+((12-cast(left(right(jobday,5),2) as float))/12)
+((31-cast(right(jobday,2) as float)+1)/31/12)

update @tmp
set t_date1=t_datea-FLOOR(t_datea)
,t_date2=1-(t_datea-FLOOR(t_datea))

update @tmp
set inday=round(case 
when t_datea-t_date2 < 0.5 then 0
when t_datea-t_date2 < 1 then 3*8
when t_datea-t_date2 < 2 then 7*8*t_date2
when t_datea-t_date2 < 3 then 10*8*t_date2
when t_datea-t_date2 < 5 then 14*8*t_date2
when t_datea-t_date2 < 10 then 15*8*t_date2
else case when 15+FLOOR(t_datea-t_date2)-9>30
then 30*8*t_date2 else (15++FLOOR(t_datea-t_date2)-9)*8*t_date2 end
end+case 
when t_datea<0.5 then 0
when t_datea<1 then 3*8*t_date1
when t_datea < 2 then 7*8*t_date1
when t_datea < 3 then 10*8*t_date1
when t_datea < 5 then 14*8*t_date1
when t_datea < 10 then 15*8*t_date1
else case when 15+FLOOR(t_datea)-9>30
then 30*8*t_date1 else (15++FLOOR(t_datea)-9)*8*t_date1 end
end,0)
where (@t_year>='106' and len(@t_year)='3') or (@t_year>='2017' and len(@t_year)='4')

--舊制
update @tmp
set inday=round(case
when t_datea-t_date2<1 then 0
when t_datea-t_date2<3 then 7*8*t_date2
when t_datea-t_date2<5 then 10*8*t_date2
when t_datea-t_date2<10 then 14*8*t_date2
else case when (14+FLOOR(t_datea-t_date2)-9)>30 then 30*8*t_date2
else (14+FLOOR(t_datea-t_date2)-9)*8*t_date2 end
end+case
when t_datea<1 then 0
when t_datea<3 then 7*8*t_date1
when t_datea<5 then 10*8*t_date1
when t_datea<10 then 14*8*t_date1
else case when (14+FLOOR(t_datea)-9)>30 then 30*8*t_date1
else (14+FLOOR(t_datea)-9)*8*t_date1 end
end,0)
where not((@t_year>='106' and len(@t_year)='3') or (@t_year>='2017' and len(@t_year)='4'))

update a
set prevyeartime=isnull(b.nextyeartime,0)
from @tmp a
outer apply(select * from salvacas where noa=right('0000'+cast(CAST(@t_year as int)-1 as nvarchar(10)),(len(@t_year))) 
and sssno=a.sssno
) b

update a
set noq=right('000'+cast(cast(isnull(b.mnoq,0) as int)+rec as nvarchar(50)),3)
from (select *,ROW_NUMBER() over (order by sssno) rec from @tmp) a
outer apply (select MAX(noq)mnoq from salvacas where noa=@t_year) b

insert salvacas(noa,noq,sssno,namea,id,job,jobday,inday,outday,boutday,total,cno,memo,prevyeartime,limitday,nextyeartime)
select noa,noq,sssno,namea,id,job,jobday,inday,outday,boutday,total,cno,memo,prevyeartime,limitday,nextyeartime from @tmp

update salvaca
set total=(select count(*) from salvacas where noa=@t_year)
where noa=@t_year

;
---------------------------------------------------------------------------------------------------------------------
salaryimport:--salaryimport
SET QUOTED_IDENTIFIER OFF
declare @mon nvarchar(50)=[1]
declare @r_len nvarchar(50)=[2]
declare @person nvarchar(50)=[3] --本國/日薪/外勞/時薪
declare @monkind nvarchar(50)=[4] --本月/上期/下期
declare @proj nvarchar(50)=[5]
declare @date1 nvarchar(50)=[6] --整月/上/下期
declare @date2 nvarchar(50)=[7] --整月/上/下期
declare @date3 nvarchar(50)=[8] --上期 --整月加班超過46小時
declare @date4 nvarchar(50)=[9] --上期 --整月加班超過46小時
declare @date5 nvarchar(50)=[10] --下期 --遲到使用
declare @date6 nvarchar(50)=[11] --下期 --遲到使用

declare @addselect nvarchar(50)=[12] --'0@沒有加班時數,1@根據加班單,2@根據出勤紀錄表,3@根據出勤紀錄自訂加班時數'
declare @addlimit nvarchar(50)=[13] --'0@無限制,1@根據calss5限制加班總時數'
declare @addmon nvarchar(50)=[14]--加班月份(換期期限或當月)

IF OBJECT_ID('tempdb..#tmpa')is not null
BEGIN
   drop table #tmpa
END

IF OBJECT_ID('tempdb..#tmp')is not null
BEGIN
   drop table #tmp
END

IF OBJECT_ID('tempdb..#montmp')is not null
BEGIN
   drop table #montmp
END

--注意事項:
--凌晨6點之前都算前一天的班
--salpresent表身日期clockindate,clockoutdate為實際打卡日期
--輪班 因使用 月時數控制 而非 排班表
--輪班 不對照 假別主檔(當月工作滿時數即可) 若有 加班 或 假日 使用加班方式加給費用

create table #montmp(
	noa nvarchar(20),
)
declare @tmpdate nvarchar(50)=@date3 --整月/上/下期

while(@date6>=@tmpdate)
begin
	insert #montmp
	select @tmpdate
	
	set @tmpdate=dbo.q_cdn(@tmpdate,1)
end

----------------------------------------
--暫存當月上下班打卡內容 與 當天班別明細
create table #tmpa(
	noa nvarchar(20), --上班日
	noq nvarchar(20),
	sssno nvarchar(50),
	namea nvarchar(50),
	clockindate nvarchar(50), --上班打卡日期
	clockin nvarchar(50), --上班打卡時間
	clockoutdate nvarchar(50), --上班打卡日期
	clockout nvarchar(50),--下班打卡時間
	w133 float,--加班<=2
	w166 float,--加班>2
	w100 float,--國訂 日<8
	w200 float,--例假 日>8
	w266 float,--休息 六>8
	hrspecial float,--換休
	isforget bit,
	------------------------
	weeks nvarchar(10),
	holiday bit,--國定假日
	workday bit,--補假日
	------------------------
	class5 nvarchar(50),--身分class5
	cclass5 nvarchar(50),--當天實際class5
	btime nvarchar(50),
	etime nvarchar(50),
	
	wmon nvarchar(50), -- 一 -w工r休h例
	wtue nvarchar(50), -- 二
	wwed nvarchar(50), -- 三
	wthu nvarchar(50), -- 四
	wfri nvarchar(50), -- 五
	wsat nvarchar(50), -- 六
	wsun nvarchar(50), -- 日
	wtype nvarchar(50),
	
	isshift float,
	shifthours float, --H/天
	shiftmhours float, --H/月
	sworkday float,
	srestday float,
	bresttime nvarchar(50),
	eresttime nvarchar(50),
	bresttime2 nvarchar(50),
	eresttime2 nvarchar(50),
	bresttime3 nvarchar(50),
	eresttime3 nvarchar(50),
	---------------------------
	meals float,
	mbtime1 nvarchar(50),
	mhours1 float,
	mbtime2	nvarchar(50),
	mhours2 float,
	-------------------------
	overtime nvarchar(50),
	ostand float,
	doverhours float,
	overhours float,
	dhoverhours float,
	hoverhours float,
	------------------------
	kind nvarchar(10),
	------------------------
	late float,
	latenoallmin float,
	latenoallnum float,
	late2 float,
	late2dsmoney float,
	late2dshour float,
	late2dnmoney float,
	late2dnhour float,
	latemin float,
	latenum float,
	latedmoney float,
	latedfull float,
	late2min float,
	late2num float,
	late2dmoney float,
	late2dfull float,
	lateallmin float,
	latemalldmoney float,
	latemalldfull float,
	lateallnum float,
	latenalldmoney float,
	latenalldfull float,
	-----------------------
	early float,
	earlynoallmin float,
	earlynoallnum float,
	early2 float,
	early2dsmoney float,
	early2dshour float,
	early2dnmoney float,
	early2dnhour float,
	earlynum float,
	earlyndmoney float,
	earlyndfull float,
	-----------------------
	vacanodhours float,
	vacadsmoney float,
	vacadshour float,
	vacanum float,
	vacandmoney float,
	vacandfull float,
	vacahours float,
	vacahdmoney float,
	vacahdfull float,
	vacadays float,
	vacaddmoney float,
	vacaddfull float,
	------------------------
	isvstotal bit,
	------------------------
	sicknodhours float,
	sickdsmoney float,
	sickdshour float,
	sicknum float,
	sickndmoney float,
	sickndfull float,
	sickhours float,
	sickhdmoney float,
	sickhdfull float,
	sickdays float,
	sickddmoney float,
	sickddfull float,
	------------------------
	leavedsmoney float,
	leavedshour float,
	leavendmoney float,
	leavendfull float,
	------------------------
	fclocknodnum float,
	fclockdsmoney float,
	fclockdshour float,
	fclockdnum float,
	fclockndmoney float,
	fclockndfull float,
	------------------------
	workhours float,--工作時數
	addhours float, --加班單時數
	-------------------------
	dlatemin float, --當天遲到分鐘數
	dearlymin float, --當天早退分鐘數
	dvacahours float, --當天請假時數
	vacaspecial bit,--特休假
	vacasick float, --事假
	vacaperson float, --病假
	hr_leave float,--當天曠職
	-----------------------
	mealsnum float,--伙食
	
	--不使用欄位
	
	--leave float,
	--vacanonum float,
	--vacahalfdfull float,
)

insert #tmpa(noa,noq,sssno,namea,clockindate,clockin,clockoutdate,clockout,w133,w166,w100,w200,w266,hrspecial,isforget
,class5,cclass5,btime,etime
,wmon,wtue,wwed,wthu,wfri,wsat,wsun
,isshift,shifthours,shiftmhours,sworkday,srestday,bresttime,eresttime,bresttime2,eresttime2,bresttime3,eresttime3
,meals,mbtime1,mhours1,mbtime2,mhours2
,overtime,ostand,doverhours,overhours,dhoverhours,hoverhours
------------------------
,kind
------------------------
,late,latenoallmin,latenoallnum,late2,late2dsmoney,late2dshour,late2dnmoney,late2dnhour
,latemin,latenum,latedmoney,latedfull,late2min,late2num,late2dmoney,late2dfull
,lateallmin,latemalldmoney,latemalldfull,lateallnum,latenalldmoney,latenalldfull
-----------------------
,early,earlynoallmin,earlynoallnum,early2,early2dsmoney,early2dshour,early2dnmoney,early2dnhour,
earlynum,earlyndmoney,earlyndfull
-----------------------
,vacanodhours,vacadsmoney,vacadshour,vacanum,vacandmoney,vacandfull,vacahours
,vacahdmoney,vacahdfull,vacadays,vacaddmoney,vacaddfull
------------------------
,isvstotal
------------------------
,sicknodhours,sickdsmoney,sickdshour,sicknum,sickndmoney,sickndfull
,sickhours,sickhdmoney,sickhdfull,sickdays,sickddmoney,sickddfull
------------------------
,leavedsmoney,leavedshour,leavendmoney,leavendfull
------------------------
,fclocknodnum,fclockdsmoney,fclockdshour,fclockdnum,fclockndmoney,fclockndfull
-----------------------
,addhours,workhours,dlatemin,dearlymin,dvacahours,vacaspecial,vacasick,vacaperson,hr_leave,mealsnum)
select a.noa,a.noq,a.sssno,a.namea,a.clockindate,a.clockin,a.clockoutdate,a.clockout,a.w133,a.w166,a.w100,isnull(a.w200,0),isnull(a.w266,0),ISNULL(a.hrspecial,0),ISNULL(a.isforget,0)
,case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end
,case when isnull(c1.noa,'')!='' then c1.noa else c2.noa end
,case when isnull(c1.noa,'')!='' then c1.btime else c2.btime end
,case when isnull(c1.noa,'')!='' then c1.etime else c2.etime end

,case when isnull(c1.noa,'')!='' then c1.wmon else c2.wmon end
,case when isnull(c1.noa,'')!='' then c1.wtue else c2.wtue end
,case when isnull(c1.noa,'')!='' then c1.wwed else c2.wwed end
,case when isnull(c1.noa,'')!='' then c1.wthu else c2.wthu end
,case when isnull(c1.noa,'')!='' then c1.wfri else c2.wfri end
,case when isnull(c1.noa,'')!='' then c1.wsat else c2.wsat end
,case when isnull(c1.noa,'')!='' then c1.wsun else c2.wsun end

,case when isnull(c1.noa,'')!='' then c1.isshift else c2.isshift end
,case when isnull(c1.noa,'')!='' then c1.shifthours else c2.shifthours end
,isnull((select top 1 hours from salschedulings where class5no=case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end and mon=@mon),0)
,case when isnull(c1.noa,'')!='' then c1.workday else c2.workday end
,case when isnull(c1.noa,'')!='' then c1.restday else c2.restday end
,case when isnull(c1.noa,'')!='' then c1.bresttime else c2.bresttime end
,case when isnull(c1.noa,'')!='' then c1.eresttime else c2.eresttime end
,case when isnull(c1.noa,'')!='' then c1.bresttime2 else c2.bresttime2 end
,case when isnull(c1.noa,'')!='' then c1.eresttime2 else c2.eresttime2 end
,case when isnull(c1.noa,'')!='' then c1.bresttime3 else c2.bresttime3 end
,case when isnull(c1.noa,'')!='' then c1.eresttime3 else c2.eresttime3 end
,case when isnull(adj.meals,0)>0 then isnull(adj.meals,0) when isnull(c1.noa,'')!='' then c1.meals else c2.meals end
,case when isnull(c1.noa,'')!='' then c1.mbtime1 else c2.mbtime1 end
,case when isnull(c1.noa,'')!='' then c1.mhours1 else c2.mhours1 end
,case when isnull(c1.noa,'')!='' then c1.mbtime2 else c2.mbtime2 end
,case when isnull(c1.noa,'')!='' then c1.mhours2 else c2.mhours2 end
,case when isnull(c1.noa,'')!='' then c1.overtime else c2.overtime end
,case when isnull(c1.noa,'')!='' then c1.ostand else c2.ostand end
,case when isnull(c1.noa,'')!='' then c1.doverhours else c2.doverhours end
,case when isnull(c1.noa,'')!='' then c1.overhours else c2.overhours end
,case when isnull(c1.noa,'')!='' then c1.dhoverhours else c2.dhoverhours end
,case when isnull(c1.noa,'')!='' then c1.hoverhours else c2.hoverhours end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.kind else c2.kind end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.late else c2.late end
,case when isnull(c1.noa,'')!='' then c1.latenoallmin else c2.latenoallmin end
,case when isnull(c1.noa,'')!='' then c1.latenoallnum else c2.latenoallnum end
,case when isnull(c1.noa,'')!='' then c1.late2 else c2.late2 end
,case when isnull(c1.noa,'')!='' then c1.late2dsmoney else c2.late2dsmoney end
,case when isnull(c1.noa,'')!='' then c1.late2dshour else c2.late2dshour end
,case when isnull(c1.noa,'')!='' then c1.late2dnmoney else c2.late2dnmoney end
,case when isnull(c1.noa,'')!='' then c1.late2dnhour else c2.late2dnhour end
,case when isnull(c1.noa,'')!='' then c1.latemin else c2.latemin end
,case when isnull(c1.noa,'')!='' then c1.latenum else c2.latenum end
,case when isnull(c1.noa,'')!='' then c1.latedmoney else c2.latedmoney end
,case when isnull(c1.noa,'')!='' then c1.latedfull else c2.latedfull end
,case when isnull(c1.noa,'')!='' then c1.late2min else c2.late2min end
,case when isnull(c1.noa,'')!='' then c1.late2num else c2.late2num end
,case when isnull(c1.noa,'')!='' then c1.late2dmoney else c2.late2dmoney end
,case when isnull(c1.noa,'')!='' then c1.late2dfull else c2.late2dfull end
,case when isnull(c1.noa,'')!='' then c1.lateallmin else c2.lateallmin end
,case when isnull(c1.noa,'')!='' then c1.latemalldmoney else c2.latemalldmoney end
,case when isnull(c1.noa,'')!='' then c1.latemalldfull else c2.latemalldfull end
,case when isnull(c1.noa,'')!='' then c1.lateallnum else c2.lateallnum end
,case when isnull(c1.noa,'')!='' then c1.latenalldmoney else c2.latenalldmoney end
,case when isnull(c1.noa,'')!='' then c1.latenalldfull else c2.latenalldfull end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.early else c2.early end
,case when isnull(c1.noa,'')!='' then c1.earlynoallmin else c2.earlynoallmin end
,case when isnull(c1.noa,'')!='' then c1.earlynoallnum else c2.earlynoallnum end
,case when isnull(c1.noa,'')!='' then c1.early2 else c2.early2 end
,case when isnull(c1.noa,'')!='' then c1.early2dsmoney else c2.early2dsmoney end
,case when isnull(c1.noa,'')!='' then c1.early2dshour else c2.early2dshour end
,case when isnull(c1.noa,'')!='' then c1.early2dnmoney else c2.early2dnmoney end
,case when isnull(c1.noa,'')!='' then c1.early2dnhour else c2.early2dnhour end
,case when isnull(c1.noa,'')!='' then c1.earlynum else c2.earlynum end
,case when isnull(c1.noa,'')!='' then c1.earlyndmoney else c2.earlyndmoney end
,case when isnull(c1.noa,'')!='' then c1.earlyndfull else c2.earlyndfull end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.vacanodhours else c2.vacanodhours end
,case when isnull(c1.noa,'')!='' then c1.vacadsmoney else c2.vacadsmoney end
,case when isnull(c1.noa,'')!='' then c1.vacadshour else c2.vacadshour end
,case when isnull(c1.noa,'')!='' then c1.vacanum else c2.vacanum end
,case when isnull(c1.noa,'')!='' then c1.vacandmoney else c2.vacandmoney end
,case when isnull(c1.noa,'')!='' then c1.vacandfull else c2.vacandfull end
,case when isnull(c1.noa,'')!='' then c1.vacahours else c2.vacahours end
,case when isnull(c1.noa,'')!='' then c1.vacahdmoney else c2.vacahdmoney end
,case when isnull(c1.noa,'')!='' then c1.vacahdfull else c2.vacahdfull end
,case when isnull(c1.noa,'')!='' then c1.vacadays else c2.vacadays end
,case when isnull(c1.noa,'')!='' then c1.vacaddmoney else c2.vacaddmoney end
,case when isnull(c1.noa,'')!='' then c1.vacaddfull else c2.vacaddfull end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.isvstotal else c2.isvstotal end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.sicknodhours else c2.sicknodhours end
,case when isnull(c1.noa,'')!='' then c1.sickdsmoney else c2.sickdsmoney end
,case when isnull(c1.noa,'')!='' then c1.sickdshour else c2.sickdshour end
,case when isnull(c1.noa,'')!='' then c1.sicknum else c2.sicknum end
,case when isnull(c1.noa,'')!='' then c1.sickndmoney else c2.sickndmoney end
,case when isnull(c1.noa,'')!='' then c1.sickndfull else c2.sickndfull end
,case when isnull(c1.noa,'')!='' then c1.sickhours else c2.sickhours end
,case when isnull(c1.noa,'')!='' then c1.sickhdmoney else c2.sickhdmoney end
,case when isnull(c1.noa,'')!='' then c1.sickhdfull else c2.sickhdfull end
,case when isnull(c1.noa,'')!='' then c1.sickdays else c2.sickdays end
,case when isnull(c1.noa,'')!='' then c1.sickddmoney else c2.sickddmoney end
,case when isnull(c1.noa,'')!='' then c1.sickddfull else c2.sickddfull end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.leavedsmoney else c2.leavedsmoney end
,case when isnull(c1.noa,'')!='' then c1.leavedshour else c2.leavedshour end
,case when isnull(c1.noa,'')!='' then c1.leavendmoney else c2.leavendmoney end
,case when isnull(c1.noa,'')!='' then c1.leavendfull else c2.leavendfull end
-----------------------------------------------------------------------------------
,case when isnull(c1.noa,'')!='' then c1.fclocknodnum else c2.fclocknodnum end
,case when isnull(c1.noa,'')!='' then c1.fclockdsmoney else c2.fclockdsmoney end
,case when isnull(c1.noa,'')!='' then c1.fclockdshour else c2.fclockdshour end
,case when isnull(c1.noa,'')!='' then c1.fclockdnum else c2.fclockdnum end
,case when isnull(c1.noa,'')!='' then c1.fclockndmoney else c2.fclockndmoney end
,case when isnull(c1.noa,'')!='' then c1.fclockndfull else c2.fclockndfull end
-----------------------------------------------------------------------------------
,0,0,0,0,0,0,0,0,0,0
from (
	select noa,min(noq)noq,sssno,MAX(namea)namea,SUM(w133)w133,SUM(w166)w166,SUM(w100)w100,SUM(w200)w200,SUM(w266)w266,SUM(hr_special)hrspecial
	,Min(case when ISNULL(clockindate,'')='' then noa else clockindate end)clockindate,MIN(clockin)clockin
	,Max(case when ISNULL(clockoutdate,'')='' then noa else clockoutdate end)clockoutdate,MAX(clockout)clockout
	,sum(case when isnull(isforget,0)=1 then 1 else 0 end)isforget from salpresents group by noa,sssno
	union all
	select a.noa,'' noq,s.noa,s.namea,0 w133,0 w166,0 w100,0 w200,0 w266,0 hrspecial,a.noa clockindate,'' clockin,a.noa clockoutdate,''clockout ,0 isforget
	from #montmp a,sss s where not exists (select * from salpresents where noa=a.noa and s.noa=sssno)
) a left join sss s on a.sssno=s.noa
--班別-調整紀錄
outer apply (select top 1 * from saladjust where noa=a.sssno and datea<=a.noa order by datea desc)adj
--非輪班
outer apply(select top 1 * from class5s  where noa=case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end
and bdate<a.noa order by bdate desc --有效日
)c1
--輪班(用上班時間與約定上班時間的時差來判斷)
outer apply(select top 1 * from class5s  where ','+case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end+',' like '%,'+noa+',%'
and bdate<a.noa
order by bdate desc,
	case when left(btime,2)<='04' and clockin between '20:00:00' and '23:59:59' --昨天進(24)
	then ABS(cast(LEFT(clockin,2)as float)-cast('24' as float))
	when left(btime,2)>='20' and clockin between '00:00:00' and '05:00:00' --隔天進(24)
	then ABS((cast(LEFT(clockin,2)as float)+24)-cast(LEFT(btime,2) as float))
	else ABS(cast(LEFT(clockin,2)as float)-cast(LEFT(btime,2) as float)) end --正常區間
)c2
where left(a.noa,len(@mon))=@mon
and (s.person=@person or len(@person)=0)

--星期
update #tmpa set weeks=DATEPART(weekday,case when @r_len='3' then dbo.ChineseEraName2AD(noa) else noa end)-1

--更新正常工作日類別
update #tmpa set wtype=case when weeks=1 then wmon when weeks=2 then wtue when weeks=3 then wwed 
when weeks=4 then wthu when weeks=5 then wfri when weeks=6 then wsat when weeks=0 then wsun else '' end

--更新 假別主檔 正常班 假日 與 補休工作日
update a set holiday=case when b.noa is null then 0 when isnull(iswork,0)=1 then 0 else 1 end
,workday=case when b.noa is null then 0 when isnull(iswork,0)=1 then 1 else 0 end
from #tmpa a outer apply (select * from holiday where noa=a.noa)b

--更新加班時數
--換休時數不處理再此(處理方式加班都先以可換休方式處理，當要結算薪資時在扣除已換休時數在換算成加班時數)
--@addselect --'0@沒有加班時數,1@根據加班單,2@根據出勤紀錄表,3@根據出勤紀錄自訂加班時數'
if(@addselect='0' or @mon!=@addmon) --當加班費月份!=當月薪資結算月 加班費最後再結算 在此先歸零 NV用
begin
	update #tmpa set addhours=0,hrspecial=0,w100=0,w133=0,w166=0,w200=0,w266=0
end
if(@addselect='1' and @mon=@addmon)
begin
	--加班單內判斷是否為國訂假日平日
	update a set addhours=isnull(b.hours,0),hrspecial=isnull(b.hr_special,0)
	,w100=isnull(b.w100,0),w133=isnull(b.w133,0),w166=isnull(b.w166,0),w200=isnull(b.w200,0),w266=isnull(b.w266,0) 
	from #tmpa a outer apply (select SUM(hours)hours,SUM(hr_special)hr_special
	,sum(case when typea='國定假日' or typea='例假日' then case when hours>8 then 8 else hours end else 0 end )w100
	,sum(case when typea='休息日' then case when hours>2 then 2 else hours end
	when typea='國定假日' and hours>8 then case when hours-8>2 then 2 else hours-8 end
	when typea='休息日' then 0 	when typea='工作日' then case when hours>2 then 2 else hours end else 0 end )w133
	,sum(case when typea='休息日' and hours>2 then case when hours>8 then 6 else hours-2 end
	when typea='國定假日' and hours>10 then hours-10
	when typea='休息日' then 0 when typea='工作日' then case when hours>2 then hours-2 else 0 end else 0 end )w166
	,SUM(case when typea='例假日' and hours>8 then hours-8 else 0 end)w200
	,SUM(case when typea='休息日' and hours>8 then hours-8 else 0 end)w266
	from saladd where datea=case when btime<'05:59' then dbo.q_cdn(a.noa,1) else a.noa end and sssno=a.sssno and isnull(isapv,0)=1)b
end
if(@addselect='2' and @mon=@addmon)
begin
	update a 
	set addhours=case when left(overtime,2)>='20' and clockout between '00:00:00' and '08:00:00' --隔天出
	then round((Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+overtime,Convert(NVARCHAR(10),DateAdd(Day,1,getdate()),20)+' '+clockout))/60.0,1)
	else round((Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+overtime,Convert(NVARCHAR(10),getdate(),20)+' '+clockout))/60.0,1) end	
	,w100=0,w133=0,w166=0,w200=0,w266=0 
	from #tmpa a where isnull(overtime,'')!='' and clockout>isnull(overtime,'')
	
	update #tmpa 
	set w100=case when holiday=1 or (wtype='h' and workday!=1) then 8 else 0 end --例假 國訂
	,w133=case 
		when wtype='r' then 2 --休
		when holiday=1 and addhours>8 then (case when addhours-8>2 then 2 else addhours-8 end)--國訂
		when wtype='h' then 0 --例假
		else (case when addhours>2 then 2 else addhours end) end --平常日
	,w166=case 
		when wtype='r' and addhours<=4 then 2 when wtype='r' and addhours<=8 then 6 --休
		when holiday=1 and addhours>10 then addhours-10 --國訂
		when wtype='h' then 0 --例假
		else (case when addhours>2 then addhours-2 else 0 end) end --平常日
	,w200=case when wtype='h' and addhours>8 then addhours-8 else 0 end --例假
	,w266=case when wtype='r' and addhours>8 then 4 else 0 end --休
	where addhours>0 and isshift=0
	
	--update #tmpa 
	--set w100=case when holiday=1 or (weeks=0 and workday!=1) then 8 else 0 end
	--,w133=case 
	--	when weeks=6 then 2 --六
	--	when holiday=1 and addhours>8 then (case when addhours-8>2 then 2 else addhours-8 end)--國訂
	--	when weeks=0 then 0 --日
	--	else (case when addhours>2 then 2 else addhours end) end --平常日
	--,w166=case 
	--	when weeks=6 and addhours<=4 then 2 when weeks=6 and addhours<=8 then 6 --六
	--	when holiday=1 and addhours>10 then addhours-10 --國訂
	--	when weeks=0 then 0 --日
	--	else (case when addhours>2 then addhours-2 else 0 end) end --平常日
	--,w200=case when weeks=0 and addhours>8 then addhours-8 else 0 end --日
	--,w266=case when weeks=6 and addhours>8 then 4 else 0 end --六
	--where addhours>0 and isshift=0
end
if(@addselect='3' and @mon=@addmon)
begin
	update #tmpa set addhours=isnull(w100,0)+isnull(w133,0)+ISNULL(w166,0)+ISNULL(w200,0)+isnull(w266,0)
end

---------------------------------------------------------------------------
--抵扣換休 --不給予加班費 逾期自行加減項 給予
update #tmpa
set w133=case when hrspecial>=w133 then 0 else w133-hrspecial end
,hrspecial=case when hrspecial>=w133 then hrspecial-w133 else 0 end
where hrspecial>0 and w133>0

update #tmpa
set w166=case when hrspecial>=w166 then 0 else w166-hrspecial end
,hrspecial=case when hrspecial>=w166 then hrspecial-w166 else 0 end
where hrspecial>0 and w166>0

update #tmpa
set w100=case when hrspecial>=w100 then 0 else w100-hrspecial end
,hrspecial=case when hrspecial>=w100 then hrspecial-w100 else 0 end
where hrspecial>0 and w100>0

update #tmpa
set w200=case when hrspecial>=w200 then 0 else w200-hrspecial end
,hrspecial=case when hrspecial>=w200 then hrspecial-w200 else 0 end
where hrspecial>0 and w200>0

update #tmpa
set w266=case when hrspecial>=w266 then 0 else w266-hrspecial end
,hrspecial=case when hrspecial>=w266 then hrspecial-w266 else 0 end
where hrspecial>0 and w266>0

update #tmpa set addhours=isnull(w100,0)+isnull(w133,0)+ISNULL(w166,0)+ISNULL(w200,0)+isnull(w266,0)
---------------------------------------------------------------------------

declare @sssno nvarchar(50)
declare @datea nvarchar(50)
declare @noa nvarchar(50)
declare @noq nvarchar(50)
declare @weeks nvarchar(50)--星期
declare @wtype nvarchar(50)--日類別
declare @holiday bit--國定假日
declare @workday bit--補假日
declare @clockindate nvarchar(50)
declare @clockin nvarchar(50)
declare @clockoutdate nvarchar(50)
declare @clockout nvarchar(50)
declare @btime nvarchar(50)
declare @etime nvarchar(50)
declare @bresttime nvarchar(50)
declare @eresttime nvarchar(50)
declare @isshift bit
declare @shifthours float

declare @tmptime nvarchar(50)=''
declare @tmpmin float=0

declare cursor_table cursor for
select sssno,noa,noq,weeks,wtype,holiday,workday,clockindate,clockin,clockoutdate,clockout,btime,etime,bresttime,eresttime,isshift,shifthours from #tmpa
open cursor_table
fetch next from cursor_table
into @sssno,@noa,@noq,@weeks,@wtype,@holiday,@workday,@clockindate,@clockin,@clockoutdate,@clockout,@btime,@etime,@bresttime,@eresttime,@isshift,@shifthours
while(@@FETCH_STATUS <> -1)
begin

	--更新請假時數
	--更新請假類別(特休,抵工時不扣全勤)
	if(@btime<='05:59')--若上班日時間若為凌晨--請假要撈隔天
	begin
		update #tmpa
		set dvacahours=case when isnull(hr_used,0)>8 then 8 else isnull(hr_used,0) end
		,vacaspecial=case when isnull(hr_used,0)>0 and isnull(nospecialcount,0)=0 and ISNULL(specialcount,0)>0 then case when ISNULL(specialcount,0)>8 then 8 else ISNULL(specialcount,0)end else 0 end
		,vacasick=case when isnull(hr_used,0)>0 and isnull(sickcount,0)>0 then case when  isnull(sickcount,0)>8 then 8 else  isnull(sickcount,0) end else 0 end
		,vacaperson=case when isnull(hr_used,0)>0 and isnull(personcount,0)>0 then case when isnull(personcount,0)>8 then 8 else isnull(personcount,0) end else 0 end
		from #tmpa a
		outer apply (select SUM(hr_used)hr_used 
		,sum(case when hname like '%特休%' or hname like '%抵工時%' then hr_used else 0 end)specialcount
		,sum(case when hname like '%事假%' then hr_used else 0 end)personcount
		,sum(case when hname like '%病假%' then hr_used else 0 end)sickcount
		,sum(case when hname not like '%特休%' and hname not like '%抵工時%' then hr_used else 0 end)nospecialcount
		from salvacause where dbo.q_cdn(@noa,1) between bdate and edate and sssno=@sssno)b
		where a.noa=@noa and a.noq=@noq and a.sssno=@sssno
	end
	else
	begin
		update #tmpa
		set dvacahours=case when isnull(hr_used,0)>8 then 8 else isnull(hr_used,0) end
		,vacaspecial=case when isnull(hr_used,0)>0 and isnull(nospecialcount,0)=0 and ISNULL(specialcount,0)>0 then case when ISNULL(specialcount,0)>8 then 8 else ISNULL(specialcount,0)end else 0 end
		,vacasick=case when isnull(hr_used,0)>0 and isnull(sickcount,0)>0 then case when  isnull(sickcount,0)>8 then 8 else  isnull(sickcount,0) end else 0 end
		,vacaperson=case when isnull(hr_used,0)>0 and isnull(personcount,0)>0 then case when isnull(personcount,0)>8 then 8 else isnull(personcount,0) end else 0 end
		from #tmpa a
		outer apply (select SUM(hr_used)hr_used 
		,sum(case when hname like '%特休%' or hname like '%抵工時%' then hr_used else 0 end)specialcount
		,sum(case when hname like '%事假%' then hr_used else 0 end)personcount
		,sum(case when hname like '%病假%' then hr_used else 0 end)sickcount
		,sum(case when hname not like '%特休%' and hname not like '%抵工時%' then hr_used else 0 end)nospecialcount
		from salvacause where @noa between bdate and edate and sssno=@sssno)b
		where a.noa=@noa and a.noq=@noq and a.sssno=@sssno
	end
	
	if(@isshift=0)--輪休暫不處理，由自己登打
	begin
		--上班日
		if(@workday=1 or (@holiday=0 and @wtype='w'))--@weeks between '1' and '5'
		begin
			--假日加班日不處理遲到早退
			if((@clockin!='' and @btime!='') or (@clockout!='' and @etime!=''))
			begin
				--遲到
				set @tmptime=@btime
				--請假處理
				if(@btime<='05:59')--若上班日時間若為凌晨--請假要撈隔天
				begin
					if((select count(*) from salvacause where dbo.q_cdn(@noa,1) between bdate and edate and btime=@btime and sssno=@sssno)>0)
					begin
						set @tmptime=isnull((select top 1 etime from salvacause where dbo.q_cdn(@noa,1) between bdate and edate and btime=@btime and sssno=@sssno),@btime)
						--請假後過且過午休時間
						if(@tmptime=@bresttime)
						begin
							set @tmptime=@eresttime
						end
					end
				end
				else
				begin
					if((select count(*) from salvacause where @noa between bdate and edate and btime=@btime and sssno=@sssno)>0)
					begin
						set @tmptime=isnull((select top 1 etime from salvacause where @noa between bdate and edate and btime=@btime and sssno=@sssno),@btime)
						--請假後過且過午休時間
						if(@tmptime=@bresttime)
						begin
							set @tmptime=@eresttime
						end
					end
				end
				
				--外勤處理 由於目前沒人使用暫不判斷
			
				set @tmpmin=0
				if(@tmptime!=@btime)--有請假處理
				begin
					if(@tmptime<='05:59')--若上班日時間若為凌晨
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@tmptime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@tmptime,@clockindate+' '+@clockin) 
						end
					end
					else
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@tmptime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,@noa+' '+@tmptime,@clockindate+' '+@clockin) 
						end
					end
				end
				else
				begin
					if(@btime<='05:59')--若上班日時間若為凌晨
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@btime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@btime,@clockindate+' '+@clockin) 
						end
					end
					else
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@btime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,@noa+' '+@btime,@clockindate+' '+@clockin) 
						end
					end
				end
				
				if(@tmpmin>0)
					update #tmpa set dlatemin=@tmpmin where noa=@noa and noq=@noq and sssno=@sssno
				
				--早退
				set @tmptime=@etime
				--請假處理
				if(@btime<='05:59' and @tmptime<='12:00')--若上班日時間若為凌晨--請假要撈隔天
				begin
					if((select count(*) from salvacause where dbo.q_cdn(@noa,1) between bdate and edate and etime=@etime and sssno=@sssno)>0)
					begin
						set @tmptime=isnull((select top 1 btime from salvacause where @noa between bdate and edate and etime=@etime and sssno=@sssno),@etime)
						--請假後過且過午休時間
						if(@tmptime=@eresttime)
						begin
							set @tmptime=@bresttime
						end
					end
				end
				else
				begin
					if((select count(*) from salvacause where @noa between bdate and edate and etime=@etime and sssno=@sssno)>0)
					begin
						set @tmptime=isnull((select top 1 btime from salvacause where @noa between bdate and edate and etime=@etime and sssno=@sssno),@etime)
						--請假後過且過午休時間
						if(@tmptime=@eresttime)
						begin
							set @tmptime=@bresttime
						end
					end
				end
				
				--出勤處理 由於目前沒人使用暫不判斷
				
				set @tmpmin=0
				if(@tmptime!=@etime)--有請假處理
				begin
					if(@btime<='05:59' and @tmptime<='12:00')--若上班日時間若為凌晨
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@tmptime)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@tmptime) 
						end
					end
					else
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@tmptime)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,@noa+' '+@tmptime) 
						end
					end
				end
				else
				begin
					if(@btime<='05:59' and @etime<='12:00')--若上班日時間若為凌晨
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@etime)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@etime) 
						end
					end
					else
					begin
						if(@r_len='3')
						begin
							set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@etime)
						end
						else
						begin
							set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,@noa+' '+@etime) 
						end
					end
				end
				
				if(@tmpmin>0)
					update #tmpa set dearlymin=@tmpmin where noa=@noa and noq=@noq and sssno=@sssno
			end
			
			--忘刷
			if((@clockin='' and @clockout!='') or (@clockin!='' and @clockout=''))
			begin
				update #tmpa set isforget=1 where noa=@noa and noq=@noq and sssno=@sssno
			end
			
			--曠職(沒有時間也沒有請假)
			if(@btime<='05:59')--若上班日時間若為凌晨--請假要撈隔天
			begin
				if(@clockin='' and @clockout='' and (select count(*) from salvacause where sssno=@sssno and dbo.q_cdn(@noa,1) between bdate and edate and btime=@btime and etime=@etime)=0)
				begin
					update #tmpa set hr_leave=8 where noa=@noa and noq=@noq and sssno=@sssno
				end
			end
			else
			begin
				if(@clockin='' and @clockout='' and (select count(*) from salvacause where sssno=@sssno and @noa between bdate and edate and btime=@btime and etime=@etime)=0)
				begin
					update #tmpa set hr_leave=8 where noa=@noa and noq=@noq and sssno=@sssno
				end
			end
		end	
	end
	else
	begin
		--輪班人員
		--不區分假日
		if((@clockin!='' and @btime!='') or (@clockout!='' and @etime!=''))
		begin
			--遲到
			set @tmptime=@btime
			--請假處理
			if(@btime<='05:59')--若上班日時間若為凌晨--請假要撈隔天
			begin
				if((select count(*) from salvacause where dbo.q_cdn(@noa,1) between bdate and edate and btime=@btime and sssno=@sssno)>0)
				begin
					set @tmptime=isnull((select top 1 etime from salvacause where dbo.q_cdn(@noa,1) between bdate and edate and btime=@btime and sssno=@sssno),@btime)
					--請假後過且過午休時間
					if(@tmptime=@bresttime)
					begin
						set @tmptime=@eresttime
					end
				end
			end
			else
			begin
				if((select count(*) from salvacause where @noa between bdate and edate and btime=@btime and sssno=@sssno)>0)
				begin
					set @tmptime=isnull((select top 1 etime from salvacause where @noa between bdate and edate and btime=@btime and sssno=@sssno),@btime)
					--請假後過且過午休時間
					if(@tmptime=@bresttime)
					begin
						set @tmptime=@eresttime
					end
				end
			end
			--出勤處理 由於目前沒人使用暫不判斷
		
			set @tmpmin=0
			if(@tmptime!=@btime)--有請假處理
			begin
				if(@tmptime<='05:59')--若上班日時間若為凌晨
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@tmptime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@tmptime,@clockindate+' '+@clockin) 
					end
				end
				else
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@tmptime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,@noa+' '+@tmptime,@clockindate+' '+@clockin) 
					end
				end
			end
			else
			begin
				if(@btime<='05:59')--若上班日時間若為凌晨
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@btime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@btime,@clockindate+' '+@clockin) 
					end
				end
				else
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@btime,cast(dbo.ChineseEraName2AD(@clockindate) as nvarchar(10))+' '+@clockin)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,@noa+' '+@btime,@clockindate+' '+@clockin) 
					end
				end
			end
			
			if(@tmpmin>0)
				update #tmpa set dlatemin=@tmpmin where noa=@noa and noq=@noq and sssno=@sssno
			
			--早退
			set @tmptime=@etime
			--請假處理
			if(@btime<='05:59' and @tmptime<='12:00')--若上班日時間若為凌晨--請假要撈隔天
			begin
				if((select count(*) from salvacause where dbo.q_cdn(@noa,1) between bdate and edate and etime=@etime and sssno=@sssno)>0)
				begin
					set @tmptime=isnull((select top 1 btime from salvacause where @noa between bdate and edate and etime=@etime and sssno=@sssno),@etime)
					--請假後過且過午休時間
					if(@tmptime=@eresttime)
					begin
						set @tmptime=@bresttime
					end
				end
			end
			else
			begin
				if((select count(*) from salvacause where @noa between bdate and edate and etime=@etime and sssno=@sssno)>0)
				begin
					set @tmptime=isnull((select top 1 btime from salvacause where @noa between bdate and edate and etime=@etime and sssno=@sssno),@etime)
					--請假後過且過午休時間
					if(@tmptime=@eresttime)
					begin
						set @tmptime=@bresttime
					end
				end
			end
			
			--出勤處理 由於目前沒人使用暫不判斷
			
			set @tmpmin=0
			if(@tmptime!=@etime)--有請假處理
			begin
				if(@btime<='05:59' and @tmptime<='12:00')--若上班日時間若為凌晨
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@tmptime)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@tmptime) 
					end
				end
				else
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@tmptime)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,@noa+' '+@tmptime) 
					end
				end
			end
			else
			begin
				if(@btime<='05:59' and @etime<='12:00')--若上班日時間若為凌晨
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,dbo.ChineseEraName2AD(@noa)),20)+' '+@etime)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,Convert(NVARCHAR(10),DateAdd(Day,1,@noa),20)+' '+@etime) 
					end
				end
				else
				begin
					if(@r_len='3')
					begin
						set @tmpmin=Datediff(Minute,cast(dbo.ChineseEraName2AD(@clockoutdate) as nvarchar(10))+' '+@clockout,cast(dbo.ChineseEraName2AD(@noa) as nvarchar(10))+' '+@etime)
					end
					else
					begin
						set @tmpmin=Datediff(Minute,@clockoutdate+' '+@clockout,@noa+' '+@etime) 
					end
				end
			end
			
			if(@tmpmin>0)
				update #tmpa set dearlymin=@tmpmin where noa=@noa and noq=@noq and sssno=@sssno
		end
		
		--忘刷
		if((@clockin='' and @clockout!='') or (@clockin!='' and @clockout=''))
		begin
			update #tmpa set isforget=1 where noa=@noa and noq=@noq and sssno=@sssno
		end
		
		--表示由系統自動產生內容可以刪除 且沒有任何資料更新
		delete #tmpa
		where noq='' and isshift=1
		and clockin='' and clockout='' 
		and w133=0 and w166=0 and w100=0 and w200=0 and w266=0 
		and workhours=0 and addhours=0 and dlatemin=0 and dearlymin=0 and dvacahours=0
			
	end
			
	fetch next from cursor_table
	into @sssno,@noa,@noq,@weeks,@wtype,@holiday,@workday,@clockindate,@clockin,@clockoutdate,@clockout,@btime,@etime,@bresttime,@eresttime,@isshift,@shifthours
end
close cursor_table
deallocate cursor_table

--更新伙食費
--伙食1
update #tmpa
set mealsnum=case when (clockin<=mbtime1 or (left(mbtime1,2)='00' and clockin between '20:00:00' and '23:59:59'))
and (right(Convert(NVARCHAR(16),DateAdd(hour,mhours1,Convert(NVARCHAR(10),getdate(),20)+' '+mbtime1),20),5)<=clockout
or(left(right(Convert(NVARCHAR(16),DateAdd(hour,mhours1,Convert(NVARCHAR(10),getdate(),20)+' '+mbtime1),20),5),2)>='20' and clockout between '00:00:00' and '12:00:00'))
then 1 else 0 end
where ISNULL(mbtime1,'')!='' and isnull(mhours1,0)>0 and ISNULL(clockin,'')!='' and ISNULL(clockout,'')!=''

--伙食2
update #tmpa
set mealsnum=isnull(mealsnum,0)+
case when (clockin<=mbtime2 or (left(mbtime2,2)='00' and clockin between '20:00:00' and '23:59:59'))
and (right(Convert(NVARCHAR(16),DateAdd(hour,mhours2,Convert(NVARCHAR(10),getdate(),20)+' '+mbtime2),20),5)<=clockout
or(left(right(Convert(NVARCHAR(16),DateAdd(hour,mhours2,Convert(NVARCHAR(10),getdate(),20)+' '+mbtime2),20),5),2)>='20' and clockout between '00:00:00' and '12:00:00'))
then 1 else 0 end
where ISNULL(mbtime2,'')!='' and isnull(mhours2,0)>0 and ISNULL(clockin,'')!='' and ISNULL(clockout,'')!=''

--更新工作時數
update #tmpa
set workhours=round(
--正常工作時數
(case when btime<etime then --非跨日
	Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+btime,Convert(NVARCHAR(10),getdate(),20)+' '+etime)
else --跨日
	Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+btime,Convert(NVARCHAR(10),DateAdd(Day,1,getdate()),20)+' '+etime)
end
--判斷休息時間是否再正常上班時間,避開加班時間中的休息時間
-case when etime>bresttime or (left(etime,1)='0' and bresttime between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+bresttime,Convert(NVARCHAR(10),getdate(),20)+' '+eresttime)else 0 end
-case when etime>bresttime2 or (left(etime,1)='0' and bresttime2 between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+bresttime2,Convert(NVARCHAR(10),getdate(),20)+' '+eresttime2)else 0 end
-case when etime>bresttime3 or (left(etime,1)='0' and bresttime3 between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+bresttime3,Convert(NVARCHAR(10),getdate(),20)+' '+eresttime3)else 0 end

--扣除遲到,早退
-isnull(dlatemin,0)-isnull(dearlymin,0)
--扣除請假
-ISNULL(dvacahours,0)
)/60.0,1)
where isnull(clockin,'')!='' and isnull(clockout,'')!=''

declare @addhours float--加班時數
declare @doverhours float --一到五
declare @overhours float
declare @dhoverhours float --六日國訂
declare @hoverhours float

declare @x_sssno nvarchar(50)=char(255)
declare @x_overhours float
declare @x_hoverhours float

--控制加班的時數
if(@addlimit='1' and @addselect!='0') --@addselect='0' 沒有加班時數
begin
	declare cursor_table cursor for
	select sssno,noa,weeks,wtype,holiday,workday,addhours
	,doverhours,overhours,dhoverhours,hoverhours
	from #tmpa where addhours>0 order by sssno,noa
	open cursor_table
	fetch next from cursor_table
	into @sssno,@datea,@weeks,@wtype,@holiday,@workday,@addhours,@doverhours,@overhours,@dhoverhours,@hoverhours
	while(@@FETCH_STATUS <> -1)
	begin
		if(@x_sssno!=@sssno)
		begin
			set @x_overhours=isnull(@overhours,0)
			set @x_hoverhours=isnull(@hoverhours,0)
		end
		if(@workday=1 or (@holiday=0 and @wtype='w')) --平日--@weeks between '1' and '5')
		begin
			if(@x_overhours>0)--當月平日是否有加班時數
			begin
				if(isnull(@addhours,0)>isnull(@doverhours,0)) --當天是否超過限定時數
				begin
					if(isnull(@doverhours,0)=0) --沒有加班時數
					begin
						update #tmpa set addhours=0,w100=0,w133=0,w166=0,w200=0,w266=0 where noa=@datea and sssno=@sssno
					end
					else
					begin
						update #tmpa set addhours=@doverhours,w100=0,w200=0,w266=0
						,w133=case when @doverhours>2 then 2 else @doverhours end
						,w166=case when @doverhours>2 then @doverhours-2 else 0 end 
						where noa=@datea and sssno=@sssno
					
						set @x_overhours=@x_overhours-isnull(@doverhours,0)
					end
				end
				else
				begin
					set @x_overhours=@x_overhours-isnull(@addhours,0)
				end
			end
			else
			begin
				update #tmpa set addhours=0,w100=0,w133=0,w166=0,w200=0,w266=0 where noa=@datea and sssno=@sssno
			end
		end
		else--假日
		begin
			if(@x_hoverhours>0)--當月假日是否有加班時數
			begin
				if(isnull(@addhours,0)>isnull(@dhoverhours,0)) --當天是否超過限定時數
				begin
					if(isnull(@dhoverhours,0)=0) --沒有加班時數
					begin
						update #tmpa set addhours=0,w100=0,w133=0,w166=0,w200=0,w266=0 where noa=@datea and sssno=@sssno
					end
					else
					begin
						update #tmpa 
						set addhours=@dhoverhours
						,w100=case when @holiday=1 or (@wtype='h' and @workday!=1) then 8 else 0 end --例假 國訂
						,w133=case 
							when @wtype='r' then 2 --休息
							when @holiday=1 and @dhoverhours>8 then (case when @dhoverhours-8>2 then 2 else @dhoverhours-8 end)--國訂
							when @wtype='h' then 0 --例假
							else 0 end --平常日
						,w166=case 
							when @wtype='r' and @dhoverhours<=4 then 2 when weeks=6 and @dhoverhours<=8 then 6 --休息
							when @holiday=1 and @dhoverhours>10 then @dhoverhours-10 --國訂
							when @wtype='h' then 0 --例假
							else 0 end --平常日
						,w200=case when @wtype='h' and @dhoverhours>8 then @dhoverhours-8 else 0 end --例假
						,w266=case when @wtype='r' and @dhoverhours>8 then 4 else 0 end --休息
						where noa=@datea and sssno=@sssno
						
						set @x_hoverhours=@x_hoverhours-isnull(@dhoverhours,0)
					end
				end
				else
				begin
					set @x_hoverhours=@x_hoverhours-isnull(@addhours,0)
				end
			end
			else
			begin
				update #tmpa set addhours=0,w100=0,w133=0,w166=0,w200=0,w266=0 where noa=@datea and sssno=@sssno
			end
		end
		
		set @x_sssno=@sssno
	
		fetch next from cursor_table
		into @sssno,@datea,@weeks,@wtype,@holiday,@workday,@addhours,@doverhours,@overhours,@dhoverhours,@hoverhours
	end
	close cursor_table
	deallocate cursor_table
	
end

--select * from #tmpa order by sssno,noa

create table #tmp(
	sssno nvarchar(max),
	namea nvarchar(max),
	partno nvarchar(max),
	part nvarchar(max),
	jobno nvarchar(max),
	job nvarchar(max),
	person nvarchar(max),
	indate nvarchar(max),
	outdate nvarchar(max),
	iswelfare bit,
	typea nvarchar(max),
	
	salary float,
	bo_admin float,
	bo_traffic float,
	bo_special float,
	bo_oth float,
	bo_full float,
	meals float,
	
	bo_money1 float,
	bo_money2 float,
	bo_money3 float,
	bo_money4 float,
	bo_money5 float,
	
	ch_labor1 float, --勞保投保薪資
	ch_labor2 float, --勞退投保薪資
	ch_health_insure float, --健保投保薪資
	raise_num float, --扶養人數
	
	ch_health float, --健保自付額
	as_health float, --健保輔助額
	he_comp float, --健保公司負擔
	hplus2 float, --二代健保補價
	
	ch_labor float,--勞保自付額
	as_labor float,--勞保輔助
	la_comp float, --勞保公司負擔
	
	ch_labor_comp float,--勞退公司提繳
	ch_labor_self float,--勞退個人提繳
	
	tax float, --所得稅
	
	borrow float, --借支
	plus float, --其他加項
	minus float,--其他扣款
	
	ismanua bit,--調整
	ostand float,--加班費基數
	addh1 float,
	addh2 float,
	addh3 float,
	addh4 float,
	addh100 float,
	addh200 float,
	addh266 float,
	
	newday float, --新進員工作日數
	inday float, --上班天數(日薪)
	hrs float, --時數(時薪)
	
	late float,--遲到/早退
	hr_sick float,
	mi_sick float,
	hr_person float,
	mi_person float,
	hr_nosalary float,
	mi_nosalary float,
	hr_leave float,
	mi_leave float,
	hr_late float,--遲到扣薪 106/05/19增加
	mi_late float,
	memo nvarchar(MAX)
)

insert #tmp(sssno,namea,partno,part,jobno,job,person,indate,outdate,iswelfare,typea
,salary,bo_admin,bo_traffic,bo_special,bo_oth,bo_full,meals
,bo_money1,bo_money2,bo_money3,bo_money4,bo_money5
,ch_labor1,ch_labor2,ch_health_insure,raise_num
,ch_health,as_health,he_comp,hplus2
,ch_labor,as_labor,la_comp
,ch_labor_comp,ch_labor_self,tax
,borrow,plus,minus
,ismanua,ostand
,addh1,addh2,addh3,addh4,addh100,addh200,addh266
,newday,inday,hrs,late
,hr_sick,hr_person,hr_nosalary,hr_leave,hr_late,memo
)
select a.noa sssno,a.namea,a.partno,a.part,a.jobno,a.job,a.person,a.indate,a.outdate,a.iswelfare,a.typea
,isnull(b.money,0) salary,isnull(b.bo_admin,0)bo_admin,isnull(b.bo_traffic,0)bo_traffic
,isnull(b.bo_special,0)bo_special,isnull(b.bo_oth,0)bo_oth,isnull(b.bo_full,0) bo_full
,ISNULL(c.mealsmoney,0)
,isnull(b.bo_money1,0)bo_money1,isnull(b.bo_money2,0)bo_money2
,isnull(b.bo_money3,0)bo_money3,isnull(b.bo_money4,0)bo_money4,isnull(b.bo_money5,0)bo_money5
,case when lab.noa is not null then isnull(b2.sa_labor,0) else isnull(b.sa_labor,0)end ch_labor1
,case when lab.noa is not null then isnull(b2.sa_retire,0) else isnull(b.sa_retire,0)end ch_labor2
,case when lab.noa is not null then isnull(b2.sa_health,0) else isnull(b.sa_health,0)end ch_health_insure
,case when lab.noa is not null then isnull(b2.mount,0) else isnull(b.mount,0)end raise_num
,case when lab.noa is not null then isnull(b2.he_person,0) else isnull(b.he_person,0)end ch_health
,case when lab.noa is not null then isnull(lab.as_health,0) else isnull(b.as_health,0) end as_health
,case when lab.noa is not null then isnull(b2.he_comp,0) else isnull(b.he_comp,0)end he_comp
,case when lab.noa is not null then isnull(b2.hplus2,0) else isnull(b.hplus2,0)end hplus2
,case when lab.noa is not null then isnull(b2.la_person,0) else isnull(b.la_person,0)end ch_labor
,case when lab.noa is not null then isnull(lab.as_labor,0) else isnull(b.as_labor,0)end as_labor
,case when lab.noa is not null then isnull(b2.la_comp,0) else isnull(b.la_comp,0)end la_comp
,case when lab.noa is not null then isnull(b2.re_comp,0) else isnull(b.re_comp,0) end ch_labor_comp
,case when lab.noa is not null then isnull(b2.re_person,0) else isnull(b.re_person,0)end ch_labor_self
,isnull(b.tax,0)tax
,isnull(d.borrow,0) borrow,isnull(d.plus,0) plus,isnull(d.minus,0)minus
,case when g.inday=0 then case when isnull(c1.ostand,0)>0 then 1 else 0 end else case when isnull(e.ostand,0)>0 then 1 else 0 end end --若class5有指定加班費 則加班費需程式要先計算出來
,case when g.inday=0 then case when isnull(c1.ostand,0)>0 then c1.ostand else 0 end else case when isnull(e.ostand,0)>0 then e.ostand else 0 end end
,isnull(c.w133,0),isnull(c.w166,0),case when @monkind='下期' then isnull(f.w133,0) else 0 end,case when @monkind='下期' then isnull(f.w166,0) else 0 end
,isnull(c.w100,0),isnull(c.w200,0),isnull(c.w266,0)
,case when (left(a.indate,len(@mon))=@mon and isnull(a.indate,'')!='') or (left(a.outdate,len(@mon))=@mon and isnull(a.outdate,'')!='') then 
	case when (left(a.indate,len(@mon))=left(a.outdate,len(@mon))) --當月進當月離
	then dbo.q_cdd(a.outdate,a.indate)+1
	when left(a.outdate,len(@mon))=@mon --當月離職
	then dbo.q_cdd(a.outdate,@mon+'/01')+1
	else dbo.q_cdd(@mon+'/'+dbo.q_lastday(@mon),a.indate) end --當月入職
else 0 end
,isnull(g.inday,0),isnull(g.workhours,0)
,isnull(c.latenum,0)+isnull(c.earlynum,0)+isnull(c.forgetnum,0)
,ISNULL(h.hr_sick,0),ISNULL(h.hr_person,0),ISNULL(h.hr_nosalary,0),ISNULL(h.hr_leave,0),round(ISNULL(c.dlemin,0)/60,1)
,case when (left(a.indate,len(@mon))=@mon and isnull(a.indate,'')!='') or (left(a.outdate,len(@mon))=@mon and isnull(a.outdate,'')!='') then 
	case when (left(a.indate,len(@mon))=left(a.outdate,len(@mon))) --當月進當月離
	then "新進員工(工作日:"+cast(dbo.q_cdd(a.outdate,a.indate)+1 as nvarchar(10))+")"
	when left(a.outdate,len(@mon))=@mon --當月離職
	then "離職員工(工作日:"+CAST(dbo.q_cdd(a.outdate,@mon+'/01')+1 as nvarchar(10))+")"
	else "新進員工(工作日:"+cast(dbo.q_cdd(@mon+'/'+dbo.q_lastday(@mon),a.indate) as nvarchar(10))+")" end --當月入職
else '' end
from sss a 
outer apply (select top 1 * from saladjust where noa=a.noa and datea<=@date2 order by datea desc)b
outer apply (select top 1 noa,as_health,as_labor from labase where noa=a.noa)lab
outer apply (select SUM(he_person)he_person,SUM(he_comp)he_comp
,SUM(la_person)la_person,SUM(la_comp)la_comp,SUM(re_person)re_person,SUM(re_comp)re_comp,SUM(disaster)disaster,SUM(salary)salary
,SUM(sa_health)sa_health,SUM(sa_labor)sa_labor,SUM(sa_retire)sa_retire,SUM(hplus2)hplus2,MAX(mount)mount
from salinsures where noa=a.noa and mon=@mon)b2
outer apply (select SUM(meals*mealsnum)mealsmoney,SUM(w133)w133,SUM(w166)w166,SUM(w100)w100,SUM(w200)w200,SUM(w266)w266
,sum(case when dlatemin>0 then 1 else 0 end)latenum,sum(case when dearlymin>0 then 1 else 0 end)earlynum,sum(case when isforget=1 then 1 else 0 end)forgetnum
,SUM(dlatemin+dearlymin)dlemin
from #tmpa where sssno=a.noa and noa between @date1 and @date2)c
left join (select sssno,SUM(plus) plus,SUM(minus) minus,SUM(borrow) borrow from salchg where mon=@mon group by sssno) d on a.noa=d.sssno
outer apply (select top 1 ostand from #tmpa where sssno=a.noa and noa between @date1 and @date2 order by ostand desc)e
outer apply (select SUM(w133)w133,SUM(w166)w166 from #tmpa where sssno=a.noa and noa between @date3 and @date4)f
outer apply (select count(*) inday,SUM(workhours)workhours from #tmpa where sssno=a.noa and noa between @date1 and @date2 and clockin!='' and clockout!='')g
outer apply (select SUM(case when hname like'%病假%' then hr_used else 0 end) hr_sick,
SUM(case when hname like'%事假%' then hr_used else 0 end) hr_person,
SUM(case when hname like'%無薪%' then hr_used else 0 end) hr_nosalary
,SUM(case when hname like'%曠工%' then hr_used else 0 end) hr_leave
from salvacause where bdate between @date1 and @date2 and sssno=a.noa)h
--(因沒有時間所以不處理是否輪班,只接取早班)
outer apply(
	select top 1 * from class5s where noa=case when isnull(b.class5,'')!='' then b.class5 else a.class5 end
	and bdate<@date2 order by bdate,btime desc --有效日
)c1 where a.person=@person and a.noa!='Z001' 
and (ISNULL(a.outdate,'')='' or @date1<ISNULL(a.outdate,''))
and (ISNULL(a.indate,'')!='' and ISNULL(a.indate,'')<=@date2 )

------------------------------------
--調整加班46小時
declare @addh1 float--加班時數
declare @addh2 float--加班時數
declare @addh3 float--加班時數
declare @addh4 float--加班時數
declare @t_fir float=46
declare @bef_fir01 float=0
declare @bef_fir02 float=0

declare cursor_table cursor for
select sssno,addh1,addh2,addh3,addh4 from #tmp order by sssno
open cursor_table
fetch next from cursor_table
into @sssno,@addh1,@addh2,@addh3,@addh4
while(@@FETCH_STATUS <> -1)
begin
	set @t_fir=46
	set @bef_fir01=0
	set @bef_fir02=0
	if(@monkind='本月' or @monkind='上期')
	begin
		if(@addh1+@addh2>46)
		begin
			set @bef_fir01=case when @addh1>@t_fir then @t_fir else @addh1 end
			set @bef_fir02=@t_fir-@bef_fir01
			
			update #tmp 
			set addh1=@bef_fir01,addh3=@addh1-@bef_fir01
			,addh2=@bef_fir02,addh4=@addh2-@bef_fir02
			where sssno=@sssno
		end
	end
	if(@monkind='下期')
	begin
		if(@addh1+@addh2+@addh3+@addh4>46)
		begin
			if(@addh3+@addh4>46)--上期已超過46小時
			begin
				update #tmp 
				set addh1=0,addh3=@addh1
				,addh2=0,addh4=@addh2
				where sssno=@sssno
			end
			else
			begin
				set @t_fir=@t_fir-(@addh3+@addh4)
				set @bef_fir01=case when @addh1>@t_fir then @t_fir else @addh1 end
				set @bef_fir02=@t_fir-@bef_fir01
				
				update #tmp 
				set addh1=@bef_fir01,addh3=@addh1-@bef_fir01
				,addh2=@bef_fir02,addh4=@addh2-@bef_fir02
				where sssno=@sssno
			end
		end
	end
	fetch next from cursor_table
	into @sssno,@addh1,@addh2,@addh3,@addh4
end
close cursor_table
deallocate cursor_table
------------------------------------
--勞建保 下期扣款
if(@monkind='上期')
begin
	update #tmp
	set ch_health=0,as_health=0,he_comp=0,hplus2=0
	,ch_labor=0,as_labor=0,la_comp=0
	,ch_labor_comp=0,ch_labor_self=0
end
-------------------------------------------------------------------------------------
--停職扣薪(扣在無薪)扣全勤打再請假單 不扣全勤打在停復職
update a
set hr_nosalary=isnull(hr_nosalary,0)+isnull(nodays+1,0)
from #tmp a outer apply (
	select SUM(cast(dbo.q_cdd(case when isnull(reindate,'')='' or isnull(reindate,'')>@date2 then @date2 else reindate end,case when @date1>stopdate then @date1 else stopdate end ) as int)) nodays
	from sssr where noa=a.sssno 
	and (@date1<case when isnull(reindate,'')='' then @date2 else reindate end or ISNULL(stopdate,'') between @date1 and @date2)
)b
------------------------------------
--處理全勤
--新進和離職員工(不滿30天)
update #tmp
set bo_full=case when newday>=30 or (indate=@mon+'/01' and left(indate,len(@mon))!=left(outdate,len(@mon)))
or (outdate=@mon+'/'+dbo.q_lastday(@mon) and left(indate,len(@mon))!=left(outdate,len(@mon)))
then bo_full else 0 end
where newday>0

if(@monkind='上期' or @monkind='下期')
begin
	update #tmp
	set bo_full=bo_full/2
end
------------------------------------

--處理全勤與扣薪 因考慮到扣固定金額與%數 所以不會根據時數計算扣薪金額
declare @bo_full float
declare @tbo_full float
declare @meals float
declare @salary float,@bo_admin float,@bo_traffic float,@bo_special float,@bo_oth float
declare @hmoney float--時薪
declare @mi_money float=0 --扣薪金額
declare @kind nvarchar(50)
declare @late float,@latenoallmin float,@latenoallnum float,@late2 float,@late2dsmoney float,@late2dshour float,@late2dnmoney float
,@late2dnhour float,@latemin float,@latenum float,@latedmoney float,@latedfull float,@late2min float,@late2num float,@late2dmoney float
,@late2dfull float,@lateallmin float,@latemalldmoney float,@latemalldfull float,@lateallnum float,@latenalldmoney float,@latenalldfull float
-----------------------
,@early float,@earlynoallmin float,@earlynoallnum float,@early2 float,@early2dsmoney float,@early2dshour float,@early2dnmoney float,@early2dnhour float
,@earlynum float,@earlyndmoney float,@earlyndfull float
-----------------------
,@vacanodhours float,@vacadsmoney float,@vacadshour float,@vacanum float,@vacandmoney float,@vacandfull float,@vacahours float
,@vacahdmoney float,@vacahdfull float,@vacadays float,@vacaddmoney float,@vacaddfull float
------------------------
,@isvstotal bit
------------------------
,@sicknodhours float,@sickdsmoney float,@sickdshour float,@sicknum float,@sickndmoney float,@sickndfull float
,@sickhours float,@sickhdmoney float,@sickhdfull float,@sickdays float,@sickddmoney float,@sickddfull float
------------------------
,@leavedsmoney float,@leavedshour float,@leavendmoney float,@leavendfull float
------------------------
,@fclocknodnum float,@fclockdsmoney float,@fclockdshour float,@fclockdnum float,@fclockndmoney float,@fclockndfull float

declare cursor_table cursor for
select a.sssno,a.salary,a.bo_admin,a.bo_traffic,a.bo_special,a.bo_full,a.bo_oth,a.meals,b.kind
,b.late,b.latenoallmin,b.latenoallnum,b.late2,b.late2dsmoney,b.late2dshour,b.late2dnmoney,b.late2dnhour
,b.latemin,b.latenum,b.latedmoney,b.latedfull,b.late2min,b.late2num,b.late2dmoney,b.late2dfull
,b.lateallmin,b.latemalldmoney,b.latemalldfull,b.lateallnum,b.latenalldmoney,b.latenalldfull
-----------------------
,b.early,b.earlynoallmin,b.earlynoallnum,b.early2,b.early2dsmoney,b.early2dshour,b.early2dnmoney,b.early2dnhour
,b.earlynum,b.earlyndmoney,b.earlyndfull
-----------------------
,b.vacanodhours,b.vacadsmoney,b.vacadshour,b.vacanum,b.vacandmoney,b.vacandfull,b.vacahours
,b.vacahdmoney,b.vacahdfull,b.vacadays,b.vacaddmoney,b.vacaddfull
------------------------
,b.isvstotal
------------------------
,b.sicknodhours,b.sickdsmoney,b.sickdshour,b.sicknum,b.sickndmoney,b.sickndfull
,b.sickhours,b.sickhdmoney,b.sickhdfull,b.sickdays,b.sickddmoney,b.sickddfull
------------------------
,b.leavedsmoney,b.leavedshour,b.leavendmoney,b.leavendfull
------------------------
,b.fclocknodnum,b.fclockdsmoney,b.fclockdshour,b.fclockdnum,b.fclockndmoney,b.fclockndfull
from #tmp a
outer apply (select top 1 * from #tmpa where sssno=a.sssno order by noa)b
open cursor_table
fetch next from cursor_table
into @sssno,@salary,@bo_admin,@bo_traffic,@bo_special,@bo_full,@bo_oth,@meals,@kind
,@late,@latenoallmin,@latenoallnum,@late2,@late2dsmoney,@late2dshour,@late2dnmoney
,@late2dnhour,@latemin,@latenum,@latedmoney,@latedfull,@late2min,@late2num,@late2dmoney
,@late2dfull,@lateallmin,@latemalldmoney,@latemalldfull,@lateallnum,@latenalldmoney,@latenalldfull
,@early,@earlynoallmin,@earlynoallnum,@early2,@early2dsmoney,@early2dshour,@early2dnmoney,@early2dnhour
,@earlynum,@earlyndmoney,@earlyndfull
,@vacanodhours,@vacadsmoney,@vacadshour,@vacanum,@vacandmoney,@vacandfull,@vacahours
,@vacahdmoney,@vacahdfull,@vacadays,@vacaddmoney,@vacaddfull,@isvstotal
,@sicknodhours,@sickdsmoney,@sickdshour,@sicknum,@sickndmoney,@sickndfull
,@sickhours,@sickhdmoney,@sickhdfull,@sickdays,@sickddmoney,@sickddfull
,@leavedsmoney,@leavedshour,@leavendmoney,@leavendfull
,@fclocknodnum,@fclockdsmoney,@fclockdshour,@fclockdnum,@fclockndmoney,@fclockndfull
while(@@FETCH_STATUS <> -1)
begin
	--扣薪
	--勞基法規定時薪
	if(@person='日薪') --基本上日薪與時薪都內含伙食費費用故不再額外計算
	begin
		set @hmoney=round((@salary+@bo_admin+@bo_special+@bo_full+@bo_oth)/8,4)
	end
	else if(@person='時薪')
	begin
		set @hmoney=(@salary+@bo_admin+@bo_special+@bo_full+@bo_oth)
	end
	else
	begin
		set @hmoney=round((@salary+@bo_admin+@bo_special+@bo_full+@bo_oth+@meals)/30/8,4)
	end
	
	if(@hmoney>0)
	begin
		--更新無薪金額
		update #tmp set mi_nosalary=hr_nosalary*@hmoney where sssno=@sssno
		
		--遲到扣薪
		set @mi_money=0
		if(@late2dsmoney>0 or @late2dshour>0) --分計扣薪
		begin
			if(@late2=0)
				set @late2=1.0
				
			--判斷以總分還是以日判斷
			if(@latenoallmin>0)--總分
			begin	
				if(@kind='mon' or @kind='')--整月
				begin
					if(@monkind='下期')--下期才扣款否則無法計算
					begin
						--判斷整月是否超過
						if(isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and dlatemin>=1),0)>@latenoallmin)
						begin
							--判斷上期是否超過
							if(isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)>@latenoallmin)
							begin
								--下期全部遲到分鐘數皆扣薪
								if(@late2dsmoney>0)
								begin
									--固定金額*無條件進位((遲到分鐘數)/分計)
									set @mi_money=@mi_money+(@late2dsmoney*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0))/@late2))
								end
								else
								begin
									--時薪*固定時薪%*無條件進位((遲到分鐘數)/分計)
									set @mi_money=@mi_money+((@hmoney*@late2dshour/100)*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0))/@late2))
								end
							end
							else
							begin
								if(@late2dsmoney>0)
								begin
									--固定金額*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
									set @mi_money=@mi_money+(@late2dsmoney*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dlatemin>=1),0)-@latenoallmin)/@late2))
								end
								else
								begin
									--時薪*固定時薪%*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
									set @mi_money=@mi_money+((@hmoney*@late2dshour/100)*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dlatemin>=1),0)-@latenoallmin)/@late2))
								end
							end
						end
					end
					else
					begin
						--超過總分
						if(isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0)>@latenoallmin)
						begin
							if(@late2dsmoney>0)
							begin
								--固定金額*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+(@late2dsmoney*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0)-@latenoallmin)/@late2))
							end
							else
							begin
								--時薪*固定時薪%*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+((@hmoney*@late2dshour/100)*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0)-@latenoallmin)/@late2))
							end
						end
					end
				end
				else --分上下期
				begin
					if(@monkind='上期' or @monkind='本月')
					begin
						--超過總分
						if(isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)>@latenoallmin)
						begin
							if(@late2dsmoney>0)
							begin
								--固定金額*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+(@late2dsmoney*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)-@latenoallmin)/@late2))
							end
							else
							begin
								--時薪*固定時薪%*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+((@hmoney*@late2dshour/100)*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)-@latenoallmin)/@late2))
							end
						end
					end
					if(@monkind='下期' or @monkind='本月')
					begin
						--超過總分
						if(isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin>=1),0)>@latenoallmin)
						begin
							if(@late2dsmoney>0)
							begin
								--固定金額*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+(@late2dsmoney*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin>=1),0)-@latenoallmin)/@late2))
							end
							else
							begin
								--時薪*固定時薪%*無條件進位((遲到分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+((@hmoney*@late2dshour/100)*ceiling((isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin>=1),0)-@latenoallmin)/@late2))
							end
						end
					end
					
				end
			end
			else --日
			begin
				if(@late2dsmoney>0)
				begin
					--固定金額*無條件進位((每日遲到分鐘數-每日不扣薪分鐘數)/分計)
					set @mi_money=@mi_money+(@late2dsmoney*ceiling(isnull((select SUM(dlatemin-@late) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1 and dlatemin>@late),0)/@late2))
				end
				else
				begin
					--時薪*固定時薪%*無條件進位((每日遲到分鐘數-每日不扣薪分鐘數)/分計)
					set @mi_money=@mi_money+((@hmoney*@late2dshour/100)*ceiling(isnull((select SUM(dlatemin-@late) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1 and dlatemin>@late),0)/@late2))
				end
			
			end
		
		end
		if(@late2dnmoney>0 or @late2dnhour>0) --次數扣薪
		begin
			--判斷以總次還是以日判斷
			if(@latenoallnum>0)--總次
			begin	
				if(@kind='mon' or @kind='')--整月
				begin
					if(@monkind='下期')--下期才扣款否則無法計算
					begin
						--判斷整月是否超過
						if(isnull((select count(*) from #tmpa where sssno=@sssno and dlatemin>=1),0)>@latenoallnum)
						begin
							--判斷上期是否超過
							if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)>@latenoallnum)
							begin
								--下期全部遲到次數皆扣薪
								if(@late2dnmoney>0)
								begin
									--固定金額*遲到次數
									set @mi_money=@mi_money+(@late2dnmoney*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0))
								end
								else
								begin
									--時薪*固定時薪%*遲到次數
									set @mi_money=@mi_money+((@hmoney*@late2dnhour/100)*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0))
								end
							end
							else
							begin
								if(@late2dnmoney>0)
								begin
									--固定金額*(遲到次數-不扣薪總次數)
									set @mi_money=@mi_money+(@late2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dlatemin>=1),0)-@latenoallnum))
								end
								else
								begin
									--時薪*固定時薪%*(遲到次數-不扣薪總次數)
									set @mi_money=@mi_money+((@hmoney*@late2dnhour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dlatemin>=1),0)-@latenoallnum))
								end
							end
						end
					end
					else
					begin
						--超過總分
						if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0)>@latenoallnum)
						begin
							if(@late2dnmoney>0)
							begin
								--固定金額*(遲到次數-不扣薪總次數)
								set @mi_money=@mi_money+(@late2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0)-@latenoallnum))
							end
							else
							begin
								--時薪*固定時薪%*(遲到次數-不扣薪總次數)
								set @mi_money=@mi_money+((@hmoney*@late2dnhour/100)*(isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1),0)-@latenoallnum))
							end
						end
					end
				end
				else --分上下期
				begin
					if(@monkind='上期' or @monkind='本月')
					begin
						--超過總次
						if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)>@latenoallnum)
						begin
							if(@late2dnmoney>0)
							begin
								--固定金額*(遲到次數-不扣薪總次數)
								set @mi_money=@mi_money+(@late2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)-@latenoallnum))
							end
							else
							begin
								--時薪*固定時薪%*(遲到次數-不扣薪總次數)
								set @mi_money=@mi_money+((@hmoney*@late2dnhour/100)*(isnull((select SUM(dlatemin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin>=1),0)-@latenoallnum))
							end
						end
					end
					if(@monkind='下期' or @monkind='本月')
					begin
						--超過總分
						if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin>=1),0)>@latenoallnum)
						begin
							if(@late2dnmoney>0)
							begin
								--固定金額*(遲到次數-不扣薪總次數)
								set @mi_money=@mi_money+(@late2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin>=1),0)-@latenoallnum))
							end
							else
							begin
								--時薪*固定時薪%*(遲到次數-不扣薪總次數)
								set @mi_money=@mi_money+((@hmoney*@late2dnhour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin>=1),0)-@latenoallnum))
							end
						end
					end
					
				end
			end
			else --日
			begin
				if(@late2dnmoney>0)
				begin
					--固定金額*遲到數
					set @mi_money=@mi_money+(@late2dnmoney*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1 and dlatemin>@late),0))
				end
				else
				begin
					--時薪*固定時薪%*遲到數
					set @mi_money=@mi_money+((@hmoney*@late2dnhour/100)*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dlatemin>=1 and dlatemin>@late),0))
				end
			
			end
		end
		--更新遲到扣薪
		if(@mi_money>0)
			update #tmp set mi_late=@mi_money where sssno=@sssno
		--------------------------------------------------
		
		--早退扣薪
		set @mi_money=0
		if(@early2dsmoney>0 or @early2dshour>0) --分計扣薪
		begin
			if(@early2=0)
				set @early2=1.0
				
			--判斷以總分還是以日判斷
			if(@earlynoallmin>0)--總分
			begin	
				if(@kind='mon' or @kind='')--整月
				begin
					if(@monkind='下期')--下期才扣款否則無法計算
					begin
						--判斷整月是否超過
						if(isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and dearlymin>=1),0)>@earlynoallmin)
						begin
							--判斷上期是否超過
							if(isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)>@earlynoallmin)
							begin
								--下期全部早退分鐘數皆扣薪
								if(@early2dsmoney>0)
								begin
									--固定金額*無條件進位((早退分鐘數)/分計)
									set @mi_money=@mi_money+(@early2dsmoney*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0))/@early2))
								end
								else
								begin
									--時薪*固定時薪%*無條件進位((早退分鐘數)/分計)
									set @mi_money=@mi_money+((@hmoney*@early2dshour/100)*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0))/@early2))
								end
							end
							else
							begin
								if(@early2dsmoney>0)
								begin
									--固定金額*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
									set @mi_money=@mi_money+(@early2dsmoney*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dearlymin>=1),0)-@earlynoallmin)/@early2))
								end
								else
								begin
									--時薪*固定時薪%*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
									set @mi_money=@mi_money+((@hmoney*@early2dshour/100)*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dearlymin>=1),0)-@earlynoallmin)/@early2))
								end
							end
						end
					end
					else
					begin
						--超過總分
						if(isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0)>@earlynoallmin)
						begin
							if(@early2dsmoney>0)
							begin
								--固定金額*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+(@early2dsmoney*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0)-@earlynoallmin)/@early2))
							end
							else
							begin
								--時薪*固定時薪%*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+((@hmoney*@early2dshour/100)*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0)-@earlynoallmin)/@early2))
							end
						end
					end
				end
				else --分上下期
				begin
					if(@monkind='上期' or @monkind='本月')
					begin
						--超過總分
						if(isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)>@earlynoallmin)
						begin
							if(@early2dsmoney>0)
							begin
								--固定金額*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+(@early2dsmoney*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)-@earlynoallmin)/@early2))
							end
							else
							begin
								--時薪*固定時薪%*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+((@hmoney*@early2dshour/100)*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)-@earlynoallmin)/@early2))
							end
						end
					end
					if(@monkind='下期' or @monkind='本月')
					begin
						--超過總分
						if(isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dearlymin>=1),0)>@earlynoallmin)
						begin
							if(@early2dsmoney>0)
							begin
								--固定金額*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+(@early2dsmoney*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dearlymin>=1),0)-@earlynoallmin)/@early2))
							end
							else
							begin
								--時薪*固定時薪%*無條件進位((早退分鐘數-不扣薪分鐘總數)/分計)
								set @mi_money=@mi_money+((@hmoney*@early2dshour/100)*ceiling((isnull((select SUM(dearlymin) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dearlymin>=1),0)-@earlynoallmin)/@early2))
							end
						end
					end
					
				end
			end
			else --日
			begin
				if(@early2dsmoney>0)
				begin
					--固定金額*無條件進位((每日早退分鐘數-每日不扣薪分鐘數)/分計)
					set @mi_money=@mi_money+(@early2dsmoney*ceiling(isnull((select SUM(dearlymin-@early) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1 and dearlymin>@early),0)/@early2))
				end
				else
				begin
					--時薪*固定時薪%*無條件進位((每日早退分鐘數-每日不扣薪分鐘數)/分計)
					set @mi_money=@mi_money+((@hmoney*@early2dshour/100)*ceiling(isnull((select SUM(dearlymin-@early) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1 and dearlymin>@early),0)/@early2))
				end
			
			end
		
		end
		if(@early2dnmoney>0 or @early2dnhour>0) --次數扣薪
		begin
			--判斷以總次還是以日判斷
			if(@earlynoallnum>0)--總次
			begin	
				if(@kind='mon' or @kind='')--整月
				begin
					if(@monkind='下期')--下期才扣款否則無法計算
					begin
						--判斷整月是否超過
						if(isnull((select count(*) from #tmpa where sssno=@sssno and dearlymin>=1),0)>@earlynoallnum)
						begin
							--判斷上期是否超過
							if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)>@earlynoallnum)
							begin
								--下期全部早退次數皆扣薪
								if(@early2dnmoney>0)
								begin
									--固定金額*早退次數
									set @mi_money=@mi_money+(@early2dnmoney*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0))
								end
								else
								begin
									--時薪*固定時薪%*早退次數
									set @mi_money=@mi_money+((@hmoney*@early2dnhour/100)*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0))
								end
							end
							else
							begin
								if(@early2dnmoney>0)
								begin
									--固定金額*(早退次數-不扣薪總次數)
									set @mi_money=@mi_money+(@early2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dearlymin>=1),0)-@earlynoallnum))
								end
								else
								begin
									--時薪*固定時薪%*(早退次數-不扣薪總次數)
									set @mi_money=@mi_money+((@hmoney*@early2dnhour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and dearlymin>=1),0)-@earlynoallnum))
								end
							end
						end
					end
					else
					begin
						--超過總分
						if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0)>@earlynoallnum)
						begin
							if(@early2dnmoney>0)
							begin
								--固定金額*(早退次數-不扣薪總次數)
								set @mi_money=@mi_money+(@early2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0)-@earlynoallnum))
							end
							else
							begin
								--時薪*固定時薪%*(早退次數-不扣薪總次數)
								set @mi_money=@mi_money+((@hmoney*@early2dnhour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1),0)-@earlynoallnum))
							end
						end
					end
				end
				else --分上下期
				begin
					if(@monkind='上期' or @monkind='本月')
					begin
						--超過總次
						if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)>@earlynoallnum)
						begin
							if(@early2dnmoney>0)
							begin
								--固定金額*(早退次數-不扣薪總次數)
								set @mi_money=@mi_money+(@early2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)-@earlynoallnum))
							end
							else
							begin
								--時薪*固定時薪%*(早退次數-不扣薪總次數)
								set @mi_money=@mi_money+((@hmoney*@early2dnhour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1),0)-@earlynoallnum))
							end
						end
					end
					if(@monkind='下期' or @monkind='本月')
					begin
						--超過總分
						if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dearlymin>=1),0)>@earlynoallnum)
						begin
							if(@early2dnmoney>0)
							begin
								--固定金額*(早退次數-不扣薪總次數)
								set @mi_money=@mi_money+(@early2dnmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dearlymin>=1),0)-@earlynoallnum))
							end
							else
							begin
								--時薪*固定時薪%*(早退次數-不扣薪總次數)
								set @mi_money=@mi_money+((@hmoney*@early2dnhour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dearlymin>=1),0)-@earlynoallnum))
							end
						end
					end
					
				end
			end
			else --日
			begin
				if(@early2dnmoney>0)
				begin
					--固定金額*早退數
					set @mi_money=@mi_money+(@early2dnmoney*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1 and dearlymin>@early),0))
				end
				else
				begin
					--時薪*固定時薪%*早退數
					set @mi_money=@mi_money+((@hmoney*@early2dnhour/100)*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and dearlymin>=1 and dearlymin>@early),0))
				end
			
			end
		end
		--更新早退扣薪(早退與早退放在一起)
		if(@mi_money>0)
			update #tmp set mi_late=mi_late+@mi_money where sssno=@sssno
		--------------------------------------------------
		
		--事假扣薪
		set @mi_money=0
		
		if(@vacadsmoney>0 or @vacadshour>0) --次數扣薪
		begin
			if(@kind='mon' or @kind='')--整月
			begin
				if(@monkind='下期')--下期才扣款否則無法計算
				begin
					--判斷整月是否超過
					if(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and vacaperson>0),0)>@vacanodhours)
					begin
						--判斷上期是否超過
						if(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacaperson>0),0)>@vacanodhours)
						begin
							--下期全部事假時數皆扣薪
							if(@vacadsmoney>0)
							begin
								--固定金額*事假時數
								set @mi_money=@mi_money+(@vacadsmoney*isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacaperson>0),0))
							end
							else
							begin
								--時薪*固定時薪%*事假時數
								set @mi_money=@mi_money+((@hmoney*@vacadshour/100)*isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacaperson>0),0))
							end
						end
						else
						begin
							if(@vacadsmoney>0)
							begin
								--固定金額*(事假時數-不扣薪事假時數)
								set @mi_money=@mi_money+(@vacadsmoney*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and vacaperson>0),0)-@vacanodhours))
							end
							else
							begin
								--時薪*固定時薪%*(事假時數-不扣薪事假時數)
								set @mi_money=@mi_money+((@hmoney*@vacadshour/100)*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and vacaperson>0),0)-@vacanodhours))
							end
						end
					end
				end
				else
				begin
					if(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacaperson>0),0)>@vacanodhours)
					begin
						if(@vacadsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@vacadsmoney*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacaperson>0),0)-@vacanodhours))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@vacadshour/100)*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacaperson>0),0)-@vacanodhours))
						end
					end
				end
			
			end
			else --分上下期
			begin
				if(@monkind='上期' or @monkind='本月')
				begin
					--超過總次
					if(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacaperson>0),0)>@vacanodhours)
					begin
						if(@vacadsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@vacadsmoney*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacaperson>0),0)-@vacanodhours))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@vacadshour/100)*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacaperson>0),0)-@vacanodhours))
						end
					end
				end
				if(@monkind='下期' or @monkind='本月')
				begin
					--超過總分
					if(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacaperson>0),0)>@vacanodhours)
					begin
						if(@vacadsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@vacadsmoney*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacaperson>0),0)-@vacanodhours))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@vacadshour/100)*(isnull((select sum(vacaperson) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacaperson>0),0)-@vacanodhours))
						end
					end
				end
				
			end
		end
		--更新事假扣薪
		if(@mi_money>0)
			update #tmp set mi_person=@mi_money where sssno=@sssno
		--------------------------------------------------
		
		--病假扣薪
		set @mi_money=0
		
		if(@sickdsmoney>0 or @sickdshour>0) --次數扣薪
		begin
			if(@kind='mon' or @kind='')--整月
			begin
				if(@monkind='下期')--下期才扣款否則無法計算
				begin
					--判斷整月是否超過
					if(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and vacasick>0),0)>@sicknodhours)
					begin
						--判斷上期是否超過
						if(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacasick>0),0)>@sicknodhours)
						begin
							--下期全部事假時數皆扣薪
							if(@sickdsmoney>0)
							begin
								--固定金額*事假時數
								set @mi_money=@mi_money+(@sickdsmoney*isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacasick>0),0))
							end
							else
							begin
								--時薪*固定時薪%*事假時數
								set @mi_money=@mi_money+((@hmoney*@sickdshour/100)*isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacasick>0),0))
							end
						end
						else
						begin
							if(@sickdsmoney>0)
							begin
								--固定金額*(事假時數-不扣薪事假時數)
								set @mi_money=@mi_money+(@sickdsmoney*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and vacasick>0),0)-@sicknodhours))
							end
							else
							begin
								--時薪*固定時薪%*(事假時數-不扣薪事假時數)
								set @mi_money=@mi_money+((@hmoney*@sickdshour/100)*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and vacasick>0),0)-@sicknodhours))
							end
						end
					end
				end
				else
				begin
					if(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacasick>0),0)>@sicknodhours)
					begin
						if(@sickdsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@sickdsmoney*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacasick>0),0)-@sicknodhours))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@sickdshour/100)*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and vacasick>0),0)-@sicknodhours))
						end
					end
				end
			
			end
			else --分上下期
			begin
				if(@monkind='上期' or @monkind='本月')
				begin
					--超過總次
					if(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacasick>0),0)>@sicknodhours)
					begin
						if(@sickdsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@sickdsmoney*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacasick>0),0)-@sicknodhours))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@sickdshour/100)*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacasick>0),0)-@sicknodhours))
						end
					end
				end
				if(@monkind='下期' or @monkind='本月')
				begin
					--超過總分
					if(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacasick>0),0)>@sicknodhours)
					begin
						if(@sickdsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@sickdsmoney*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacasick>0),0)-@sicknodhours))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@sickdshour/100)*(isnull((select sum(vacasick) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacasick>0),0)-@sicknodhours))
						end
					end
				end
				
			end
		end
		--更新病假扣薪
		if(@mi_money>0)
			update #tmp set mi_sick=@mi_money where sssno=@sssno
		--------------------------------------------------
		
		--曠職扣薪
		set @mi_money=0
		if(@leavedsmoney>0 or @leavedshour>0)
		begin
			if(@monkind='上期' or @monkind='本月')
			begin
				--有曠職
				if(isnull((select sum(hr_leave) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and hr_leave>0),0)>0)
				begin
					if(@leavedsmoney>0)
					begin
						--固定金額*(曠職時數)
						set @mi_money=@mi_money+(@leavedsmoney*(isnull((select sum(hr_leave) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and hr_leave>0),0)))
					end
					else
					begin
						--時薪*固定時薪%*(曠職時數)
						set @mi_money=@mi_money+((@hmoney*@leavedshour/100)*(isnull((select sum(hr_leave) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and hr_leave>0),0)))
					end
				end
			end
			if(@monkind='下期' or @monkind='本月')
			begin
				--有曠職
				if(isnull((select sum(hr_leave) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and hr_leave>0),0)>0)
				begin
					if(@leavedsmoney>0)
					begin
						--固定金額*(曠職時數)
						set @mi_money=@mi_money+(@leavedsmoney*(isnull((select sum(hr_leave) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and hr_leave>0),0)))
					end
					else
					begin
						--時薪*固定時薪%*(曠職時數)
						set @mi_money=@mi_money+((@hmoney*@leavedshour/100)*(isnull((select sum(hr_leave) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and hr_leave>0),0)))
					end
				end
			end
		end
		--更新曠職扣薪
		if(@mi_money>0)
			update #tmp set mi_leave=@mi_money where sssno=@sssno
		--------------------------------------------------
		
		--忘刷扣薪
		set @mi_money=0
		
		if(@fclockdsmoney>0 or @fclockdshour>0) --次數扣薪
		begin
			if(@kind='mon' or @kind='')--整月
			begin
				if(@monkind='下期')--下期才扣款否則無法計算
				begin
					--判斷整月是否超過
					if(isnull((select count(*) from #tmpa where sssno=@sssno and isforget=1),0)>@fclocknodnum)
					begin
						--判斷上期是否超過
						if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and isforget=1),0)>@fclocknodnum)
						begin
							--下期全部事假時數皆扣薪
							if(@fclockdsmoney>0)
							begin
								--固定金額*事假時數
								set @mi_money=@mi_money+(@fclockdsmoney*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and isforget=1),0))
							end
							else
							begin
								--時薪*固定時薪%*事假時數
								set @mi_money=@mi_money+((@hmoney*@fclockdshour/100)*isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and isforget=1),0))
							end
						end
						else
						begin
							if(@fclockdsmoney>0)
							begin
								--固定金額*(事假時數-不扣薪事假時數)
								set @mi_money=@mi_money+(@fclockdsmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and isforget=1),0)-@fclocknodnum))
							end
							else
							begin
								--時薪*固定時薪%*(事假時數-不扣薪事假時數)
								set @mi_money=@mi_money+((@hmoney*@fclockdshour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date6 and isforget=1),0)-@fclocknodnum))
							end
						end
					end
				end
				else
				begin
					if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and isforget=1),0)>@fclocknodnum)
					begin
						if(@fclockdsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@fclockdsmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and isforget=1),0)-@fclocknodnum))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@fclockdshour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date1 and @date2 and isforget=1),0)-@fclocknodnum))
						end
					end
				end
			
			end
			else --分上下期
			begin
				if(@monkind='上期' or @monkind='本月')
				begin
					--超過總次
					if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and isforget=1),0)>@fclocknodnum)
					begin
						if(@fclockdsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@fclockdsmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and isforget=1),0)-@fclocknodnum))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@fclockdshour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and isforget=1),0)-@fclocknodnum))
						end
					end
				end
				if(@monkind='下期' or @monkind='本月')
				begin
					--超過總分
					if(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and isforget=1),0)>@fclocknodnum)
					begin
						if(@fclockdsmoney>0)
						begin
							--固定金額*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+(@fclockdsmoney*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and isforget=1),0)-@fclocknodnum))
						end
						else
						begin
							--時薪*固定時薪%*(事假時數-不扣薪事假時數)
							set @mi_money=@mi_money+((@hmoney*@fclockdshour/100)*(isnull((select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and isforget=1),0)-@fclocknodnum))
						end
					end
				end
				
			end
		end
		--更新忘刷扣薪(與遲到早退放在一起)
		if(@mi_money>0)
			update #tmp set mi_late=ISNULL(mi_late,0)+@mi_money where sssno=@sssno
		--------------------------------------------------
	end
	
	--全勤
	set @tbo_full=@bo_full
	if(@bo_full>0)
	begin
		if(@kind='mon' or @kind='')--整月
		begin
			if(@latemin>0 and (@latedmoney>0 or @latedfull>0))--遲到幾分內 且超過次數
			begin
				if(select count(*) from #tmpa where sssno=@sssno and dlatemin between 1 and @latemin and dlatemin>=1)>@latenum
				begin
					if(@latedmoney>0)
						set @bo_full=@bo_full-@latedmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@latedfull/100),0)
				end
			end
			if(@late2min>0 and (@late2dmoney>0 or @late2dfull>0))--遲到幾分內 且超過次數
			begin
				if(select count(*) from #tmpa where sssno=@sssno and dlatemin between @latemin and @late2min and  dlatemin>=1)>@late2num
				begin
					if(@late2dmoney>0)
						set @bo_full=@bo_full-@late2dmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@late2dfull/100),0)
				end
			end
			if(@latemalldmoney>0 or @latemalldfull>0)--遲到總分
			begin
				if(select SUM(dlatemin) from #tmpa where sssno=@sssno and dlatemin>=1)>@lateallmin
				begin
					if(@latemalldmoney>0)
						set @bo_full=@bo_full-@latemalldmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@latemalldfull/100),0)
				end
			end
			if(@latenalldmoney>0 or @latenalldfull>0)--遲到總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and dlatemin>=1)>@lateallnum
				begin
					if(@latemalldmoney>0)
						set @bo_full=@bo_full-@latenalldmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@latenalldfull/100),0)
				end
			end
			-----------------------------------------------------------
			if(@earlyndmoney>0 or @earlyndmoney>0)--早退總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and dearlymin>=1)>@earlynum
				begin
					if(@earlyndmoney>0)
						set @bo_full=@bo_full-@earlyndmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@earlyndmoney/100),0)
				end
			end
			-----------------------------------------------------------
			if(@isvstotal=1)
			begin --事病假合計
				if(@vacandmoney>0 or @vacandfull>0)--事病假總次
				begin
					if(select count(*) from #tmpa where sssno=@sssno and (vacaperson>0 or vacasick>0))>@vacanum
					begin
						if(@vacandmoney>0)
							set @bo_full=@bo_full-@vacandmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacandfull/100),0)
					end
				end
				if(@vacahdmoney>0 or @vacahdfull>0)--事病假總時
				begin
					if(isnull((select SUM(vacaperson+vacasick) from #tmpa where sssno=@sssno and (vacaperson>0 or vacasick>0)),0)>@vacahours)
					begin
						if(@vacahdmoney>0)
							set @bo_full=@bo_full-@vacahdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacahdfull/100),0)
					end
				end
				if(@vacaddmoney>0 or @vacaddfull>0)--事病假總天
				begin
					if(isnull((select SUM(vacaperson+vacasick) from #tmpa where sssno=@sssno and (vacaperson>0 or vacasick>0)),0)/8.0>@vacadays)
					begin
						if(@vacaddmoney>0)
							set @bo_full=@bo_full-@vacaddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacaddfull/100),0)
					end
				end
			end
			else
			begin
				if(@vacandmoney>0 or @vacandfull>0)--事假總次
				begin
					if(select count(*) from #tmpa where sssno=@sssno and vacaperson>0)>@vacanum
					begin
						if(@vacandmoney>0)
							set @bo_full=@bo_full-@vacandmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacandfull/100),0)
					end
				end
				if(@vacahdmoney>0 or @vacahdfull>0)--事假總時
				begin
					if(isnull((select SUM(vacaperson) from #tmpa where sssno=@sssno and (vacaperson>0 or vacasick>0)),0)>@vacahours)
					begin
						if(@vacahdmoney>0)
							set @bo_full=@bo_full-@vacahdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacahdfull/100),0)
					end
				end
				if(@vacaddmoney>0 or @vacaddfull>0)--事假總天
				begin
					if(isnull((select SUM(vacaperson) from #tmpa where sssno=@sssno and (vacaperson>0 or vacasick>0)),0)/8.0>@vacadays)
					begin
						if(@vacaddmoney>0)
							set @bo_full=@bo_full-@vacaddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacaddfull/100),0)
					end
				end
				-----------------------------------------------------------
				if(@sickndmoney>0 or @sickndfull>0)--病假總次
				begin
					if(select count(*) from #tmpa where sssno=@sssno and vacasick>0)>@sicknum
					begin
						if(@sickndmoney>0)
							set @bo_full=@bo_full-@sickndmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickndfull/100),0)
					end
				end
				if(@sickhdmoney>0 or @sickhdfull>0)--病假總時
				begin
					if(isnull((select SUM(vacasick) from #tmpa where sssno=@sssno and (vacaperson>0 or vacasick>0)),0)>@vacahours)
					begin
						if(@sickhdmoney>0)
							set @bo_full=@bo_full-@sickhdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickhdfull/100),0)
					end
				end
				if(@sickddmoney>0 or @sickddfull>0)--病假總天
				begin
					if(isnull((select SUM(vacasick) from #tmpa where sssno=@sssno and (vacaperson>0 or vacasick>0)),0)/8.0>@vacadays)
					begin
						if(@sickddmoney>0)
							set @bo_full=@bo_full-@sickddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickddfull/100),0)
					end
				end
			end
			-----------------------------------------------------------
			if(@leavendmoney>0 or @leavendfull>0)--曠職總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and hr_leave>0)>0
				begin
					if(@leavendmoney>0)
						set @bo_full=@bo_full-@leavendmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@leavendfull/100),0)
				end
			end
			-----------------------------------------------------------
			if(@fclockndmoney>0 or @fclockndfull>0)--忘刷總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and isforget=1)>@fclockdnum
				begin
					if(@fclockndmoney>0)
						set @bo_full=@bo_full-@fclockndmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@fclockndfull/100),0)
				end
			end
			-----------------------------------------------------------
		end
		else --half上下期
		begin
			if(@latemin>0 and (@latedmoney>0 or @latedfull>0))--遲到幾分內 且超過次數
			begin
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin between 1 and @latemin and dlatemin>=1)>@latenum
				begin
					if(@latedmoney>0)
						set @bo_full=@bo_full-@latedmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@latedfull/100),0)
				end
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin between 1 and @latemin and dlatemin>=1)>@latenum
				begin
					if(@latedmoney>0)
						set @bo_full=@bo_full-@latedmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@latedfull/100),0)
				end
			end
			if(@late2min>0 and (@late2dmoney>0 or @late2dfull>0))--遲到幾分內 且超過次數
			begin
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dlatemin between @latemin and @late2min and  dlatemin>=1)>@late2num
				begin
					if(@late2dmoney>0)
						set @bo_full=@bo_full-@late2dmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@late2dfull/100),0)
				end
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dlatemin between @latemin and @late2min and  dlatemin>=1)>@late2num
				begin
					if(@late2dmoney>0)
						set @bo_full=@bo_full-@late2dmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@late2dfull/100),0)
				end
			end
			if(@latemalldmoney>0 or @latemalldfull>0)--遲到總分
			begin
				if(select SUM(dlatemin) from #tmpa where sssno=@sssno and dlatemin>=1)>@lateallmin
				begin
					if(@latemalldmoney>0)
						set @bo_full=@bo_full-@latemalldmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@latemalldfull/100),0)
				end
			end
			if(@latenalldmoney>0 or @latenalldfull>0)--遲到總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and dlatemin>=1)>@lateallnum
				begin
					if(@latemalldmoney>0)
						set @bo_full=@bo_full-@latenalldmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@latenalldfull/100),0)
				end
			end
			-----------------------------------------------------------
			if(@earlyndmoney>0 or @earlyndmoney>0)--早退總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and dearlymin>=1)>@earlynum
				begin
					if(@earlyndmoney>0)
						set @bo_full=@bo_full-@earlyndmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@earlyndmoney/100),0)
				end
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and dearlymin>=1)>@earlynum
				begin
					if(@earlyndmoney>0)
						set @bo_full=@bo_full-@earlyndmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@earlyndmoney/100),0)
				end
			end
			-----------------------------------------------------------
			if(@isvstotal=1)
			begin --事病假合計
				if(@vacandmoney>0 or @vacandfull>0)--事病假總次
				begin
					if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and (vacaperson>0 or vacasick>0))>@vacanum
					begin
						if(@vacandmoney>0)
							set @bo_full=@bo_full-@vacandmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacandfull/100),0)
					end
					if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and (vacaperson>0 or vacasick>0))>@vacanum
					begin
						if(@vacandmoney>0)
							set @bo_full=@bo_full-@vacandmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacandfull/100),0)
					end
				end
				if(@vacahdmoney>0 or @vacahdfull>0)--事病假總時
				begin
					if(isnull((select SUM(vacaperson+vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and (vacaperson>0 or vacasick>0)),0)>@vacahours)
					begin
						if(@vacahdmoney>0)
							set @bo_full=@bo_full-@vacahdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacahdfull/100),0)
					end
					if(isnull((select SUM(vacaperson+vacasick) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and (vacaperson>0 or vacasick>0)),0)>@vacahours)
					begin
						if(@vacahdmoney>0)
							set @bo_full=@bo_full-@vacahdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacahdfull/100),0)
					end
				end
				if(@vacaddmoney>0 or @vacaddfull>0)--事病假總天
				begin
					if(isnull((select SUM(vacaperson+vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and (vacaperson>0 or vacasick>0)),0)/8.0>@vacadays)
					begin
						if(@vacaddmoney>0)
							set @bo_full=@bo_full-@vacaddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacaddfull/100),0)
					end
					if(isnull((select SUM(vacaperson+vacasick) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and (vacaperson>0 or vacasick>0)),0)/8.0>@vacadays)
					begin
						if(@vacaddmoney>0)
							set @bo_full=@bo_full-@vacaddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacaddfull/100),0)
					end
				end
			end
			else
			begin
				if(@vacandmoney>0 or @vacandfull>0)--事假總次
				begin
					if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacaperson>0)>@vacanum
					begin
						if(@vacandmoney>0)
							set @bo_full=@bo_full-@vacandmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacandfull/100),0)
					end
					if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacaperson>0)>@vacanum
					begin
						if(@vacandmoney>0)
							set @bo_full=@bo_full-@vacandmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacandfull/100),0)
					end
				end
				if(@vacahdmoney>0 or @vacahdfull>0)--事假總時
				begin
					if(isnull((select SUM(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacaperson>0),0)>@vacahours)
					begin
						if(@vacahdmoney>0)
							set @bo_full=@bo_full-@vacahdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacahdfull/100),0)
					end
					if(isnull((select SUM(vacaperson) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacaperson>0),0)>@vacahours)
					begin
						if(@vacahdmoney>0)
							set @bo_full=@bo_full-@vacahdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacahdfull/100),0)
					end
				end
				if(@vacaddmoney>0 or @vacaddfull>0)--事假總天
				begin
					if(isnull((select SUM(vacaperson) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacaperson>0),0)/8.0>@vacadays)
					begin
						if(@vacaddmoney>0)
							set @bo_full=@bo_full-@vacaddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacaddfull/100),0)
					end
					if(isnull((select SUM(vacaperson) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacaperson>0),0)/8.0>@vacadays)
					begin
						if(@vacaddmoney>0)
							set @bo_full=@bo_full-@vacaddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@vacaddfull/100),0)
					end
				end
				-----------------------------------------------------------
				if(@sickndmoney>0 or @sickndfull>0)--病假總次
				begin
					if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacasick>0)>@sicknum
					begin
						if(@sickndmoney>0)
							set @bo_full=@bo_full-@sickndmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickndfull/100),0)
					end
					if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacasick>0)>@sicknum
					begin
						if(@sickndmoney>0)
							set @bo_full=@bo_full-@sickndmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickndfull/100),0)
					end
				end
				if(@sickhdmoney>0 or @sickhdfull>0)--病假總時
				begin
					if(isnull((select SUM(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacasick>0),0)>@sickhours)
					begin
						if(@sickhdmoney>0)
							set @bo_full=@bo_full-@sickhdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickhdfull/100),0)
					end
					if(isnull((select SUM(vacasick) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacasick>0),0)>@sickhours)
					begin
						if(@sickhdmoney>0)
							set @bo_full=@bo_full-@sickhdmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickhdfull/100),0)
					end
				end
				if(@sickddmoney>0 or @sickddfull>0)--病假總天
				begin
					if(isnull((select SUM(vacasick) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and vacasick>0),0)/8.0)>@sickdays
					begin
						if(@sickddmoney>0)
							set @bo_full=@bo_full-@sickddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickddfull/100),0)
					end
					if(isnull((select SUM(vacasick) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and vacasick>0),0)/8.0)>@sickdays
					begin
						if(@sickddmoney>0)
							set @bo_full=@bo_full-@sickddmoney
						else
							set @bo_full=@bo_full-round((@tbo_full*@sickddfull/100),0)
					end
				end
			end
			-----------------------------------------------------------
			if(@leavendmoney>0 or @leavendfull>0)--曠職總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and hr_leave>0)>0
				begin
					if(@leavendmoney>0)
						set @bo_full=@bo_full-@leavendmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@leavendfull/100),0)
				end
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and hr_leave>0)>0
				begin
					if(@leavendmoney>0)
						set @bo_full=@bo_full-@leavendmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@leavendfull/100),0)
				end
			end
			-----------------------------------------------------------
			if(@fclockndmoney>0 or @fclockndfull>0)--忘刷總次
			begin
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date3 and @date4 and isforget=1)>@fclockdnum
				begin
					if(@fclockndmoney>0)
						set @bo_full=@bo_full-@fclockndmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@fclockndfull/100),0)
				end
				if(select count(*) from #tmpa where sssno=@sssno and noa between @date5 and @date6 and isforget=1)>@fclockdnum
				begin
					if(@fclockndmoney>0)
						set @bo_full=@bo_full-@fclockndmoney
					else
						set @bo_full=@bo_full-round((@tbo_full*@fclockndfull/100),0)
				end
			end
			-----------------------------------------------------------
		end
	end
	
	--更新全勤
	if(@bo_full!=@tbo_full)
	begin
		update #tmp set bo_full=case when @bo_full<=0 then 0 else @bo_full end where sssno=@sssno
	end
	
	fetch next from cursor_table
	into @sssno,@salary,@bo_admin,@bo_traffic,@bo_special,@bo_full,@bo_oth,@meals,@kind
	,@late,@latenoallmin,@latenoallnum,@late2,@late2dsmoney,@late2dshour,@late2dnmoney
	,@late2dnhour,@latemin,@latenum,@latedmoney,@latedfull,@late2min,@late2num,@late2dmoney
	,@late2dfull,@lateallmin,@latemalldmoney,@latemalldfull,@lateallnum,@latenalldmoney,@latenalldfull
	,@early,@earlynoallmin,@earlynoallnum,@early2,@early2dsmoney,@early2dshour,@early2dnmoney,@early2dnhour
	,@earlynum,@earlyndmoney,@earlyndfull
	,@vacanodhours,@vacadsmoney,@vacadshour,@vacanum,@vacandmoney,@vacandfull,@vacahours
	,@vacahdmoney,@vacahdfull,@vacadays,@vacaddmoney,@vacaddfull,@isvstotal
	,@sicknodhours,@sickdsmoney,@sickdshour,@sicknum,@sickndmoney,@sickndfull
	,@sickhours,@sickhdmoney,@sickhdfull,@sickdays,@sickddmoney,@sickddfull
	,@leavedsmoney,@leavedshour,@leavendmoney,@leavendfull
	,@fclocknodnum,@fclockdsmoney,@fclockdshour,@fclockdnum,@fclockndmoney,@fclockndfull
end
close cursor_table
deallocate cursor_table

-------------------------------------------------------------------------------------------------
--處理跨月加班費 NV
if(@mon!=@addmon and @addselect!='0')
begin
	--刪除出勤
	delete #tmpa
	------------------------------------------------------------
	--匯入加班當月出勤資料
	insert #tmpa(noa,noq,sssno,namea,clockin,clockout,w133,w166,w100,w200,w266,hrspecial,isforget
	,class5,cclass5,btime,etime,wmon,wtue,wwed,wthu,wfri,wsat,wsun
	,isshift,shifthours,bresttime,eresttime,bresttime2,eresttime2,bresttime3,eresttime3
	,addhours,workhours,dlatemin,dearlymin,dvacahours,vacaspecial,hr_leave,mealsnum)
	select a.noa,a.noq,a.sssno,a.namea,a.clockin,a.clockout,a.w133,a.w166,a.w100,isnull(a.w200,0),isnull(a.w266,0),ISNULL(a.hr_special,0),ISNULL(a.isforget,0)
	,case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end
	,case when isnull(c1.noa,'')!='' then c1.noa else c2.noa end
	,case when isnull(c1.noa,'')!='' then c1.btime else c2.btime end
	,case when isnull(c1.noa,'')!='' then c1.etime else c2.etime end
	,case when isnull(c1.noa,'')!='' then c1.wmon else c2.wmon end
	,case when isnull(c1.noa,'')!='' then c1.wtue else c2.wtue end
	,case when isnull(c1.noa,'')!='' then c1.wwed else c2.wwed end
	,case when isnull(c1.noa,'')!='' then c1.wthu else c2.wthu end
	,case when isnull(c1.noa,'')!='' then c1.wfri else c2.wfri end
	,case when isnull(c1.noa,'')!='' then c1.wsat else c2.wsat end
	,case when isnull(c1.noa,'')!='' then c1.wsun else c2.wsun end
	,case when isnull(c1.noa,'')!='' then c1.isshift else c2.isshift end
	,case when isnull(c1.noa,'')!='' then c1.shifthours else c2.shifthours end
	,case when isnull(c1.noa,'')!='' then c1.bresttime else c2.bresttime end
	,case when isnull(c1.noa,'')!='' then c1.eresttime else c2.eresttime end
	,case when isnull(c1.noa,'')!='' then c1.bresttime2 else c2.bresttime2 end
	,case when isnull(c1.noa,'')!='' then c1.eresttime2 else c2.eresttime2 end
	,case when isnull(c1.noa,'')!='' then c1.bresttime3 else c2.bresttime3 end
	,case when isnull(c1.noa,'')!='' then c1.eresttime3 else c2.eresttime3 end
	,0,0,0,0,0,0,0,0
	from (select noa,min(noq)noq,sssno,MAX(namea)namea,SUM(w133)w133,SUM(w166)w166,SUM(w100)w100,SUM(w200)w200,SUM(w266)w266,SUM(hr_special)hr_special
	,Min(case when ISNULL(clockindate,'')='' then noa else clockindate end)clockindate,MIN(clockin)clockin
	,Max(case when ISNULL(clockoutdate,'')='' then noa else clockoutdate end)clockoutdate,MAX(clockout)clockout
	,sum(case when isnull(isforget,0)=1 then 1 else 0 end)isforget from salpresents group by noa,sssno
	union all
	select a.noa,'' noq,s.noa,s.namea,0 w133,0 w166,0 w100,0 w200,0 w266,0 hr_special,a.noa clockindate,'' clockin,a.noa clockoutdate,''clockout ,0 isforget
	from #montmp a,sss s where not exists (select * from salpresents where noa=a.noa and s.noa=sssno)
	) a 
	left join sss s on a.sssno=s.noa
	--班別-調整紀錄
	outer apply (select top 1 * from saladjust where noa=a.sssno and datea<=a.noa order by datea desc)adj
	--非輪班
	outer apply(select top 1 * from class5s  where noa=case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end
	and bdate<a.noa order by bdate desc --有效日
	)c1
	--輪班(用上班時間與約定上班時間的時差來判斷)
	outer apply(select top 1 * from class5s  where ','+case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end+',' like '%,'+noa+',%'
	and bdate<a.noa
	order by bdate desc,
		case when left(btime,2)<='04' and clockin between '20:00:00' and '23:59:59' --昨天進(24)
		then ABS(cast(LEFT(clockin,2)as float)-cast('24' as float))
		when left(btime,2)>='20' and clockin between '00:00:00' and '05:00:00' --隔天進(24)
		then ABS((cast(LEFT(clockin,2)as float)+24)-cast(LEFT(btime,2) as float))
		else ABS(cast(LEFT(clockin,2)as float)-cast(LEFT(btime,2) as float)) end --正常區間
	)c2
	where left(a.noa,len(@addmon))=@addmon
	and (s.person=@person or len(@person)=0)

	-----------------------------------------------------------------
	--星期
	update #tmpa set weeks=DATEPART(weekday,case when @r_len='3' then dbo.ChineseEraName2AD(noa) else noa end)-1

	--更新正常工作日類別
	update #tmpa set wtype=case when weeks=1 then wmon when weeks=2 then wtue when weeks=3 then wwed 
	when weeks=4 then wthu when weeks=5 then wfri when weeks=6 then wsat when weeks=0 then wsun else '' end

	--更新 假別主檔 正常班 假日 與 補休工作日
	update a set holiday=case when b.noa is null then 0 when isnull(iswork,0)=1 then 0 else 1 end
	,workday=case when b.noa is null then 0 when isnull(iswork,0)=1 then 1 else 0 end
	from #tmpa a outer apply (select * from holiday where noa=a.noa)b

	--更新加班時數
	--@addselect --'0@沒有加班時數,1@根據加班單,2@根據出勤紀錄表,3@根據出勤紀錄自訂加班時數'
	if(@addselect='1')
	begin
		update a set addhours=isnull(b.hours,0),hrspecial=isnull(b.hr_special,0)
		,w100=isnull(b.w100,0),w133=isnull(b.w133,0),w166=isnull(b.w166,0),w200=isnull(b.w200,0),w266=isnull(b.w266,0) 
		from #tmpa a outer apply (select SUM(hours)hours,SUM(hr_special)hr_special
		,sum(case when typea='國定假日' or typea='例假日' then case when hours>8 then 8 else hours end else 0 end )w100
		,sum(case when typea='休息日' then case when hours>2 then 2 else hours end
		when typea='國定假日' and hours>8 then case when hours-8>2 then 2 else hours-8 end
		when typea='休息日' then 0 	when typea='工作日' then case when hours>2 then 2 else hours end else 0 end )w133
		,sum(case when typea='休息日' and hours>2 then case when hours>8 then 6 else hours-2 end
		when typea='國定假日' and hours>10 then hours-10
		when typea='休息日' then 0 when typea='工作日' then case when hours>2 then hours-2 else 0 end else 0 end )w166
		,SUM(case when typea='例假日' and hours>8 then hours-8 else 0 end)w200
		,SUM(case when typea='休息日' and hours>8 then hours-8 else 0 end)w266
		from saladd where datea=case when btime<'05:59' then dbo.q_cdn(a.noa,1) else a.noa end and sssno=a.sssno and isnull(isapv,0)=1)b
	end
	if(@addselect='2')
	begin
		update a 
		set addhours=case when left(overtime,2)>='20' and clockout between '00:00:00' and '08:00:00' --隔天出
		then round((Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+overtime,Convert(NVARCHAR(10),DateAdd(Day,1,getdate()),20)+' '+clockout))/60.0,1)
		else round((Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+overtime,Convert(NVARCHAR(10),getdate(),20)+' '+clockout))/60.0,1) end	
		,w100=0,w133=0,w166=0,w200=0,w266=0 
		from #tmpa a where isnull(overtime,'')!='' and clockout>isnull(overtime,'')
		
		update #tmpa 
		set w100=case when holiday=1 or (wtype='h' and workday!=1) then 8 else 0 end --例假 國訂
		,w133=case 
			when wtype='r' then 2 --休
			when holiday=1 and addhours>8 then (case when addhours-8>2 then 2 else addhours-8 end)--國訂
			when wtype='h' then 0 --例假
			else (case when addhours>2 then 2 else addhours end) end --平常日
		,w166=case 
			when wtype='r' and addhours<=4 then 2 when wtype='r' and addhours<=8 then 6 --休
			when holiday=1 and addhours>10 then addhours-10 --國訂
			when wtype='h' then 0 --例假
			else (case when addhours>2 then addhours-2 else 0 end) end --平常日
		,w200=case when wtype='h' and addhours>8 then addhours-8 else 0 end --例假
		,w266=case when wtype='r' and addhours>8 then 4 else 0 end --休
		where addhours>0 and isshift=0
		
	end
	if(@addselect='3')
	begin
		update #tmpa set addhours=isnull(w100,0)+isnull(w133,0)+ISNULL(w166,0)+ISNULL(w200,0)+isnull(w266,0)
	end
	
	--放入已使用的補修時數
	update a
	set hrspecial=isnull(b.used,0)
	from #tmpa a outer apply (select SUM(used)used from dbo.carryforwards(0,'','',1)where sssno=a.sssno and datea=a.noa)b
	
	--106/10/12後面請假客戶都需核准才會計算時數 故換休預設寫1
	---------------------------------------------------------------------------
	--抵扣換休 --給予加班費 扣除已換休時數 換薪時數必須給予換算較高的比例，故先扣除低換算比例
	update #tmpa
	set w133=case when hrspecial>=w133 then 0 else w133-hrspecial end
	,hrspecial=case when hrspecial>=w133 then hrspecial-w133 else 0 end
	where hrspecial>0 and w133>0

	update #tmpa
	set w166=case when hrspecial>=w166 then 0 else w166-hrspecial end
	,hrspecial=case when hrspecial>=w166 then hrspecial-w166 else 0 end
	where hrspecial>0 and w166>0

	update #tmpa
	set w100=case when hrspecial>=w100 then 0 else w100-hrspecial end
	,hrspecial=case when hrspecial>=w100 then hrspecial-w100 else 0 end
	where hrspecial>0 and w100>0

	update #tmpa
	set w200=case when hrspecial>=w200 then 0 else w200-hrspecial end
	,hrspecial=case when hrspecial>=w200 then hrspecial-w200 else 0 end
	where hrspecial>0 and w200>0

	update #tmpa
	set w266=case when hrspecial>=w266 then 0 else w266-hrspecial end
	,hrspecial=case when hrspecial>=w266 then hrspecial-w266 else 0 end
	where hrspecial>0 and w266>0

	update #tmpa set addhours=isnull(w100,0)+isnull(w133,0)+ISNULL(w166,0)+ISNULL(w200,0)+isnull(w266,0)
	---------------------------------------------------------------------------
	
	update a
	set addh1=c.w133,addh2=c.w166,addh3=0,addh4=0,addh100=c.w100,addh200=c.w200,addh266=c.w266
	from #tmp a
	outer apply (select SUM(w133)w133,SUM(w166)w166,SUM(w100)w100,SUM(w200)w200,SUM(w266)w266
	from #tmpa where sssno=a.sssno and noa between @date1 and @date2)c
end
-------------------------------------------------------------------------------------------------
select sssno,namea,partno,part,jobno,job,person,indate,outdate,iswelfare,typea
,ISNULL(salary,0) salary,ISNULL(bo_admin,0) bo_admin,ISNULL(bo_traffic,0) bo_traffic
,ISNULL(bo_special,0) bo_special,ISNULL(bo_oth,0) bo_oth,ISNULL(bo_full,0) bo_full
,ISNULL(meals,0) meals,ISNULL(bo_money1,0) bo_money1,ISNULL(bo_money2,0) bo_money2
,ISNULL(bo_money3,0) bo_money3,ISNULL(bo_money4,0) bo_money4,ISNULL(bo_money5,0) bo_money5
,ISNULL(ch_labor1,0) ch_labor1,ISNULL(ch_labor2,0) ch_labor2,ISNULL(ch_health_insure,0) ch_health_insure
,ISNULL(raise_num,0) raise_num,ISNULL(ch_health,0) ch_health
,ISNULL(as_health,0) as_health,ISNULL(he_comp,0) he_comp,ISNULL(hplus2,0) hplus2
,ISNULL(ch_labor,0) ch_labor,ISNULL(as_labor,0) as_labor,ISNULL(la_comp,0) la_comp
,ISNULL(ch_labor_comp,0) ch_labor_comp,ISNULL(ch_labor_self,0) ch_labor_self
,ISNULL(tax,0) tax,ISNULL(borrow,0) borrow,ISNULL(plus,0) plus,ISNULL(minus,0) minus
,ISNULL(ismanua,0) ismanua,ISNULL(ostand,0) ostand
,ISNULL(addh1,0) addh1,ISNULL(addh2,0) addh2,ISNULL(addh3,0) addh3,ISNULL(addh4,0) addh4
,ISNULL(addh100,0) addh100,ISNULL(addh200,0) addh200,ISNULL(addh266,0) addh266
,ISNULL(newday,0) newday,ISNULL(inday,0) inday,ISNULL(hrs,0) hrs,ISNULL(late,0) late
,ISNULL(hr_sick,0) hr_sick,ISNULL(mi_sick,0) mi_sick
,ISNULL(hr_person,0) hr_person,ISNULL(mi_person,0) mi_person
,ISNULL(hr_nosalary,0) hr_nosalary,ISNULL(mi_nosalary,0) mi_nosalary
,ISNULL(hr_leave,0) hr_leave,ISNULL(mi_leave,0) mi_leave
,ISNULL(hr_late,0) hr_late,ISNULL(mi_late,0) mi_late
,ISNULL(memo,'') memo
from #tmp order by sssno

IF OBJECT_ID('tempdb..#tmp')is not null
BEGIN
   drop table #tmp
END

IF OBJECT_ID('tempdb..#tmpa')is not null
BEGIN
   drop table #tmpa
END

IF OBJECT_ID('tempdb..#montmp')is not null
BEGIN
   drop table #montmp
END

;
---------------------------------------------------------------------------------------------------------------------
salaryimport2:--salaryimport2
SET QUOTED_IDENTIFIER OFF
declare @mon nvarchar(50)=[1]
declare @r_len nvarchar(50)=[2]
declare @person nvarchar(50)=[3] --本國/日薪/外勞/時薪
declare @monkind nvarchar(50)=[4] --本月/上期/下期
declare @proj nvarchar(50)=[5]
declare @date1 nvarchar(50)=[6] --整月/上/下期
declare @date2 nvarchar(50)=[7] --整月/上/下期

IF OBJECT_ID('tempdb..#tmpa')is not null
BEGIN
   drop table #tmpa
END

IF OBJECT_ID('tempdb..#tmp')is not null
BEGIN
   drop table #tmp
END

IF OBJECT_ID('tempdb..#montmp')is not null
BEGIN
   drop table #montmp
END

create table #tmp(
	sssno nvarchar(max),
	namea nvarchar(max),
	partno nvarchar(max),
	part nvarchar(max),
	jobno nvarchar(max),
	job nvarchar(max),
	person nvarchar(max),
	indate nvarchar(max),
	outdate nvarchar(max),
	iswelfare bit,
	typea nvarchar(max),
	
	salary float,
	bo_admin float,
	bo_traffic float,
	bo_special float,
	bo_oth float,
	bo_full float,
	meals float,
	
	bo_money1 float,
	bo_money2 float,
	bo_money3 float,
	bo_money4 float,
	bo_money5 float,
	
	ch_labor1 float, --勞保投保薪資
	ch_labor2 float, --勞退投保薪資
	ch_health_insure float, --健保投保薪資
	raise_num float, --扶養人數
	
	ch_health float, --健保自付額
	as_health float, --健保輔助額
	he_comp float, --健保公司負擔
	hplus2 float, --二代健保補價
	
	ch_labor float,--勞保自付額
	as_labor float,--勞保輔助
	la_comp float, --勞保公司負擔
	
	ch_labor_comp float,--勞退公司提繳
	ch_labor_self float,--勞退個人提繳
	
	tax float, --所得稅
	
	borrow float, --借支
	plus float, --其他加項
	minus float,--其他扣款
	
	ismanua bit,--調整
	ostand float,--加班費基數
	addh1 float,
	addh2 float,
	addh3 float,
	addh4 float,
	addh100 float,
	addh200 float,
	addh266 float,
	
	newday float, --新進員工作日數
	inday float, --上班天數(日薪)
	hrs float, --時數(時薪)
	
	late float,--遲到/早退
	hr_sick float,
	mi_sick float,
	hr_person float,
	mi_person float,
	hr_nosalary float,
	mi_nosalary float,
	hr_leave float,
	mi_leave float,
	hr_late float,--遲到扣薪 106/05/19增加
	mi_late float,
	memo nvarchar(MAX)
)

insert #tmp(sssno,namea,partno,part,jobno,job,person,indate,outdate,iswelfare,typea
,salary,bo_admin,bo_traffic,bo_special,bo_oth,bo_full,meals
,bo_money1,bo_money2,bo_money3,bo_money4,bo_money5
,ch_labor1,ch_labor2,ch_health_insure,raise_num
,ch_health,as_health,he_comp,hplus2
,ch_labor,as_labor,la_comp
,ch_labor_comp,ch_labor_self,tax
,borrow,plus,minus
,ismanua,ostand
,addh1,addh2,addh3,addh4,addh100,addh200,addh266
,newday,inday,hrs,late
,hr_sick,hr_person,hr_nosalary,hr_leave,hr_late,memo
)
select a.noa sssno,a.namea,a.partno,a.part,a.jobno,a.job,a.person,a.indate,a.outdate,a.iswelfare,a.typea
,isnull(b.money,0) salary,isnull(b.bo_admin,0)bo_admin,isnull(b.bo_traffic,0)bo_traffic
,isnull(b.bo_special,0)bo_special,isnull(b.bo_oth,0)bo_oth,isnull(b.bo_full,0) bo_full
,0 mealsmoney
,isnull(b.bo_money1,0)bo_money1,isnull(b.bo_money2,0)bo_money2
,isnull(b.bo_money3,0)bo_money3,isnull(b.bo_money4,0)bo_money4,isnull(b.bo_money5,0)bo_money5
,case when lab.noa is not null then isnull(b2.sa_labor,0) else isnull(b.sa_labor,0)end ch_labor1
,case when lab.noa is not null then isnull(b2.sa_retire,0) else isnull(b.sa_retire,0)end ch_labor2
,case when lab.noa is not null then isnull(b2.sa_health,0) else isnull(b.sa_health,0)end ch_health_insure
,case when lab.noa is not null then isnull(b2.mount,0) else isnull(b.mount,0)end raise_num
,case when lab.noa is not null then isnull(b2.he_person,0) else isnull(b.he_person,0)end ch_health
,case when lab.noa is not null then isnull(lab.as_health,0) else isnull(b.as_health,0) end as_health
,case when lab.noa is not null then isnull(b2.he_comp,0) else isnull(b.he_comp,0)end he_comp
,case when lab.noa is not null then isnull(b2.hplus2,0) else isnull(b.hplus2,0)end hplus2
,case when lab.noa is not null then isnull(b2.la_person,0) else isnull(b.la_person,0)end ch_labor
,case when lab.noa is not null then isnull(lab.as_labor,0) else isnull(b.as_labor,0)end as_labor
,case when lab.noa is not null then isnull(b2.la_comp,0) else isnull(b.la_comp,0)end la_comp
,case when lab.noa is not null then isnull(b2.re_comp,0) else isnull(b.re_comp,0) end ch_labor_comp
,case when lab.noa is not null then isnull(b2.re_person,0) else isnull(b.re_person,0)end ch_labor_self
,isnull(b.tax,0)tax
,isnull(d.borrow,0) borrow,isnull(d.plus,0) plus,isnull(d.minus,0)minus
,0 --若class5有指定加班費 則加班費需程式要先計算出來
,0 ostand
,0 w133,0 w166,case when @monkind='下期' then 0 else 0 end,case when @monkind='下期' then 0 else 0 end
,0 w100,0 w200,0 w266
,case when (left(a.indate,len(@mon))=@mon and isnull(a.indate,'')!='') or (left(a.outdate,len(@mon))=@mon and isnull(a.outdate,'')!='') then 
	case when (left(a.indate,len(@mon))=left(a.outdate,len(@mon))) --當月進當月離
	then dbo.q_cdd(a.outdate,a.indate)+1
	when left(a.outdate,len(@mon))=@mon --當月離職
	then dbo.q_cdd(a.outdate,@mon+'/01')+1
	else dbo.q_cdd(@mon+'/'+dbo.q_lastday(@mon),a.indate) end --當月入職
else 0 end
,0 inday,0 workhours,0
,ISNULL(h.hr_sick,0),ISNULL(h.hr_person,0),ISNULL(h.hr_nosalary,0),ISNULL(h.hr_leave,0),round(ISNULL(0,0)/60,1) dlemin
,case when (left(a.indate,len(@mon))=@mon and isnull(a.indate,'')!='') or (left(a.outdate,len(@mon))=@mon and isnull(a.outdate,'')!='') then 
	case when (left(a.indate,len(@mon))=left(a.outdate,len(@mon))) --當月進當月離
	then "新進員工(工作日:"+cast(dbo.q_cdd(a.outdate,a.indate)+1 as nvarchar(10))+")"
	when left(a.outdate,len(@mon))=@mon --當月離職
	then "離職員工(工作日:"+CAST(dbo.q_cdd(a.outdate,@mon+'/01')+1 as nvarchar(10))+")"
	else "新進員工(工作日:"+cast(dbo.q_cdd(@mon+'/'+dbo.q_lastday(@mon),a.indate) as nvarchar(10))+")" end --當月入職
else '' end
from sss a 
outer apply (select top 1 * from saladjust where noa=a.noa and datea<=@date2 order by datea desc)b
outer apply (select top 1 noa,as_health,as_labor from labase where noa=a.noa)lab
outer apply (select SUM(he_person)he_person,SUM(he_comp)he_comp
,SUM(la_person)la_person,SUM(la_comp)la_comp,SUM(re_person)re_person,SUM(re_comp)re_comp,SUM(disaster)disaster,SUM(salary)salary
,SUM(sa_health)sa_health,SUM(sa_labor)sa_labor,SUM(sa_retire)sa_retire,SUM(hplus2)hplus2,MAX(mount)mount
from salinsures where noa=a.noa and mon=@mon)b2
left join (select sssno,SUM(plus) plus,SUM(minus) minus,SUM(borrow) borrow from salchg where mon=@mon group by sssno) d on a.noa=d.sssno
outer apply (select SUM(case when hname like'%病假%' then hr_used else 0 end) hr_sick,
SUM(case when hname like'%事假%' then hr_used else 0 end) hr_person,
SUM(case when hname like'%無薪%' then hr_used else 0 end) hr_nosalary
,SUM(case when hname like'%曠工%' then hr_used else 0 end) hr_leave
from salvacause where bdate between @date1 and @date2 and sssno=a.noa)h
--(因沒有時間所以不處理是否輪班,只接取早班)
outer apply(
	select top 1 * from class5s where noa=case when isnull(b.class5,'')!='' then b.class5 else a.class5 end
	and bdate<@date2 order by bdate,btime desc --有效日
)c1 where a.person=@person and a.noa!='Z001' 
and (ISNULL(a.outdate,'')='' or @date1<ISNULL(a.outdate,''))
and (ISNULL(a.indate,'')!='' and ISNULL(a.indate,'')<=@date2 )

select sssno,namea,partno,part,jobno,job,person,indate,outdate,iswelfare,typea
,ISNULL(salary,0) salary,ISNULL(bo_admin,0) bo_admin,ISNULL(bo_traffic,0) bo_traffic
,ISNULL(bo_special,0) bo_special,ISNULL(bo_oth,0) bo_oth,ISNULL(bo_full,0) bo_full
,ISNULL(meals,0) meals,ISNULL(bo_money1,0) bo_money1,ISNULL(bo_money2,0) bo_money2
,ISNULL(bo_money3,0) bo_money3,ISNULL(bo_money4,0) bo_money4,ISNULL(bo_money5,0) bo_money5
,ISNULL(ch_labor1,0) ch_labor1,ISNULL(ch_labor2,0) ch_labor2,ISNULL(ch_health_insure,0) ch_health_insure
,ISNULL(raise_num,0) raise_num,ISNULL(ch_health,0) ch_health
,ISNULL(as_health,0) as_health,ISNULL(he_comp,0) he_comp,ISNULL(hplus2,0) hplus2
,ISNULL(ch_labor,0) ch_labor,ISNULL(as_labor,0) as_labor,ISNULL(la_comp,0) la_comp
,ISNULL(ch_labor_comp,0) ch_labor_comp,ISNULL(ch_labor_self,0) ch_labor_self
,ISNULL(tax,0) tax,ISNULL(borrow,0) borrow,ISNULL(plus,0) plus,ISNULL(minus,0) minus
,ISNULL(ismanua,0) ismanua,ISNULL(ostand,0) ostand
,ISNULL(addh1,0) addh1,ISNULL(addh2,0) addh2,ISNULL(addh3,0) addh3,ISNULL(addh4,0) addh4
,ISNULL(addh100,0) addh100,ISNULL(addh200,0) addh200,ISNULL(addh266,0) addh266
,ISNULL(newday,0) newday,ISNULL(inday,0) inday,ISNULL(hrs,0) hrs,ISNULL(late,0) late
,ISNULL(hr_sick,0) hr_sick,ISNULL(mi_sick,0) mi_sick
,ISNULL(hr_person,0) hr_person,ISNULL(mi_person,0) mi_person
,ISNULL(hr_nosalary,0) hr_nosalary,ISNULL(mi_nosalary,0) mi_nosalary
,ISNULL(hr_leave,0) hr_leave,ISNULL(mi_leave,0) mi_leave
,ISNULL(hr_late,0) hr_late,ISNULL(mi_late,0) mi_late
,ISNULL(memo,'') memo
from #tmp order by sssno

IF OBJECT_ID('tempdb..#tmp')is not null
BEGIN
   drop table #tmp
END

IF OBJECT_ID('tempdb..#tmpa')is not null
BEGIN
   drop table #tmpa
END

IF OBJECT_ID('tempdb..#montmp')is not null
BEGIN
   drop table #montmp
END

;