z_anavccst04:--z_anavccst04
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_detail nvarchar(max)
	declare @t_bproductno nvarchar(20) = case when '#non'=[10] then '' else [10] end
	declare @t_eproductno nvarchar(20) = case when '#non'=[11] then char(255) else [11] end
	
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bcustno = case when '#non'=[3] then '' else [3] end
	set @t_ecustno = case when '#non'=[4] then char(255) else [4] end
	set @t_detail = case when '#non'=[8] then '' else [8] end
	
	declare @t_bdime float = 0
	declare @t_edime float = 999
	
	begin try
		set @t_bdime = cast([12] as float)
		set @t_edime = cast([13] as float)
	end try
	begin catch
		--nothing
	end catch
------------------------------------------------------------------------------------------------------------------------------
declare @result table(
	gno nvarchar(10),
	productno nvarchar(50),
	products nvarchar(100),
	dime float,
	lengthb float,
	width float,
	mount float,
	weight float,
	stk1m float, --捲數
	stk1w float, --捲重
	stk2m float, --板數
	stk2w float, --板重
	need float,
	ordeno nvarchar(30),
	no2 nvarchar(10),
	comp nvarchar(100),
	memo nvarchar(MAX),
	bwidth float
)

insert @result 
select '2',b.productno,b.product,b.dime,b.lengthb,b.width,b.mount,b.weight,0,0,0,0
,b.weight,b.noa,b.no2,case when a.nick!='' then a.nick else left(a.comp,6) end,b.memo,cast(b.width as int)/100*100
from view_orde a left join view_ordes b on a.noa=b.noa 
where a.kind='A1' and b.productno!='' 
and (a.odate between @t_bdate and @t_edate)
and (a.custno between @t_bcustno and @t_ecustno)
and (b.productno between @t_bproductno and @t_eproductno)
and (b.dime between @t_bdime and @t_edime)
--排除已加工
and not exists (select * from view_cubs where ordeno=b.noa and no2=b.no2)
and not exists (select * from view_cuts where ordeno=b.noa and no2=b.no2)

--排除已配料
declare @ordeno nvarchar(50)
declare @no2 nvarchar(50)
declare @pno nvarchar(50)
declare @dime float
declare @weight float--配料總重
declare @need float--須配料重

declare cursor_table cursor for
select noa,productno,dime,sum(weight) from view_ordet a 
where exists (select * from @result where ordeno=a.noa and productno=a.productno and dime=a.dime)
group by noa,productno,dime
open cursor_table
fetch next from cursor_table
into @ordeno,@pno,@dime,@weight
while(@@FETCH_STATUS <> -1)
begin
	if(@weight>0)
	begin
		declare cursor_table2 cursor for
		select no2,need from @result where ordeno=@ordeno and productno=@pno and dime=@dime
		open cursor_table2
		fetch next from cursor_table2
		into @no2,@need
		while(@@FETCH_STATUS <> -1)
		begin
			if(@weight>0 and @need>0)
			begin
				if(@weight>=@need)
				begin
					update @result
					set need=0
					where CURRENT OF cursor_table2
					
					set @weight=@weight-@need
				end
				else
				begin
					update @result
					set need=need-@weight
					where CURRENT OF cursor_table2
					
					set set @weight=0
				end
				
			end
			else
			begin
				break
			end
			
			fetch next from cursor_table2
			into @no2,@need
		end
		close cursor_table2
		deallocate cursor_table2
	end

	fetch next from cursor_table
	into @ordeno,@pno,@dime,@weight
end
close cursor_table
deallocate cursor_table

--刪除配料需求=0
delete @result where need=0

insert @result
select '0',productno,MAX(products),dime,lengthb,MAX(width),SUM(mount),SUM(weight)
,0,0,0,0,0
,'','','','',bwidth 
from @result a where gno='2'
group by productno,dime,lengthb,bwidth

--更新庫存
update a
set stk1m=isnull(b.emount,0),stk1w=isnull(b.eweight,0),stk2m=isnull(c.emount,0),stk2w=isnull(c.eweight,0)
,need=case when isnull(b.eweight,0)+isnull(c.eweight,0)>a.weight then 0 else a.weight-(isnull(b.eweight,0)+isnull(c.eweight,0)) end
from @result a
outer apply (
	select SUM(emount)emount,SUM(eweight)eweight from uccy ua 
	outer apply(select top 1 * from view_uccb where ua.uno=uno)ub 
	where ua.eweight>0 and ua.emount>0 and ub.lengthb=0 
	and ub.productno=a.productno and ub.dime=a.dime and ub.lengthb=a.lengthb and ub.width between bwidth and (bwidth+99)
) b--捲
outer apply (
	select SUM(emount)emount,SUM(eweight)eweight from uccy ua 
	outer apply(select top 1 * from view_uccb where ua.uno=uno)ub 
	where ua.eweight>0 and ua.emount>0 and ub.lengthb>0 
	and ub.productno=a.productno and ub.dime=a.dime and ub.lengthb=a.lengthb and ub.width between bwidth and (bwidth+99)
)c--板
where gno='0'

if(@t_detail='')
	delete @result where gno='2' 
else
	insert @result(gno,productno,dime,lengthb,bwidth)
	select '1',productno,dime,lengthb,bwidth from @result a where gno='2' group by productno,dime,lengthb,bwidth

select 
cast(dime as nvarchar(20))+' x '+cast(width as nvarchar(20))+' x '+cast(lengthb as nvarchar(20)) size
,dbo.getComma(mount,2)mount
,dbo.getComma(weight,2)weight
,dbo.getComma(stk1m,2)stk1m
,dbo.getComma(stk1w,2)stk1w
,dbo.getComma(stk2m,2)stk2m
,dbo.getComma(stk2w,2)stk2w
,dbo.getComma(need,2)need
,* 
from @result order by productno,dime,lengthb,bwidth,gno,ordeno,no2

;
--***********************************************************************************
z_anavccst03:--z_anavccst03
	SET QUOTED_IDENTIFIER OFF
	
	declare @t_bproductno nvarchar(20) = case when '#non'=[10] then '' else [10] end
	declare @t_eproductno nvarchar(20) = case when '#non'=[11] then char(255) else [11] end
	declare @t_bdime float = 0
	declare @t_edime float = 999
	declare @t_bwidth float = 0
	declare @t_ewidth float = 9999
	
	begin try
		set @t_bdime = cast([12] as float)
		set @t_edime = cast([13] as float)
		set @t_bwidth = cast([14] as float)
		set @t_ewidth = cast([15] as float)
	end try
	begin catch
		--nothing
	end catch
	------------------------------------------------------------------------------------------
	declare @tmpa table(
		accy nvarchar(20),
		ordeno nvarchar(20),
		no2 nvarchar(10),
		productno nvarchar(20),
		dime float,
		width float,
		mount float,
		[weight] float,
		gmount float,
		gweight float,
		emount float,
		eweight float
	)
	--前提：訂單編號不會重覆
	insert into @tmpa (accy,ordeno,no2,productno,dime,width,mount,[weight])
	select '',a.noa,b.no2,b.productno,b.dime,b.width,b.mount,b.[weight]
	from view_orde a
	left join view_ordes b on a.accy=b.accy and a.noa=b.noa
	where b.noa is not null
--	and LEFT(a.kind,1)='A'
	and isnull(a.enda,0)=0 and isnull(a.cancel,0)=0  
	and ISNULL(b.enda,0)=0 and isnull(b.cancel,0)=0
	and b.productno between @t_bproductno and @t_eproductno
	and b.dime between @t_bdime and @t_edime
	and b.width between @t_bwidth and @t_ewidth
	
	update @tmpa set gmount=ISNULL(b.mount,0),gweight=ISNULL(b.[weight],0)
	from @tmpa a
	outer apply (select SUM(mount) mount,SUM([weight]) [weight] from view_vccs where ordeno=a.ordeno and no2=a.no2) b
	update @tmpa set emount = cast(mount as decimal(10,3))-cast(gmount as decimal(10,3))
		,eweight = cast([weight] as decimal(10,3))-cast(gweight as decimal(10,3))
	------------------------------------------------------------------------------------------------
	declare @tmpb table(
		productno nvarchar(20),
		dime float,
		width float,
		mount float,
		[weight] float
	)
	insert into @tmpb(productno,dime,width,mount,[weight])
	select productno,dime,width,SUM(emount),SUM([eweight])
	from @tmpa
	group by productno,dime,width
	having not(SUM(emount)=0 and SUM([eweight])=0)
	------------------------------------------------------------------------------------------------
	declare @tmpc table(
		productno nvarchar(20),
		dime float,
		width float,
		mount float,
		[weight] float
	)
	insert into @tmpc(productno,dime,width,mount,[weight])
	select b.productno,b.dime,b.width,SUM(a.emount) mount,SUM(a.[eweight]) [weight]
	from uccy a
	left join view_uccb b on a.uno=b.uno
	where b.uno is not null
	--and LEFT(b.kind,1)='A'
	and b.productno between @t_bproductno and @t_eproductno
	and b.dime between @t_bdime and @t_edime
	and b.width between @t_bwidth and @t_ewidth
	group by b.productno,b.dime,b.width
	having not(SUM(a.emount)=0 and SUM(a.[eweight])=0)
	------------------------------------------------------------------------------------------------
	declare @tmpd table(
		gno nvarchar(20),
		recno int,
		productno nvarchar(20),
		product nvarchar(50),
		dime float,
		width float,
		mount1 float,
		weight1 float,
		mount2 float,
		weight2 float
	)
	insert into @tmpd(gno,recno,productno,dime,width,mount1,[weight1],mount2,[weight2])
	select '1',ROW_NUMBER()over(order by productno,dime,width),productno,dime,width,SUM(mount1),SUM(weight1),SUM(mount2),SUM(weight2)
	from(
		select productno,dime,width,mount mount1,[weight] weight1,0 mount2,0 weight2 from @tmpb
		union all
		select productno,dime,width,0,0,mount,[weight] from @tmpc)a
	group by productno,dime,width
	
	update @tmpd set product=b.product
	from @tmpd a
	left join ucc b on a.productno=b.noa
	
	select recno rr
		,productno b01
		,product b02
		,dime b03
		,width b04
		,dbo.getComma(mount1,3) b05
		,dbo.getComma(weight1,3) b06
		,dbo.getComma(mount2,3) b07
		,dbo.getComma(weight2,3) b08
		,* 
	from @tmpd order by recno;

z_anavccst02:--z_anavccst02
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bsssno nvarchar(20)
	declare @t_esssno nvarchar(20)
	declare @t_item nvarchar(max)
	declare @t_detail nvarchar(max)
	
	set @t_bdate = case when '#non'=[1] then '' else [1] end
	set @t_edate = case when '#non'=[2] then char(255) else [2] end
	set @t_bcustno = case when '#non'=[3] then '' else [3] end
	set @t_ecustno = case when '#non'=[4] then char(255) else [4] end
	set @t_bsssno = case when '#non'=[5] then '' else [5] end
	set @t_esssno = case when '#non'=[6] then char(255) else [6] end
	set @t_item = case when '#non'=[7] then '' else [7] end
	set @t_detail = case when '#non'=[8] then '' else [8] end
	-----------------------------------------------------------------------------------	
	--解析要計算的種類
	declare @string nvarchar(max)
	declare @n int
	
	IF OBJECT_ID('tempdb..#item')is not null
	BEGIN
		set @cmd = 'drop table #item'
		EXECUTE sp_executesql @cmd
	END
	create table #item(
		noa nvarchar(20)
	)
	set @string = @t_item
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into #item select @string
			end
			break
		end
		insert into #item select LEFT(@string,@n-1)	
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	-----------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#z_anavccst02')is not null
	BEGIN
		drop table #z_anavccst02
	END
	create table #z_anavccst02(
		rr1 int,
		rr2 int,
		gno nvarchar(10),
		noa nvarchar(20),
		noq nvarchar(10),
		typea nvarchar(10),
		datea nvarchar(20),
		custno nvarchar(20),
		salesno nvarchar(20),
		uccgano nvarchar(20),
		uccganame nvarchar(max),
		productno nvarchar(20),
		product nvarchar(50),
		style nvarchar(20),
		uno nvarchar(30),
		csize nvarchar(max),
		class nvarchar(max),
		spec nvarchar(max),
		unit nvarchar(20),
		[weight] float,
		mount float,
		price float,
		total float,
		sprice float,
		stotal float,
		tranmoney float,
		profit float,
		rate float
	)
	insert into #z_anavccst02(gno,noa,noq,typea,custno,salesno,uccgano,uccganame,productno,product,style,uno,csize,class,spec,unit,[weight],mount,price,total,sprice,stotal,tranmoney)
	select '2',a.noa,a.noq,isnull(b.typea,'0'),b.custno,b.salesno,isnull(d.groupano,''),isnull(e.namea,''),a.productno,a.product,a.style,a.uno
	,replace(case when len(a.size)>0 then a.size when len(c.size)>0 then c.size else dbo.csize(a.style,a.dime,a.width,a.lengthb,a.radius) end,'~#$',char(39))
	,a.class,a.spec
	,a.unit,a.[weight],a.mount,a.price,a.total,isnull(c.sprice,0)
	,round(isnull(a.[weight],0) * isnull(c.sprice,0) * case when isnull(b.floata,0)=0 then 1 else b.floata end,0)
	,case when g.[weight]=0 then -99999 else round(b.tranmoney*a.[weight]/g.[weight],0) end
	from view_vccs a
	left join view_vcc b on a.accy=b.accy and a.noa=b.noa
	left join view_uccb c on a.uno=c.uno 
	left join ucc d on a.productno=d.noa
	left join uccga e on d.groupano=e.noa
	left join #item f on d.groupano=f.noa
	outer apply (select sum(isnull([weight],0)) [weight] from view_vccs where accy=a.accy and noa=a.noa and (len(isnull(uno,''))>0 or dime!=0)) g
	where b.noa is not null
	and (len(isnull(a.uno,''))>0 or a.dime!=0)
	and isnull(b.datea,'') between @t_bdate and @t_edate
	and isnull(b.custno,'') between @t_bcustno and @t_ecustno
	and ((len(isnull(d.groupano,''))=0 and exists(select * from #item where len(noa)=0)) or f.noa is not null)
	
	update #z_anavccst02 set [weight] = case when typea='1' then 1 else -1 end * [weight] 
		,mount = case when typea='1' then 1 else -1 end * [mount] 
		,total = case when typea='1' then 1 else -1 end * [total] 
		,stotal = case when typea='1' then 1 else -1 end * [stotal] 
	
	update #z_anavccst02 set profit = total-stotal-tranmoney,rate = case when total=0 then 0 else round((total-stotal-tranmoney)/total*100,0) end
	
	insert into #z_anavccst02(gno,uccgano,uccganame,noa,noq,[weight],mount,total,stotal,tranmoney,profit)
	select '1',uccgano,uccganame,'','',SUM([weight]),SUM(mount),SUM(total),SUM(stotal),SUM(tranmoney),SUM(profit) from #z_anavccst02 group by uccgano,uccganame
	
	insert into #z_anavccst02(gno,uccgano,noa,noq,[weight],mount,total,stotal,tranmoney,profit)
	select '3',CHAR(255),'','',SUM([weight]),SUM(mount),SUM(total),SUM(stotal),SUM(tranmoney),SUM(profit) from #z_anavccst02 where gno='2'
	
	update #z_anavccst02 set rr1=b.recno
	from #z_anavccst02 a
	left join (select ROW_NUMBER()over(order by total desc)recno,uccgano from #z_anavccst02 where gno='1') b on a.uccgano=b.uccgano
	
	update #z_anavccst02 set rr2=c.recno
	from #z_anavccst02 a
	left join (select ROW_NUMBER()over(partition by uccgano order by noa,noq) recno,noa,noq,uccgano from #z_anavccst02) c on a.noa=c.noa and a.noq=c.noq and a.uccgano=c.uccgano
	
	
	
	if(len(@t_detail)=0)
	begin
		delete #z_anavccst02 where gno='2'
	end
	else
	begin
		update #z_anavccst02 set gno='4' where gno='1'
	end
	
	update #z_anavccst02 set gno='5' where profit<0 and gno='1'
	update #z_anavccst02 set gno='6' where profit<0 and gno='4'
	
	select a.*
	,a.uccgano+'.'+a.uccganame uccga
	,a.productno ppno
	,b.comp
	,b.nick 
	,a.price a1
	,a.mount a2
	,a.[weight] a3
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) a4
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.stotal),1)),4,12)) a5
	,case when a.tranmoney=0 and gno='2' then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tranmoney),1)),4,12)) end a6
	,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.profit),1)),4,12)) a7
	,case when a.total=0 then 0 else cast(round(a.profit/a.total*100,2) as decimal(18,2)) end a8
	from #z_anavccst02 a
	left join cust b on a.custno=b.noa
	order by case when rr1 is null then char(255) else ''end,rr1,rr2
	
	drop table #z_anavccst02;

z_anavccst01:--z_anavccst01
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	
	declare @t_bdate nvarchar(10)= case when '#non'=[1] then '' else [1] end
	declare @t_edate nvarchar(10)= case when '#non'=[2] then char(255) else [2] end
	declare @t_bcustno nvarchar(20)= case when '#non'=[3] then '' else [3] end
	declare @t_ecustno nvarchar(20)= case when '#non'=[4] then char(255) else [4] end
	declare @t_bsssno nvarchar(20)= case when '#non'=[5] then '' else [5] end
	declare @t_esssno nvarchar(20)= case when '#non'=[6] then char(255) else [6] end
	declare @t_item nvarchar(max)= case when '#non'=[7] then '' else [7] end
	declare @t_detail nvarchar(max)= case when '#non'=[8] then '' else [8] end
	declare @t_kind nvarchar(max)= case when '#non'=[9] then '' else [9] end
	-----------------------------------------------------------------------------------
	-----------------------------------------------------------------------------------
	IF OBJECT_ID('tempdb..#z_anavccst01')is not null
	BEGIN
		drop table #z_anavccst01
	END
	create table #z_anavccst01(
		rr1 int,
		rr2 int,
		tablea nvarchar(20),
		gno nvarchar(10),
		noa nvarchar(20),
		noq nvarchar(10),
		typea nvarchar(10),
		datea nvarchar(20),
		custno nvarchar(20),
		salesno nvarchar(20),
		productno nvarchar(20),
		product nvarchar(50),
		style nvarchar(20),
		uno nvarchar(30),
		csize nvarchar(max),
		class nvarchar(max),
		spec nvarchar(max),
		unit nvarchar(20),
		[weight] decimal(20,3),
		mount float,
		price float,
		total float,
		sprice float,
		floata float,
		vcctranmoney float,
		vccweight float,
		stotal float,
		tranmoney float,
		profit float,
		rate float
	)
	create index no1 on #z_anavccst01(noa,noq,custno)
	create index no2 on #z_anavccst01(custno)

	--運費都平均分攤
	--出貨單 VCCS  只抓買賣的
	insert into #z_anavccst01(tablea,gno,noa,noq,typea,datea,custno,salesno,productno,product,style,uno,csize,class,spec,unit,[weight],mount,price,total
		,sprice,floata,vcctranmoney,vccweight)
	select 'vccs','2',a.noa,a.noq,isnull(b.typea,'0'),isnull(b.datea,'0'),b.custno,b.salesno,a.productno,a.product,a.style,a.uno
	,replace(case when len(a.size)>0 then a.size when len(c.size)>0 then c.size else dbo.csize(a.style,a.dime,a.width,a.lengthb,a.radius) end,'~#$',char(39))
	,a.class,a.spec
	,a.unit,a.[weight],a.mount
	,case when ISNULL(b.floata,0)=0 then a.price else ROUND(b.floata*a.price,2) end
	,a.total,isnull(c.sprice,0),b.floata,b.tranmoney,d.[weight]
	from view_vccs a
	left join view_vcc b on a.accy=b.accy and a.noa=b.noa
	left join view_uccb c on a.uno=c.uno
	outer apply (select sum(isnull([weight],0)) [weight] from view_vccs where accy=a.accy and noa=a.noa and (len(isnull(uno,''))>0 or dime!=0)) d
	where b.noa is not null
	and (len(isnull(a.uno,''))>0 or a.dime!=0) 
	and ISNULL(a.total,0)!=0
	and isnull(b.datea,'') between @t_bdate and @t_edate
	and isnull(b.custno,'') between @t_bcustno and @t_ecustno
	and (@t_kind='全部' or (@t_kind='鋼捲' and b.kind!='B2') or (@t_kind='鋼管' and b.kind='B2') )
	and (isnull(c.itype,'')='1' or upper(LEFT(a.uno,1)) between 'X' and 'Z')
	
	--抓退貨的成本單價
	update #z_anavccst01 set sprice=isnull(b.sprice,0)
	from #z_anavccst01 a
	outer apply(select top 1 z.sprice
		,replace(case when len(y.size)>0 then y.size when len(z.size)>0 then z.size else dbo.csize(y.style,y.dime,y.width,y.lengthb,y.radius) end,'~#$',char(39)) size
		from view_vcc x 
		left join view_vccs y on x.accy=y.accy and x.noa=y.noa
		left join view_uccb z on y.uno=z.uno
		where isnull(x.typea,'0')='1' 
		and a.custno=x.custno
		and a.datea>=x.datea
		and a.noa!=y.noa 
		order by x.datea,x.noa
		) b
	where a.typea!='1'
	and a.csize=b.size
	
	--領料單 GETS  有批號的才抓
	insert into #z_anavccst01(tablea,gno,noa,noq,typea,datea,custno,salesno,productno,product,style,uno,csize,class,spec,unit
		,[weight],mount,price,total
		,sprice,floata,vcctranmoney,vccweight)
	select 'gets','2',a.noa,a.noq,isnull(d.typea,'0'),isnull(d.datea,'0'),d.custno,d.salesno,a.productno,a.product,a.style,a.uno
		,replace(case when len(a.size)>0 then a.size when len(e.size)>0 then e.size else dbo.csize(a.style,a.dime,a.width,a.lengthb,a.radius) end,'~#$',char(39))
		,a.class,a.spec
		,c.unit,a.[gweight],a.gmount,c.price,ROUND(a.gweight*c.price,0)
		,isnull(e.sprice,0),d.floata,d.tranmoney,f.[gweight]
	from view_gets a
	left join view_get b on a.accy=b.accy and a.noa=b.noa
	left join view_vccs c on a.noa=c.noa and a.nor=c.noq
	left join view_vcc d on c.accy=d.accy and c.noa=d.noa
	left join view_uccb e on a.uno=e.uno
	outer apply (select sum(isnull([gweight],0)) [gweight] from view_gets where accy=a.accy and noa=a.noa and (len(isnull(uno,''))>0 or dime!=0)) f
	where d.noa is not null
	and len(isnull(a.uno,''))>0
	and isnull(d.datea,'') between @t_bdate and @t_edate
	and isnull(d.custno,'') between @t_bcustno and @t_ecustno
	and (@t_kind='全部' or (@t_kind='鋼捲' and d.kind!='B2') or (@t_kind='鋼管' and d.kind='B2') )

	--   有運費時,重量不可為0, -99999錯誤提示用 
	--   進貨的單價一律為台幣
	update #z_anavccst01 set stotal = round(isnull(a.[weight],0) * isnull(a.sprice,0),0)--* case when isnull(a.floata,0)=0 then 1 else a.floata end
		,tranmoney =case when a.[vccweight]=0 then -99999 else round(a.vcctranmoney*a.[weight]/a.[vccweight],0) end
	from #z_anavccst01 a
	
	update #z_anavccst01 set [weight] = case when typea='1' then 1 else -1 end * [weight] 
		,mount = case when typea='1' then 1 else -1 end * [mount] 
		,total = case when typea='1' then 1 else -1 end * [total] 
		,stotal = case when typea='1' then 1 else -1 end * [stotal] 
	
	update #z_anavccst01 set profit = total-stotal-tranmoney,rate = case when total=0 then 0 else round((total-stotal-tranmoney)/total*100,0) end
	

	insert into #z_anavccst01(gno,custno,noa,noq,[weight],mount,total,stotal,tranmoney,profit)
	select '1',custno,'','',SUM([weight]),SUM(mount),SUM(total),SUM(stotal),SUM(tranmoney),SUM(profit) from #z_anavccst01 group by custno
	
	insert into #z_anavccst01(gno,custno,noa,noq,[weight],mount,total,stotal,tranmoney,profit)
	select '3',CHAR(255),'','',SUM([weight]),SUM(mount),SUM(total),SUM(stotal),SUM(tranmoney),SUM(profit) from #z_anavccst01 where gno='2'
	
	update #z_anavccst01 set rr1=b.recno
	from #z_anavccst01 a
	left join (select ROW_NUMBER()over(order by total desc)recno,custno from #z_anavccst01 where gno='1') b on a.custno=b.custno

	update #z_anavccst01 set rr2=c.recno
	from #z_anavccst01 a
	left join (select ROW_NUMBER()over(partition by custno order by noa,noq) recno,noa,noq,custno from #z_anavccst01) c on a.noa=c.noa and a.noq=c.noq and a.custno=c.custno

	if(len(@t_detail)=0)
	begin
		delete #z_anavccst01 where gno='2'
	end
	else
	begin
		update #z_anavccst01 set gno='4' where gno='1'
	end
	
	update #z_anavccst01 set gno='5' where profit<0 and gno='1'
	update #z_anavccst01 set gno='6' where profit<0 and gno='4'
	
	select a.*
	,a.product pro
	,b.comp
	,b.nick 
	,dbo.getComma(a.price,-1)+'/'+a.unit a1
	,dbo.getComma(a.mount,-1) a2
	,case when a.gno='3' then CAST(cast(round(a.weight,0) as int) as nvarchar) else CAST(a.weight as nvarchar) end  a3
	,dbo.getComma(a.total,0) a4
	,dbo.getComma(a.stotal,0) a5
	,case when a.tranmoney=0 and gno='2' then '' else dbo.getComma(a.tranmoney,0) end a6
	,dbo.getComma(a.profit,0) a7
	,case when isnull(a.total,0)=0  then null else cast(round(isnull(a.profit,0)/isnull(a.total,0)*100,2) as decimal(20,2)) end a8
	
	--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.total),1)),4,12)) a4
	--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.stotal),1)),4,12)) a5
	--,case when a.tranmoney=0 and gno='2' then '' else reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.tranmoney),1)),4,12)) end a6
	--,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,a.profit),1)),4,12)) a7
	--,case when isnull(a.total,0)=0  then null else cast(round(isnull(a.profit,0)/isnull(a.total,0)*100,2) as decimal(20,2)) end a8
	,ghref = 'z_unost?$uno?'
	from #z_anavccst01 a
	left join cust b on a.custno=b.noa
	order by case when rr1 is null then char(255) else ''end,rr1,rr2
	drop table #z_anavccst01;

z_anavccst1:--z_anavccst1
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
declare @t_groupano nvarchar(30)
set @t_groupano = case when '#non'=[17] then '' else (case when [17] = ' ' then '' else [17] end) end
declare @tmp table(
	gno nvarchar(1),
	rankno int identity(1,1),
	salesno nvarchar(30),
	salesname nvarchar(50),
	mount float,
	weight float,
	total float,
	maori float,
	perscnt float
)
insert into @tmp
select
	'0',a.salesno,a.sales,sum(b.mount),sum(b.weight),sum(b.total),sum(b.total-(b.mount*isnull(c.price,0))),0
from view_vcc[1] a
left join view_vccs[1] b on a.noa = b.noa
left join costs[1] c on b.productno = c.productno and left(a.datea,6) = c.mon
left join view_ucaucc d on b.productno = d.noa
where isnull(a.salesno,'') != '' and (a.datea between @t_bdate and @t_edate) and
		  (len(@t_groupano)=0 or d.groupano = @t_groupano)   	    	  
group by a.salesno,a.sales
order by sum(b.total) desc,sum(b.mount),sum(b.weight)
insert into @tmp
	select '1','','',sum(mount),sum(weight),sum(total),sum(maori),0 from @tmp
declare @totMoney float
select @totMoney = (select maori from @tmp where gno = '1')
update @tmp set perscnt = case when isnull(@totMoney,0) = 0 then 0 else round((maori/@totMoney)*100,2) end
select
	gno,rankno,salesno,salesname,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weight),1)),4,12)) weight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,maori),1)),4,12)) maori,
	cast(perscnt as nvarchar) + '%' perscnt
from @tmp order by rankno;
---************************************************************************************
z_anavccst2:--z_anavccst2
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
declare @t_groupano nvarchar(30)
set @t_groupano = case when '#non'=[17] then '' else (case when [17] = ' ' then '' else [17] end) end
declare @tmp table(
	gno nvarchar(1),
	rankno int identity(1,1),
	custno nvarchar(30),
	custs nvarchar(50),
	mount float,
	weight float,
	total float,
	maori float,
	perscnt float
)
insert into @tmp
select
	'0',a.custno,d.comp,sum(b.mount),sum(b.weight),sum(b.total),sum(b.total-(b.mount*isnull(c.price,0))),0
from view_vcc[1] a
left join view_vccs[1] b on a.noa = b.noa
left join costs[1] c on b.productno = c.productno and left(a.datea,6) = c.mon
left join cust d on a.custno = d.noa
left join view_ucaucc e on b.productno = d.noa
where isnull(a.custno,'') != '' and (a.datea between @t_bdate and @t_edate) and
		  (len(@t_groupano)=0 or e.groupano = @t_groupano)   	    	  
group by a.custno,d.comp
order by sum(b.total) desc,sum(b.mount),sum(b.weight)
insert into @tmp
	select '1','','',sum(mount),sum(weight),sum(total),sum(maori),0 from @tmp
declare @totMoney float
select @totMoney = (select maori from @tmp where gno = '1')
update @tmp set perscnt = case when isnull(@totMoney,0) = 0 then 0 else round((maori/@totMoney)*100,2) end
select
	gno,rankno,custno,custs,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weight),1)),4,12)) weight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,maori),1)),4,12)) maori,
	cast(perscnt as nvarchar) + '%' perscnt
from @tmp order by rankno;
---************************************************************************************
z_anavccst3:--z_anavccst3
declare @t_bdate nvarchar(10)
declare @t_edate nvarchar(10)
set @t_bdate = case when '#non'=[2] then '' else [2] end
set @t_edate = case when '#non'=[3] then char(255) else [3] end
declare @t_groupano nvarchar(30)
set @t_groupano = case when '#non'=[17] then '' else (case when [17] = ' ' then '' else [17] end) end
declare @tmp table(
	gno nvarchar(1),
	rankno int identity(1,1),
	productno nvarchar(30),
	products nvarchar(50),
	mount float,
	weight float,
	total float,
	maori float,
	perscnt float
)
insert into @tmp
select
	'0',b.productno,b.product,sum(b.mount),sum(b.weight),sum(b.total),sum(b.total-(b.mount*isnull(c.price,0))),0
from view_vcc[1] a
left join view_vccs[1] b on a.noa = b.noa
left join costs[1] c on b.productno = c.productno and left(a.datea,6) = c.mon
left join view_ucaucc d on b.productno = d.noa
where isnull(b.productno,'') != '' and (a.datea between @t_bdate and @t_edate) and
		  (len(@t_groupano)=0 or d.groupano = @t_groupano)   	    	  
group by b.productno,b.product
order by sum(b.total) desc,sum(b.mount),sum(b.weight)
insert into @tmp
	select '1','','',sum(mount),sum(weight),sum(total),sum(maori),0 from @tmp
declare @totMoney float
select @totMoney = (select maori from @tmp where gno = '1')
update @tmp set perscnt = case when isnull(@totMoney,0) = 0 then 0 else round((maori/@totMoney)*100,2) end
select
	gno,rankno,productno,products,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,mount),1)),4,12)) mount,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,weight),1)),4,12)) weight,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) total,
	reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,maori),1)),4,12)) maori,
	cast(perscnt as nvarchar) + '%' perscnt
from @tmp order by rankno;
---************************************************************************************
