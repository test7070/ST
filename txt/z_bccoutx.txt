z_bccoutx1:--z_bccoutx1
declare @t_bbccno nvarchar(20)
declare @t_ebccno nvarchar(20)
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
set @t_bdate = case when '#non' = [4] then '' else [4] end
set @t_edate = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bbccno = case when '#non' = [6] then '' else [6] end
set @t_ebccno = case when '#non' = [7] then CHAR(255) else [7] end
declare @t_pageline int
set @t_pageline = 32
------------------------------------------------------------------------------------------------------
declare @tmp  table(
		gno nvarchar(1),
		idno int identity(0,1),
		orderno int,
		pageno int,
		typea nvarchar(50),
		noa nvarchar(50),
		noq nvarchar(20),
		ordewno nvarchar(50),
		datea nvarchar(20),
		custno nvarchar(50),
		comp nvarchar(100),
		bccno nvarchar(50),
		bccname nvarchar(100),
		mount float,
		weight float,
		unit nvarchar(50),
		price float,
		total float,
		carno nvarchar(50),
		memo nvarchar (MAX)
)

	insert into @tmp
	select '0',ROW_NUMBER()over(order by a.datea,a.noa,b.noq),0
	,(select top 1 typea from bccinxs where bccno=b.bccno)
	,a.noa,b.noq,b.ordewno,a.datea,a.custno,a.comp,b.bccno,b.bccname,b.mount,b.weight,b.unit
	,b.price,b.total,a.carno,b.memo
	from vccw a
	left join vccws b on a.noa = b.noa
	where (a.datea between @t_bdate and @t_edate) and
	(b.bccno between @t_bbccno and @t_ebccno) 
	order by a.datea,a.noa,b.noq
	
	
	insert into @tmp (gno,datea,mount,weight,total,orderno,pageno)
	select '1',char(255),sum(mount),sum(weight),sum(total),0,0
	from @tmp
		
	--頁數---------------------------------------------------------------------
	declare @a_count int
	declare @idno int
	declare @k int = 0 ----差幾頁
	declare @pageCount int
	declare @orderno int
	declare @pageno int
	
	declare cursor_table cursor for
	select count(*),max(orderno) from @tmp
	open cursor_table
	fetch next from cursor_table
	into @a_count,@orderno
	while(@@FETCH_STATUS <> -1)
	begin		
		if(@a_count > @t_pageline)
		begin
			set @k = CEILING((cast(@a_count as float)/@t_pageline))
			while(@k > 0)
			begin
				update @tmp set pageno = @k where orderno > ((@k-1)*@t_pageline) and orderno <= (@k*@t_pageline)
				set @k -=1
			end
		end
		fetch next from cursor_table
		into @a_count,@orderno
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select distinct max(orderno),pageno,min(idno),count(*) from @tmp group by pageno
	open cursor_table
	fetch next from cursor_table
	into @orderno,@pageno,@idno,@a_count
	while(@@FETCH_STATUS <> -1)
	begin		
		set @k = @t_pageline -(@a_count%@t_pageline)
		set @pageCount = @a_count/@t_pageline
		if(@k < @t_pageline and (@pageCount =0))
		begin
			while(@k > 0)
			begin
				if NOT(@k = @t_pageline -(@a_count%@t_pageline))
					insert into @tmp(gno,orderno,pageno,datea,noa,bccno)
					select '2',(@orderno+1),@pageno,char(255),CHAR(255),CHAR(255) from @tmp where idno = @idno
					
				set @k = @k-1
				set @orderno = @orderno +1
			end
		end
		fetch next from cursor_table
		into @orderno,@pageno,@idno,@a_count
	end
	close cursor_table
	deallocate cursor_table
	
select 
dbo.getComma(mount,[1]) mount,
dbo.getComma(weight,[2]) weight,
dbo.getComma(price,[3]) price,
dbo.getComma(total,0) total,
* from @tmp  
order by datea,noa,noq,gno;
-----------------------------------------------------------------------------------------------------------------