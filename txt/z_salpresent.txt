z_salpresentst1:--z_salpresentst1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(20)
declare @t_esssno nvarchar(20)
set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end 
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end
declare @r_len int=[14]

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(50),
		sssno nvarchar(50),
		namea nvarchar(50),
		clockin nvarchar(50),
		clockout nvarchar(50),
		w133 float,
		w166 float,
		w100 float,
		spec float,
		memo nvarchar(MAX),
		day1 float,
		day2 float
)

declare @day1 float=0
declare @datea nvarchar(MAX)=@t_bdate
declare @t_weekday nvarchar(10)--星期
if(@r_len!=4)
begin
	while (@datea<=@t_edate)
	begin
		set @datea=cast(cast(left(@datea,3) as int)+1911 as nvarchar(10))
			+RIGHT(@datea,6)
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) not in (select noa from holiday where isnull(iswork,0)=0)
			)or (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
			
		set @datea= CONVERT (VARCHAR(7), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),12 )+0890000
		set @datea=left(@datea,3)+'/'+substring(@datea,4,2)+'/'+right(@datea,2)
	end
end
else
begin
	while (@datea<=@t_edate)
	begin
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and @datea not in (select noa from holiday where isnull(iswork,0)=0)
			)or @datea in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
			
		set @datea= replace(CONVERT (VARCHAR(10), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),20 ),'-','/')
	end
end

insert into @tmp 
select '0' gno,a.noa,a.sssno,a.namea,a.clockin,a.clockout,a.w133,a.w166,a.w100,a.hr_special,a.memo,@day1,0 
from salpresents a left join sss b on a.sssno = b.noa
where (a.noa between @t_bdate and @t_edate)
and (a.sssno between @t_bsssno and @t_esssno)
and (len(b.outdate)=0 or b.outdate>=@t_bdate)

update a 
set day2=(select count(*) from @tmp where sssno=a.sssno and (isnull(clockin,'')!='' or isnull(clockout,'')!='' ))
from @tmp a

insert into @tmp (gno,noa,sssno,w133,w166,w100,spec) 
select '1','999/99/99',sssno,sum(w133),sum(w166),sum(w100),sum(spec) from @tmp group by sssno 

if((select count(*) from acomp where acomp like '%智勝%')>0)
begin
	select a.gno,a.noa,a.sssno,a.namea,a.clockin,a.clockout,a.w133,a.w166,a.w100,a.spec
	,dbo.charbr(a.memo,22)memo,a.day1,a.day2
	,'salpresent?noa=$noa' qhref
	from @tmp a left join sss b on a.sssno=b.noa 
	order by case when b.typea='雇主' then 0 when b.typea='員工-辦公室' then 1 when b.typea='員工-現場早班' then 2 when b.typea='員工-現場晚班' then 3	else 4 end 
	,a.sssno,a.noa,a.gno
end
else
begin
	select gno,noa,sssno,namea,clockin,clockout,w133,w166,w100,spec,dbo.charbr(memo,22)memo,day1,day2
	,'salpresent?noa=$noa' qhref
	from @tmp order by sssno,noa,gno
end
;
--*****************************************************************
z_salpresentst2:--z_salpresentst2
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(20)
declare @t_esssno nvarchar(20)
set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(50),
		sssno nvarchar(50),
		namea nvarchar(50),
		clockin nvarchar(50),
		clockout nvarchar(50),
		w133 float,
		w166 float,
		w100 float,
		spec float,
		memo nvarchar(MAX)
)
insert into @tmp 
select '0' gno,a.noa,a.sssno,a.namea,a.clockin,a.clockout,a.w133,a.w166,a.w100,a.hr_special,a.memo 
from salpresents a left join sss b on a.sssno = b.noa
where (a.noa between @t_bdate and @t_edate)  
and (a.sssno between @t_bsssno and @t_esssno)
and (len(b.outdate)=0 or b.outdate>=@t_bdate)

insert into @tmp (gno,noa,w133,w166,w100,spec) 
select '1',noa,sum(w133),sum(w166),sum(w100),sum(spec) from @tmp group by noa

if((select count(*) from acomp where acomp like '%智勝%')>0)
begin
	select a.* from @tmp a left join sss b on a.sssno=b.noa 
	order by a.noa,gno
	,case when b.typea='雇主' then 0 when b.typea='員工-辦公室' then 1 when b.typea='員工-現場早班' then 2 when b.typea='員工-現場晚班' then 3	else 4 end 
	,sssno
end
else
begin
	select * from @tmp order by noa,gno,sssno
end
;
---------------------------------------------------------------------------------------------------------------------------------------------
z_salpresentst3:--z_salpresentst3
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(50)
declare @t_esssno nvarchar(50)
declare @t_bpartno nvarchar(50)
declare @t_epartno nvarchar(50)
declare @t_workhour nvarchar(50)
declare @t_late nvarchar(50)
declare @t_early nvarchar(50)
declare @t_bresthour nvarchar(50)
declare @t_eresthour nvarchar(50)
declare @t_typea nvarchar(50)

set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bpartno = case when '#non' = [6] then '' else [6] end
set @t_epartno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_workhour = case when '#non' = [8] then '168' else [8] end
set @t_late = case when '#non' = [9] then '0' else [9] end
set @t_early = case when '#non' = [10] then '0' else [10] end
set @t_bresthour = case when '#non' = [11] then '12:00' else [11] end
set @t_eresthour = case when '#non' = [12] then '13:00' else [12] end
set @t_typea = case when '#non' = [13] then '' else [13] end
-----------------------------------------------------------------------------------------------------------------
declare @tmp table( 
	gno nvarchar(1), 
	sssno nvarchar(50), 
	namea nvarchar(50), 
	partno nvarchar(50), 
	part nvarchar(50), 
	hours float, 
	late float, 
	early float, 
	forget float, 
	vaca float,
	svaca float,
	fulls nvarchar(50) 
) 

--插入員工
insert @tmp(gno,sssno,namea,partno,part,svaca)
select '0',noa,namea,partno,part 
,(select SUM(hr_used) from salvacause where sssno=a.noa and bdate between @t_bdate and @t_edate and hname like '%特休%')
from sss a where noa between @t_bsssno and @t_esssno
and isnull(partno,'') between @t_bpartno and @t_epartno
and (typea=@t_typea or len(@t_typea)=0)
and (len(outdate)=0 or outdate>=@t_bdate)

declare @tmpa table( 
	sssno nvarchar(50), 
	hours float, 
	late float, 
	early float, 
	forget float,
	vaca float
)

insert @tmpa
select sssno
,sum(round((cast(datediff(MINUTE,cast(cast(left(a.noa,3)as int)+1911 as nvarchar(10))+right(a.noa,6)+' '+a.clockin,cast(cast(left((case when a.clockout<a.clockin then dbo.q_cdn(a.noa,1) else a.noa end),3)as int)+1911 as nvarchar(10))+right((case when a.clockout<a.clockin then dbo.q_cdn(a.noa,1) else a.noa end),6)+' '+a.clockout) as float)/60),1)
-(case when a.clockin>@t_bresthour or a.clockout<@t_eresthour then 0 else round((cast(datediff(MINUTE,cast(cast(left('103/01/01',3)as int)+1911 as nvarchar(10))+right('103/01/01',6)+' '+@t_bresthour,cast(cast(left((case when @t_eresthour<@t_bresthour then dbo.q_cdn('103/01/01',1) else '103/01/01' end),3)as int)+1911 as nvarchar(10))+right((case when @t_eresthour<@t_bresthour then dbo.q_cdn('103/01/01',1) else '103/01/01' end),6)+' '+@t_eresthour) as float)/60),1) end))
,sum(case when CHARINDEX('遲到',a.memo)>0 then 1 else 0 end)
,sum(case when CHARINDEX('早退',a.memo)>0 then 1 else 0 end),0,0
from salpresents a left join sss b on a.sssno=b.noa
where a.noa between @t_bdate and @t_edate and a.clockin!='' and a.clockout!=''
and a.sssno between @t_bsssno and @t_esssno
and isnull(b.partno,'') between @t_bpartno and @t_epartno
and (b.typea=@t_typea or len(@t_typea)=0)
and (len(b.outdate)=0 or b.outdate>=@t_bdate)
group by sssno

--排除假日
update a 
set forget=(select COUNT(*) from salpresents sa left join salpresent sb on sa.noa=sb.noa 
where sa.sssno=a.sssno and (sa.noa between @t_bdate and @t_edate) 
and (((isnull(sa.clockin,'')='' or isnull(sa.clockin,'')='') and sb.holiday=0) 
or (sb.holiday=1 and charindex('打卡資料錯誤',memo)>0))
and not exists (select * from salvacause where sssno=a.sssno and hr_used>=8 and sa.noa between bdate and edate ) ) 
,vaca=(select COUNT(*) from salvacause where sssno=a.sssno and hr_used>=8 and (bdate between @t_bdate and @t_edate) and (hname='事假' or hname='病假' or hname='生理假'))
--,apvh=isnull((select sum(hours) from saladd where isnull(isapv,0)=1 and sssno=a.sssno and datea between @t_bdate and @t_edate ),0)
from @tmpa a 
--outer apply (select bdate,edate from salvacause where sssno=a.sssno and hr_used>=8 and (bdate between @t_bdate and @t_edate))b


--沒有打卡的資料就保持null
update a
set hours=b.hours,late=b.late,early=b.early,forget=b.forget,vaca=b.vaca
from @tmp a left join @tmpa b on a.sssno=b.sssno

update @tmp
set fulls=(case when cast(@t_workhour as float)<=hours+isnull(svaca,0) and cast(@t_late as float)>=late and cast(@t_early as float)>=early and isnull(vaca,0)=0 then 'V' else '' end)
where hours is not null

if((select count(*) from acomp where acomp like '%智勝%')>0)
begin
	select a.* from @tmp a left join sss b on a.sssno=b.noa 
	order by case when b.typea='雇主' then 0 when b.typea='員工-辦公室' then 1 when b.typea='員工-現場早班' then 2 when b.typea='員工-現場晚班' then 3	else 4 end 
	,sssno
end
else
begin
	select * from @tmp order by sssno
end
;
---------------------------------------------------------------------------------------------------------------------------------------------------
z_salpresentfe1:--z_salpresentfe1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(20)
declare @t_esssno nvarchar(20)
set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end 
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end
declare @r_len int=[14]

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(50),
		week nvarchar(50),
		sssno nvarchar(50),
		namea nvarchar(50),
		clockin nvarchar(50),
		clockout nvarchar(50),
		restin nvarchar(50),
		restout nvarchar(50),
		w133 float,
		w166 float,
		w100 float,
		spec float,
		memo nvarchar(MAX),
		day1 float,
		day2 float,
		whour float,
		twhour float
)

declare @day1 float=0
declare @day6 float=0
declare @datea nvarchar(MAX)=@t_bdate
declare @t_weekday nvarchar(10)--星期
if(@r_len!=4)
begin
	while (@datea<=@t_edate)
	begin
		set @datea=cast(cast(left(@datea,3) as int)+1911 as nvarchar(10))+RIGHT(@datea,6)
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) not in (select noa from holiday where isnull(iswork,0)=0)
			)or (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
		
		if((@t_weekday!=0
			and (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) not in (select noa from holiday where isnull(iswork,0)=0)
			)or (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) in (select noa from holiday where isnull(iswork,0)=1) )
			set @day6=@day6+1
			
		set @datea= CONVERT (VARCHAR(7), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),12 )+0890000
		set @datea=left(@datea,3)+'/'+substring(@datea,4,2)+'/'+right(@datea,2)
	end
end
else
begin
	while (@datea<=@t_edate)
	begin
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and @datea not in (select noa from holiday where isnull(iswork,0)=0)
			)or @datea in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
		if((@t_weekday!=0
			and @datea not in (select noa from holiday where isnull(iswork,0)=0)
			)or @datea in (select noa from holiday where isnull(iswork,0)=1) )
			set @day6=@day6+1
			
		set @datea= replace(CONVERT (VARCHAR(10), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),20 ),'-','/')
	end
end

insert into @tmp 
select '0' gno,a.noa,DATEPART(WEEKDAY,case when @r_len=3 then dbo.ChineseEraName2AD(a.noa) else a.noa end)-1
,a.sssno,a.namea,a.clockin,a.clockout,a.restin,a.restout,a.w133,a.w166,a.w100,a.hr_special,a.memo
,case when b.typea='廠務' or b.typea='司機' then @day6 else @day1 end,0
,case when b.typea='廠務' then 7 else 8 end-
case when clockin<=case when b.typea='廠務' then '07:00' else '08:00' end and 
clockout>=case when b.typea='廠務' then '16:00' else '17:00' end
then isnull((select top 1 hour from salvacause where a.noa between bdate and edate and sssno=a.sssno),0) else 0 end
,case when a.clockin='' or a.clockout='' then 0 else 
(cast(datediff(MINUTE,cast(cast(left(a.noa,3)as int)+1911 as nvarchar(10))+right(a.noa,6)+' '+
case when a.clockin<case when b.typea='廠務' then '07:00' else '08:00' end then case when b.typea='廠務' then '07:00' else '08:00' end else a.clockin end,
cast(cast(left(a.noa,3)as int)+1911 as nvarchar(10))+right(a.noa,6)+' '+
case when a.clockout>case when b.typea='廠務' then '16:00' else '17:00' end then case when b.typea='廠務' then '16:00' else '17:00' end else a.clockout end
) as float)/60) -case when clockin<'12:00' and clockout>'13:00' then 1 else 0 end
end-case when clockin<=case when b.typea='廠務' then '07:00' else '08:00' end and 
clockout>=case when b.typea='廠務' then '16:00' else '17:00' end
then isnull((select top 1 hour from salvacause where a.noa between bdate and edate and sssno=a.sssno),0) else 0 end
from salpresents a left join sss b on a.sssno = b.noa
where (a.noa between @t_bdate and @t_edate)
and (a.sssno between @t_bsssno and @t_esssno)

update a 
set day2=(select count(*) from @tmp where sssno=a.sssno and (isnull(clockin,'')!='' or isnull(clockout,'')!='' ))
from @tmp a

update @tmp
set week=case when week='1' then '一' when week='2' then '二' 
when week='3' then '三' when week='4' then '四' when week='5' then '五' 
when week='6' then '六' else '日' end

insert into @tmp (gno,noa,sssno,w133,w166,w100,spec) 
select '1','999/99/99',sssno,sum(w133),sum(w166),sum(w100),sum(spec) from @tmp group by sssno 

select gno,noa,week,sssno,namea,clockin,clockout,restin,restout,w133,w166,w100,spec,dbo.charbr(memo,21)memo,day1,day2
,'salpresent?noa=$noa' qhref
,case when twhour>whour then whour else case when round(twhour,1)<=0 then null else round(twhour,1) end end whour
from @tmp a outer apply (select typea from sss where noa=a.sssno)b order by sssno,noa,gno 
;
--*****************************************************************
z_salpresentfe2:--z_salpresentfe2
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(20)
declare @t_esssno nvarchar(20)
set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end
declare @r_len int=[14]

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(50),
		week nvarchar(50),
		sssno nvarchar(50),
		namea nvarchar(50),
		clockin nvarchar(50),
		clockout nvarchar(50),
		restin nvarchar(50),
		restout nvarchar(50),
		w133 float,
		w166 float,
		w100 float,
		spec float,
		memo nvarchar(MAX),
		whour float,
		twhour float
)
insert into @tmp 
select '0' gno,a.noa,DATEPART(WEEKDAY,case when @r_len=3 then dbo.ChineseEraName2AD(a.noa) else a.noa end)-1
,a.sssno,a.namea,a.clockin,a.clockout,a.restin,a.restout,a.w133,a.w166,a.w100,a.hr_special,a.memo 
,case when b.typea='廠務' then 7 else 8 end-
case when clockin<=case when b.typea='廠務' then '07:00' else '08:00' end and 
clockout>=case when b.typea='廠務' then '16:00' else '17:00' end
then isnull((select top 1 hour from salvacause where a.noa between bdate and edate and sssno=a.sssno),0) else 0 end
,case when a.clockin='' or a.clockout='' then 0 else 
(cast(datediff(MINUTE,cast(cast(left(a.noa,3)as int)+1911 as nvarchar(10))+right(a.noa,6)+' '+
case when a.clockin<case when b.typea='廠務' then '07:00' else '08:00' end then case when b.typea='廠務' then '07:00' else '08:00' end else a.clockin end,
cast(cast(left(a.noa,3)as int)+1911 as nvarchar(10))+right(a.noa,6)+' '+
case when a.clockout>case when b.typea='廠務' then '16:00' else '17:00' end then case when b.typea='廠務' then '16:00' else '17:00' end else a.clockout end
) as float)/60) -case when clockin<'12:00' and clockout>'13:00' then 1 else 0 end
end-case when clockin<=case when b.typea='廠務' then '07:00' else '08:00' end and 
clockout>=case when b.typea='廠務' then '16:00' else '17:00' end
then isnull((select top 1 hour from salvacause where a.noa between bdate and edate and sssno=a.sssno),0) else 0 end
from salpresents a left join sss b on a.sssno = b.noa
where (a.noa between @t_bdate and @t_edate)  
and (a.sssno between @t_bsssno and @t_esssno)

update @tmp
set week=case when week='1' then '一' when week='2' then '二' 
when week='3' then '三' when week='4' then '四' when week='5' then '五' 
when week='6' then '六' else '日' end

insert into @tmp (gno,noa,w133,w166,w100,spec) 
select '1',noa,sum(w133),sum(w166),sum(w100),sum(spec) from @tmp group by noa

select noa xnoa ,noa +'('+week+')' noa,* 
,case when twhour>whour then whour else case when round(twhour,1)<=0 then null else round(twhour,1) end end whour
from @tmp a outer apply (select typea from sss where noa=a.sssno)b 
order by xnoa,gno,sssno
;
------------------------------------------------------------------------------------------------------------------------------------
z_salpresentst_dj1:--z_salpresentst_dj1
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(20)
declare @t_esssno nvarchar(20)
set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end 
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end
declare @r_len int=[14]

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(50),
		sssno nvarchar(50),
		namea nvarchar(50),
		clockin nvarchar(50),
		clockout nvarchar(50),
		w133 float,
		w166 float,
		w100 float,
		spec float,
		apvh float,
		memo nvarchar(MAX),
		day1 float,
		day2 float
)

declare @day1 float=0
declare @datea nvarchar(MAX)=@t_bdate
declare @t_weekday nvarchar(10)--星期
if(@r_len!=4)
begin
	while (@datea<=@t_edate)
	begin
		set @datea=cast(cast(left(@datea,3) as int)+1911 as nvarchar(10))
			+RIGHT(@datea,6)
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) not in (select noa from holiday where isnull(iswork,0)=0)
			)or (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
			
		set @datea= CONVERT (VARCHAR(7), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),12 )+0890000
		set @datea=left(@datea,3)+'/'+substring(@datea,4,2)+'/'+right(@datea,2)
	end
end
else
begin
	while (@datea<=@t_edate)
	begin
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and @datea not in (select noa from holiday where isnull(iswork,0)=0)
			)or @datea in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
			
		set @datea= replace(CONVERT (VARCHAR(10), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),20 ),'-','/')
	end
end

insert into @tmp 
select '0' gno,a.noa,a.sssno,a.namea,a.clockin,a.clockout,a.w133,a.w166,a.w100,a.hr_special
,isnull((select sum(hours) from saladd where isnull(isapv,0)=1 and sssno=a.sssno and datea=a.noa),0)
,a.memo,@day1,0 
from salpresents a left join sss b on a.sssno = b.noa
where (a.noa between @t_bdate and @t_edate)
and (a.sssno between @t_bsssno and @t_esssno)
and (len(b.outdate)=0 or b.outdate>=@t_bdate)

update a 
set day2=(select count(*) from (select noa from @tmp where sssno=a.sssno and (isnull(clockin,'')!='' or isnull(clockout,'')!='') group by noa)tmp)
from @tmp a

insert into @tmp (gno,noa,sssno,w133,w166,w100,spec,apvh) 
select '1','999/99/99',sssno,sum(w133),sum(w166),sum(w100),sum(spec),sum(apvh) from @tmp group by sssno 

select gno,noa,sssno,namea,clockin,clockout,w133,w166,w100,spec,apvh,dbo.charbr(memo,22)memo,day1,day2
,'salpresent?noa=$noa' qhref
from @tmp order by sssno,noa,gno 
;
--*****************************************************************
z_salpresentst_dj2:--z_salpresentst_dj2
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(20)
declare @t_esssno nvarchar(20)
set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end

declare @tmp table(
		gno nvarchar(1),
		noa nvarchar(50),
		sssno nvarchar(50),
		namea nvarchar(50),
		clockin nvarchar(50),
		clockout nvarchar(50),
		w133 float,
		w166 float,
		w100 float,
		spec float,
		apvh float,
		memo nvarchar(MAX)
)
insert into @tmp 
select '0' gno,a.noa,a.sssno,a.namea,a.clockin,a.clockout,a.w133,a.w166,a.w100,a.hr_special
,isnull((select sum(hours) from saladd where isnull(isapv,0)=1 and sssno=a.sssno and datea=a.noa),0),a.memo 
from salpresents a left join sss b on a.sssno = b.noa
where (a.noa between @t_bdate and @t_edate)  
and (a.sssno between @t_bsssno and @t_esssno)
and (len(b.outdate)=0 or b.outdate>=@t_bdate)

insert into @tmp (gno,noa,w133,w166,w100,spec,apvh) 
select '1',noa,sum(w133),sum(w166),sum(w100),sum(spec),sum(apvh) from @tmp group by noa
select * from @tmp order by noa,gno,sssno
;
---------------------------------------------------------------------------------------------------------------------------------------------
z_salpresentst_dj3:--z_salpresentst_dj3
declare @t_bdate nvarchar(20)
declare @t_edate nvarchar(20)
declare @t_bsssno nvarchar(50)
declare @t_esssno nvarchar(50)
declare @t_bpartno nvarchar(50)
declare @t_epartno nvarchar(50)
declare @t_workhour nvarchar(50)
declare @t_late nvarchar(50)
declare @t_early nvarchar(50)
declare @t_bresthour nvarchar(50)
declare @t_eresthour nvarchar(50)
declare @t_typea nvarchar(50)
declare @r_len int=[14]

set @t_bdate = case when '#non' = [1] then '' else [1] end
set @t_edate = case when '#non' = [2] then CHAR(255) else [2] end
set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bpartno = case when '#non' = [6] then '' else [6] end
set @t_epartno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_workhour = case when '#non' = [8] then '168' else [8] end
set @t_late = case when '#non' = [9] then '0' else [9] end
set @t_early = case when '#non' = [10] then '0' else [10] end
set @t_bresthour = case when '#non' = [11] then '12:00' else [11] end
set @t_eresthour = case when '#non' = [12] then '13:00' else [12] end
set @t_typea = case when '#non' = [13] then '' else [13] end
-----------------------------------------------------------------------------------------------------------------
declare @day1 float=0
declare @datea nvarchar(MAX)=@t_bdate
declare @t_weekday nvarchar(10)--星期
if(@r_len!=4)
begin
	while (@datea<=@t_edate)
	begin
		set @datea=cast(cast(left(@datea,3) as int)+1911 as nvarchar(10))
			+RIGHT(@datea,6)
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) not in (select noa from holiday where isnull(iswork,0)=0)
			)or (right('000'+cast(cast(left(@datea,4) as int)-1911 as nvarchar(10)),3)+RIGHT(@datea,6)) in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
			
		set @datea= CONVERT (VARCHAR(7), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),12 )+0890000
		set @datea=left(@datea,3)+'/'+substring(@datea,4,2)+'/'+right(@datea,2)
	end
end
else
begin
	while (@datea<=@t_edate)
	begin
		set @t_weekday=DATEPART(WEEKDAY, @datea)-1
		
		if((@t_weekday!=6 and @t_weekday!=0
			and @datea not in (select noa from holiday where isnull(iswork,0)=0)
			)or @datea in (select noa from holiday where isnull(iswork,0)=1) )
			set @day1=@day1+1
			
		set @datea= replace(CONVERT (VARCHAR(10), DATEADD(d, DATEDIFF(d,0,@datea)+1,0),20 ),'-','/')
	end
end


declare @tmp table( 
	gno nvarchar(1), 
	sssno nvarchar(50), 
	namea nvarchar(50), 
	partno nvarchar(50), 
	part nvarchar(50), 
	days float,--應出勤日數
	sdays float,--打卡日數
	hours float, 
	addh float,
	apvh float,
	late float, 
	early float, 
	forget float, 
	vaca float,
	svaca float,
	fulls nvarchar(50) 
) 

--插入員工
insert @tmp(gno,sssno,namea,partno,part,days,sdays,svaca)
select '0',noa,namea,partno,part,@day1 
,isnull((select count(*) from(select noa from salpresents where noa between @t_bdate and @t_edate and sssno=a.noa and (len(clockin)>0 or len(clockout)>0) group by noa) tmp),'')
,(select SUM(hr_used) from salvacause where sssno=a.noa and bdate between @t_bdate and @t_edate 
and (hname not like '%事假%' and hname not like '%普通傷%' and hname not like '%病假%' and hname not like '%曠職%'))
from sss a where noa between @t_bsssno and @t_esssno
and isnull(partno,'') between @t_bpartno and @t_epartno
and (typea=@t_typea or len(@t_typea)=0)
and (len(outdate)=0 or outdate>=@t_bdate)

declare @tmpa table( 
	sssno nvarchar(50), 
	hours float, 
	addh float,
	apvh float,
	late float, 
	early float, 
	forget float,
	vaca float
)

insert @tmpa
select sssno
,sum(round((cast(datediff(MINUTE,cast(cast(left(a.noa,3)as int)+1911 as nvarchar(10))+right(a.noa,6)+' '+case when a.clockin<'08:00' then '08:00' else a.clockin end,cast(cast(left((case when a.clockout<a.clockin then dbo.q_cdn(a.noa,1) else a.noa end),3)as int)+1911 as nvarchar(10))+right((case when a.clockout<a.clockin then dbo.q_cdn(a.noa,1) else a.noa end),6)+' '+case when '17:00'<a.clockout then '17:00' else a.clockout end ) as float)/60),1)
-(case when a.clockin>@t_bresthour or a.clockout<@t_eresthour then 0 else round((cast(datediff(MINUTE,cast(cast(left('103/01/01',3)as int)+1911 as nvarchar(10))+right('103/01/01',6)+' '+@t_bresthour,cast(cast(left((case when @t_eresthour<@t_bresthour then dbo.q_cdn('103/01/01',1) else '103/01/01' end),3)as int)+1911 as nvarchar(10))+right((case when @t_eresthour<@t_bresthour then dbo.q_cdn('103/01/01',1) else '103/01/01' end),6)+' '+@t_eresthour) as float)/60),1) end))
,sum(isnull(a.w133,0)+isnull(a.w166,0)+isnull(a.w100,0)),0
,sum(case when CHARINDEX('遲到',a.memo)>0 then 1 else 0 end)
,sum(case when CHARINDEX('早退',a.memo)>0 then 1 else 0 end),0,0
from salpresents a left join sss b on a.sssno=b.noa
where a.noa between @t_bdate and @t_edate and a.clockin!='' and a.clockout!=''
and a.sssno between @t_bsssno and @t_esssno
and isnull(b.partno,'') between @t_bpartno and @t_epartno
and (b.typea=@t_typea or len(@t_typea)=0)
and (len(b.outdate)=0 or b.outdate>=@t_bdate)
and a.memo!='外出' --106/03/31 增加
group by sssno

--排除假日
update a 
set forget=(select COUNT(*) from salpresents sa left join salpresent sb on sa.noa=sb.noa 
where sa.sssno=a.sssno and (sa.noa between @t_bdate and @t_edate) 
and (((isnull(sa.clockin,'')='' or isnull(sa.clockin,'')='') and sb.holiday=0) 
or (sb.holiday=1 and charindex('打卡資料錯誤',memo)>0))
and not exists (select * from salvacause where sssno=a.sssno and hr_used>=8 and sa.noa between bdate and edate ) ) 
,vaca=(select COUNT(*) from salvacause where sssno=a.sssno and (bdate between @t_bdate and @t_edate) 
and (hname like '%事假%' or hname like '%普通傷%' or hname like '%病假%' or hname like '%曠職%'))
,apvh=isnull((select sum(hours) from saladd where isnull(isapv,0)=1 and sssno=a.sssno and datea between @t_bdate and @t_edate ),0)
from @tmpa a 
--outer apply (select bdate,edate from salvacause where sssno=a.sssno and hr_used>=8 and (bdate between @t_bdate and @t_edate))b

--沒有打卡的資料就保持null
update a
set hours=b.hours,late=b.late,early=b.early,forget=b.forget,vaca=b.vaca,addh=b.addh,apvh=b.apvh
from @tmp a left join @tmpa b on a.sssno=b.sssno

update @tmp
set fulls=(case when cast(@t_workhour as float)<=hours+isnull(svaca,0) and cast(@t_late as float)>=late and cast(@t_early as float)>=early and isnull(vaca,0)=0 then 'V' else '' end)
where hours is not null

select * from @tmp order by sssno
;

---------------------------------------------------------------------------------------------------------------------------------------------
z_salpresentst4:--z_salpresentst4
declare @t_bsssno nvarchar(50)
declare @t_esssno nvarchar(50)
declare @t_bpartno nvarchar(50)
declare @t_epartno nvarchar(50)
declare @t_rlen nvarchar(50)
declare @t_bmon nvarchar(50)
declare @t_emon nvarchar(50)
declare @t_order nvarchar(50)

set @t_bsssno = case when '#non' = [4] then '' else [4] end
set @t_esssno = case when '#non' = [5] then CHAR(255) else [5] end
set @t_bpartno = case when '#non' = [6] then '' else [6] end
set @t_epartno = case when '#non' = [7] then CHAR(255) else [7] end
set @t_rlen = [14]
set @t_bmon = case when '#non' = [15] then '' else [15] end
set @t_emon = case when '#non' = [16] then char(255) else [16] end
set @t_order = case when '#non' = [17] then '' else [17] end
-----------------------------------------------------------------------------------------------------------------
SET QUOTED_IDENTIFIER OFF
IF OBJECT_ID('tempdb..#tmp')is not null
BEGIN
	drop table #tmp
END

create table #tmp(
	gno nvarchar(10),
	mon nvarchar(50),
	datea nvarchar(20), 
	work bit,
	weeks nvarchar(10),
	
	sssno nvarchar(50), 
	namea nvarchar(50), 
	partno nvarchar(50), 
	part nvarchar(50), 
	
	class5 nvarchar(50), --sss和saladj
	dclass5 nvarchar(50),--非輪班和輪班
	
	btime nvarchar(50),
	etime nvarchar(50),
	clockin nvarchar(50),
	clockout nvarchar(50),
	bresttime nvarchar(50),
	eresttime nvarchar(50),
	workhours nvarchar(50),
	
	late float,
	early float,
	vacahours float,
	
	addbtime nvarchar(50),
	addetime nvarchar(50),
	addhours float,
	
	overtime nvarchar(10), --加班開始時間
	doverhours float,--平日最多時數/天
	overhours float,--平日最多時數/月
	dhoverhours float,--假日最多時數/天
	hoverhours float,--假日最多時數/月
	
	hours float,
	memo nvarchar(MAX)
) 

insert #tmp(gno,mon,datea,sssno,namea,partno,part,class5,dclass5,btime,etime,clockin,clockout,bresttime,eresttime,workhours,memo
,late,early,vacahours,overtime,doverhours,overhours,dhoverhours,hoverhours)
select '0',left(a.noa,CAST(@t_rlen as int)+3),a.noa
,b.sssno,b.namea,s.partno,s.part
,case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end
,case when isnull(c1.noa,'')!='' then c1.noa else c2.noa end
,case when isnull(c1.noa,'')!='' then c1.btime else c2.btime end
,case when isnull(c1.noa,'')!='' then c1.etime else c2.etime end
,b.clockin,b.clockout
,case when isnull(c1.noa,'')!='' then c1.bresttime else c2.bresttime end
,case when isnull(c1.noa,'')!='' then c1.eresttime else c2.eresttime end
,case when isnull(c1.noa,'')!='' then 
round((Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c1.btime,Convert(NVARCHAR(10),getdate(),20)+' '+c1.etime)
-case when c1.etime>c1.bresttime or (left(c1.etime,1)='0' and c1.bresttime between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c1.bresttime,Convert(NVARCHAR(10),getdate(),20)+' '+c1.eresttime)else 0 end
-case when c1.etime>c1.bresttime2 or (left(c1.etime,1)='0' and c1.bresttime2 between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c1.bresttime2,Convert(NVARCHAR(10),getdate(),20)+' '+c1.eresttime2)else 0 end
-case when c1.etime>c1.bresttime3 or (left(c1.etime,1)='0' and c1.bresttime3 between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c1.bresttime3,Convert(NVARCHAR(10),getdate(),20)+' '+c1.eresttime3)else 0 end)/60,1)
else 
round((Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c2.btime,Convert(NVARCHAR(10),getdate(),20)+' '+c2.etime)
-case when c2.etime>c2.bresttime or (left(c2.etime,1)='0' and c2.bresttime between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c2.bresttime,Convert(NVARCHAR(10),getdate(),20)+' '+c2.eresttime)else 0 end
-case when c2.etime>c2.bresttime2 or (left(c2.etime,1)='0' and c2.bresttime2 between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c2.bresttime2,Convert(NVARCHAR(10),getdate(),20)+' '+c2.eresttime2)else 0 end
-case when c2.etime>c2.bresttime3 or (left(c2.etime,1)='0' and c2.bresttime3 between '19:00' and '23:59') then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+c2.bresttime3,Convert(NVARCHAR(10),getdate(),20)+' '+c2.eresttime3)else 0 end)/60,1)
end
,b.memo,0,0,0
,case when isnull(c1.noa,'')!='' then c1.overtime else c2.overtime end
,case when isnull(c1.noa,'')!='' then c1.doverhours else c2.doverhours end
,case when isnull(c1.noa,'')!='' then c1.overhours else c2.overhours end
,case when isnull(c1.noa,'')!='' then c1.dhoverhours else c2.dhoverhours end
,case when isnull(c1.noa,'')!='' then c1.hoverhours else c2.hoverhours end
from salpresent a 
outer apply (select sssno,MAX(namea)namea,Min(clockin)clockin,MAX(clockout)clockout,MAX(memo) memo
from salpresents where noa=a.noa group by sssno) b
left join sss s on b.sssno=s.noa
outer apply (select top 1 * from saladjust where noa=b.sssno and datea<=a.noa order by datea desc)adj
--非輪班
outer apply(select top 1 * from class5s  where noa=case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end
and bdate<a.noa order by bdate desc --有效日
)c1
--輪班(用上班時間與約定上班時間的時差來判斷)
outer apply(select top 1 * from class5s  where ','+case when isnull(adj.class5,'')!='' then adj.class5 else s.class5 end+',' like '%,'+noa+',%'
and bdate<a.noa
order by bdate desc,
	case when left(btime,2)<='04' and clockin between '19:00:00' and '23:59:59' --昨天進(24)
	then ABS(cast(LEFT(clockin,2)as float)-cast('24' as float))
	when left(btime,2)>='20' and clockin between '00:00:00' and '05:00:00' --隔天進(24)
	then ABS((cast(LEFT(clockin,2)as float)+24)-cast(LEFT(btime,2) as float))
	else ABS(cast(LEFT(clockin,2)as float)-cast(LEFT(btime,2) as float)) end --正常區間
)c2

where left(a.noa,CAST(@t_rlen as int)+3) between @t_bmon and @t_emon
and b.sssno between @t_bsssno and @t_esssno
and s.partno between @t_bpartno and @t_epartno
order by sssno

--更新日期
update a
set weeks=DATEPART(weekday,case when @t_rlen='3' then dbo.ChineseEraName2AD(datea) else datea end)-1
from #tmp a 

--正常周休二日
update a set work=case when weeks=6 or weeks=0 then 0 else 1 end from #tmp a 

--休假日與補假
update a set work=case when isnull(b.iswork,0)=1 then 1 else 0 end
from #tmp a left join holiday b on a.datea=b.noa where b.noa is not null

--遲到
update #tmp
set late=case when isnull(btime,'') < isnull(clockin,'') 
then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+btime,Convert(NVARCHAR(10),getdate(),20)+' '+clockin) 
else Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+btime,Convert(NVARCHAR(10),DateAdd(Day,1,getdate()),20)+' '+clockin) end
where isnull(btime,'')!='' and isnull(clockin,'')!='' and (isnull(btime,'') < isnull(clockin,'') 
or(left(isnull(btime,''),2)>='20' and isnull(clockin,'') between '00:00:00' and '05:00:00'))--隔天進(24)

--早退
update #tmp
set early=case when isnull(etime,'') > isnull(clockout,'') 
then Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+clockout,Convert(NVARCHAR(10),getdate(),20)+' '+etime) 
else Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+clockout,Convert(NVARCHAR(10),DateAdd(Day,1,getdate()),20)+' '+etime) end
where isnull(etime,'')!='' and isnull(clockout,'')!='' and (isnull(etime,'') > isnull(clockout,'') 
or(left(isnull(etime,''),1)='0' and isnull(clockout,'') between '19:00:00' and '23:59:59'))--昨天出(24)

--請假
update a
set vacahours=case when isnull(hr_used,0)>8 then 8 else isnull(hr_used,0) end
from #tmp a outer apply (select SUM(hr_used)hr_used from salvacause where a.datea between bdate and edate and sssno=a.sssno)b

--加班
update a 
set addbtime=b.btime,addetime=b.etime,addhours=b.hours
from #tmp a outer apply (select top 1 * from saladd where datea=a.datea and sssno=a.sssno and isnull(isapv,0)=1) b

--更新實際上班時數
update #tmp
set workhours=round(workhours-((late+early)/60),1)

--更新總時數
update #tmp
set hours=isnull(workhours,0)+isnull(addhours,0)

---------------------------------------------------------------------------------
--調整 實際出勤時數 與 限制加班時數
declare @mon nvarchar(50)
declare @datea nvarchar(20) 
declare @work bit
declare @sssno nvarchar(50)
declare @btime nvarchar(50)
declare @etime nvarchar(50)
declare @clockin nvarchar(50)
declare @clockout nvarchar(50)
declare @overtime nvarchar(10)
declare @addbtime nvarchar(50)
declare @addetime nvarchar(50)
declare @addhours float
declare @doverhours float
declare @overhours float
declare @dhoverhours float
declare @hoverhours float

declare @x_sssno nvarchar(50)=char(255)
declare @x_mon nvarchar(50)=char(255)
declare @x_datea nvarchar(20)=char(255)

declare @x_overhours float
declare @x_hoverhours float


declare cursor_table cursor for
select sssno,mon,datea,work,btime,etime,clockin,clockout
,overtime,addbtime,addetime,addhours,doverhours,overhours,dhoverhours,hoverhours
from #tmp order by sssno,mon,datea
open cursor_table
fetch next from cursor_table
into @sssno,@mon,@datea,@work,@btime,@etime,@clockin,@clockout,@overtime,@addbtime,@addetime,@addhours
,@doverhours,@overhours,@dhoverhours,@hoverhours
while(@@FETCH_STATUS <> -1)
begin
	if(@x_sssno!=@sssno or @x_mon!=@mon )
	begin
		set @x_overhours=isnull(@overhours,0)
		set @x_hoverhours=isnull(@hoverhours,0)
	end	
	
	--加班處理
	--平日
	if(@work=1)
	begin
		if(@x_overhours>0)--當月平日是否有加班時數
		begin
			if(isnull(@addhours,0)>isnull(@doverhours,0)) --當天是否超過限定時數
			begin
				if(isnull(@doverhours,0)=0) --沒有加班時數
				begin
					update #tmp set addbtime='',addetime='',addhours=0 where datea=@datea and sssno=@sssno
				end
				else
				begin
					update #tmp set addetime=right('00'+cast(case when cast(LEFT(addbtime,2) as int)+@doverhours>23 then 
					(cast(LEFT(addbtime,2) as int)+@doverhours-23) else cast(LEFT(addbtime,2) as int)+@doverhours end as nvarchar(10)),2)
					+substring(addbtime,3,len(addbtime))
					,addhours=@doverhours where datea=@datea and sssno=@sssno
					set @x_overhours=@x_overhours-isnull(@doverhours,0)
				end
			end	
			else
			begin
				set @x_overhours=@x_overhours-isnull(@addhours,0)
			end
		end
		else
		begin
			update #tmp set addbtime='',addetime='',addhours=0 where datea=@datea and sssno=@sssno
		end
	end
	else--假日
	begin
		if(@x_hoverhours>0)--當月平日是否有加班時數
		begin
			if(isnull(@addhours,0)>isnull(@dhoverhours,0)) --當天是否超過限定時數
			begin
				if(isnull(@dhoverhours,0)=0) --沒有加班時數
				begin
					update #tmp set addbtime='',addetime='',addhours=0 where datea=@datea and sssno=@sssno
				end
				else
				begin
					update #tmp set addetime=right('00'+cast(case when cast(LEFT(addbtime,2) as int)+@dhoverhours>23 then 
					(cast(LEFT(addbtime,2) as int)+@dhoverhours-23) else cast(LEFT(addbtime,2) as int)+@dhoverhours end as nvarchar(10)),2)
					+substring(addbtime,3,len(addbtime))
					,addhours=@dhoverhours where datea=@datea and sssno=@sssno
					set @x_hoverhours=@x_hoverhours-isnull(@dhoverhours,0)
				end
			end	
			else
			begin
				set @x_hoverhours=@x_hoverhours-isnull(@addhours,0)
			end
		end
		else
		begin
			update #tmp set addbtime='',addetime='',addhours=0 where datea=@datea and sssno=@sssno
		end
	end
	
	set @x_sssno=@sssno
	set @x_mon=@mon
	set @x_datea=@datea
	
	fetch next from cursor_table
	into @sssno,@mon,@datea,@work,@btime,@etime,@clockin,@clockout,@overtime,@addbtime,@addetime,@addhours
	,@doverhours,@overhours,@dhoverhours,@hoverhours
end
close cursor_table
deallocate cursor_table

declare cursor_table cursor for
select sssno,mon,datea,work,btime,etime,clockin,clockout
,overtime,addbtime,addetime,addhours,doverhours,overhours,dhoverhours,hoverhours
from #tmp order by sssno,mon,datea
open cursor_table
fetch next from cursor_table
into @sssno,@mon,@datea,@work,@btime,@etime,@clockin,@clockout,@overtime,@addbtime,@addetime,@addhours
,@doverhours,@overhours,@dhoverhours,@hoverhours
while(@@FETCH_STATUS <> -1)
begin
	
	--出勤
	--平日
	if(@work=1)
	begin
		if( (@clockout>@etime or (LEFT(@etime,2)>='20' and @clockout between '00:00:00' and '05:00:00'))
		and (@clockout>@overtime or (LEFT(@clockout,2)>='20' and @overtime  between '00:00:00' and '05:00:00'))
		)--下班時間大於加班時間 
		begin
			if(@addbtime='')--沒有加班資料
			begin
				if(@overtime='') --加班時間空白
				begin
					update #tmp set clockout=@etime where datea=@datea and sssno=@sssno
				end
				else --有加班時間
				begin
					update #tmp set clockout=left(@overtime,2)+':'
					+ case when right(@overtime,2)='00' then '59' else right('00'+CAST(CAST(right(@overtime,2) as int)-1 as nvarchar(10)),'2') end
					where datea=@datea and sssno=@sssno
				end
			end
			else --有加班資料
			begin
				if(@clockout>@addetime and ABS(Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+@addetime,Convert(NVARCHAR(10),getdate(),20)+' '+@clockout))>5)--下班時間>加班時數 且超過5分鐘
				begin
					update #tmp set clockout=@addetime where datea=@datea and sssno=@sssno
				end
			end
		end
	end
	else--假日
	begin
		if(@addbtime='')--沒有加班資料
		begin
			--假日不上班
			update #tmp set clockout='',clockin='' where datea=@datea and sssno=@sssno
		end	
		else
		begin
			if(ABS(Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+@addbtime,Convert(NVARCHAR(10),getdate(),20)+' '+@clockin))>10)--上班時間>加班時數 且超過10分鐘
			begin
				update #tmp set clockin=@addbtime where datea=@datea and sssno=@sssno
			end
			
			if(ABS(Datediff(Minute,Convert(NVARCHAR(10),getdate(),20)+' '+@addetime,Convert(NVARCHAR(10),getdate(),20)+' '+@clockout))>5)--下班時間>加班時數 且超過5分鐘
			begin
				update #tmp set clockout=@addetime where datea=@datea and sssno=@sssno
			end
		end
	end
	
	fetch next from cursor_table
	into @sssno,@mon,@datea,@work,@btime,@etime,@clockin,@clockout,@overtime,@addbtime,@addetime,@addhours
	,@doverhours,@overhours,@dhoverhours,@hoverhours
end
close cursor_table
deallocate cursor_table

insert #tmp(gno,mon)
select '1',mon from #tmp group by mon

if(@t_order='sssno')
begin
	select * from #tmp order by mon,gno,sssno,datea
end
else if(@t_order='partno')
begin
	select * from #tmp order by mon,gno,partno,sssno,datea
end
else
begin
	select * from #tmp order by mon,gno,datea,partno,sssno
end

IF OBJECT_ID('tempdb..#tmp')is not null
BEGIN
	drop table #tmp
END
;
