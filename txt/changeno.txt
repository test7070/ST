custno_change:--custno_change
SET QUOTED_IDENTIFIER OFF
declare @old_noa nvarchar(MAX) = [1]
declare @new_noa nvarchar(MAX) = [2]
declare @tablea nvarchar(MAX)
declare @column nvarchar(MAX)
declare @mess nvarchar(MAX)='success'

if(@old_noa!='' and @new_noa!='')
begin
	BEGIN TRY
		Begin Transaction
	
		declare cursor_table cursor for 
		SELECT TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE (COLUMN_NAME like '%custno%' or COLUMN_NAME like '%grpno%') and TABLE_NAME not like 'view_%' and TABLE_NAME !='changeno'
		order by TABLE_NAME
		open cursor_table 
		fetch next from cursor_table 
		into @tablea,@column
		while(@@FETCH_STATUS <> -1) 
		begin 
			
			EXEC(" update "+@tablea+" set "+@column+"='"+@new_noa+"' where "+@column+"='"+@old_noa+"'")		
	
			fetch next from cursor_table 
			into @tablea,@column
		end 
		close cursor_table 
		deallocate cursor_table 
	
		--客戶主檔
		update cust set noa=@new_noa where noa=@old_noa
		
		--收款
		update cust_2s set noa=@new_noa where noa=@old_noa
		
		--帳務設定
		update custm set noa=@new_noa where noa=@old_noa
		update custms set noa=@new_noa where noa=@old_noa
		
		--聯絡人
		update conn set noa=@new_noa where noa=@old_noa and typea='1'
		
		--信用額度
		update usecrd set noa=@new_noa where noa=@old_noa
		
		Commit Transaction
	
	END TRY
	BEGIN CATCH
		ROLLBACK
		set @mess='failure'
		close cursor_table 
		deallocate cursor_table
	END CATCH
end
else 
begin
	set @mess='failure'
end

select @mess mess
;
------------------------------------------------------------------------------------------------------------------------------------
tggno_change:--tggno_change
SET QUOTED_IDENTIFIER OFF
declare @old_noa nvarchar(MAX) = [1]
declare @new_noa nvarchar(MAX) = [2]
declare @tablea nvarchar(MAX)
declare @column nvarchar(MAX)
declare @mess nvarchar(MAX)='success'

if(@old_noa!='' and @new_noa!='')
begin
	BEGIN TRY
		Begin Transaction
	
		declare cursor_table cursor for 
		SELECT TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE (COLUMN_NAME like '%tggno%') and TABLE_NAME not like 'view_%' and TABLE_NAME !='changeno'
		order by TABLE_NAME
		open cursor_table 
		fetch next from cursor_table 
		into @tablea,@column
		while(@@FETCH_STATUS <> -1) 
		begin 
			
			EXEC(" update "+@tablea+" set "+@column+"='"+@new_noa+"' where "+@column+"='"+@old_noa+"'")		
	
			fetch next from cursor_table 
			into @tablea,@column
		end 
		close cursor_table 
		deallocate cursor_table 
	
		--廠商主檔
		update tgg set noa=@new_noa where noa=@old_noa
		
		--付款
		update tgg_2s set noa=@new_noa where noa=@old_noa
		
		--聯絡人
		update conn set noa=@new_noa where noa=@old_noa and typea='2'
		
		Commit Transaction
	
	END TRY
	BEGIN CATCH
		ROLLBACK
		set @mess='failure'
		close cursor_table 
		deallocate cursor_table
	END CATCH
end
else 
begin
	set @mess='failure'
end

select @mess mess
;
------------------------------------------------------------------------------------------------------------------------------------
uccno_change:--uccno_change
SET QUOTED_IDENTIFIER OFF
declare @old_noa nvarchar(MAX) = [1]
declare @new_noa nvarchar(MAX) = [2]
declare @tablea nvarchar(MAX)
declare @column nvarchar(MAX)
declare @mess nvarchar(MAX)='success'

if(@old_noa!='' and @new_noa!='')
begin
	BEGIN TRY
		Begin Transaction
	
		declare cursor_table cursor for 
		SELECT TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE (COLUMN_NAME like '%productno%' or  COLUMN_NAME like '%uccno%' or  COLUMN_NAME like '%ucano%' ) 
		and TABLE_NAME not like 'view_%' and TABLE_NAME !='changeno' and TABLE_NAME!='ucccust' --客戶產品編號
		and COLUMN_NAME not like '%noq'
		and TABLE_NAME not like 'ucx%' and TABLE_NAME not like 'ucr%' --海關產品不動
		order by TABLE_NAME
		open cursor_table 
		fetch next from cursor_table 
		into @tablea,@column
		while(@@FETCH_STATUS <> -1) 
		begin 
			
			EXEC(" update "+@tablea+" set "+@column+"='"+@new_noa+"' where "+@column+"='"+@old_noa+"'")		
	
			fetch next from cursor_table 
			into @tablea,@column
		end 
		close cursor_table 
		deallocate cursor_table 
		
		--物品主檔
		update ucc set noa=@new_noa where noa=@old_noa
		--BOM主檔
		update uca set noa=@new_noa where noa=@old_noa
		--客戶料號
		update ucccust set noa=@new_noa where noa=@old_noa
		--替代品
		update ucctd set noa=@new_noa where noa=@old_noa
		--產品包裝
		update pack2 set noa=@new_noa where noa=@old_noa
		--產品包裝
		update pack2s set noa=@new_noa where noa=@old_noa
		--加扣單價
		update ucap set noa=@new_noa where noa=@old_noa
		--使用模具
		update ucab set noa=@new_noa where noa=@old_noa
		
		Commit Transaction
	
	END TRY
	BEGIN CATCH
		ROLLBACK
		set @mess='failure'
		close cursor_table 
		deallocate cursor_table
	END CATCH
end
else 
begin
	set @mess='failure'
end

select @mess mess
;
------------------------------------------------------------------------------------------------------------------------------------
partno_change:--partno_change
SET QUOTED_IDENTIFIER OFF
declare @old_noa nvarchar(MAX) = [1]
declare @new_noa nvarchar(MAX) = [2]
declare @tablea nvarchar(MAX)
declare @column nvarchar(MAX)
declare @mess nvarchar(MAX)='success'

if(@old_noa!='' and @new_noa!='')
begin
	BEGIN TRY
		Begin Transaction
	
		declare cursor_table cursor for 
		SELECT TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE (COLUMN_NAME like '%partno%') 
		and TABLE_NAME not like 'view_%' and TABLE_NAME !='changeno'
		and TABLE_NAME not like 'ac%' 
		and TABLE_NAME not like 'bankex%' --銀行調度
		and TABLE_NAME not like '%chgcash%'  --零用金
		and TABLE_NAME !='custopay' --預收調整
		and TABLE_NAME not like 'pay%' --付款 會影響傳票 不變動
		and TABLE_NAME not like 'umm%' --收款 會影響傳票 不變動
		and TABLE_NAME !='uccag'
		order by TABLE_NAME
		open cursor_table 
		fetch next from cursor_table 
		into @tablea,@column
		while(@@FETCH_STATUS <> -1) 
		begin 
			
			EXEC(" update "+@tablea+" set "+@column+"='"+@new_noa+"' where "+@column+"='"+@old_noa+"'")		
	
			fetch next from cursor_table 
			into @tablea,@column
		end 
		close cursor_table 
		deallocate cursor_table 
		
		--主檔
		update part set noa=@new_noa where noa=@old_noa
		
		--零用金員工部門
		update chgcash set partno=@new_noa where partno=@old_noa
		
		Commit Transaction
	
	END TRY
	BEGIN CATCH
		ROLLBACK
		set @mess='failure'
		close cursor_table 
		deallocate cursor_table
	END CATCH
end
else 
begin
	set @mess='failure'
end

select @mess mess
;
------------------------------------------------------------------------------------------------------------------------------------
stationno_change:--stationno_change
SET QUOTED_IDENTIFIER OFF
declare @old_noa nvarchar(MAX) = [1]
declare @new_noa nvarchar(MAX) = [2]
declare @tablea nvarchar(MAX)
declare @column nvarchar(MAX)
declare @mess nvarchar(MAX)='success'

if(@old_noa!='' and @new_noa!='')
begin
	BEGIN TRY
		Begin Transaction
	
		declare cursor_table cursor for 
		SELECT TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE (COLUMN_NAME like '%stationno%') 
		and TABLE_NAME not like 'view_%' and TABLE_NAME !='changeno'
		order by TABLE_NAME
		open cursor_table 
		fetch next from cursor_table 
		into @tablea,@column
		while(@@FETCH_STATUS <> -1) 
		begin 
			
			EXEC(" update "+@tablea+" set "+@column+"='"+@new_noa+"' where "+@column+"='"+@old_noa+"'")		
	
			fetch next from cursor_table 
			into @tablea,@column
		end 
		close cursor_table 
		deallocate cursor_table 
		
		--主檔
		update station set noa=@new_noa where noa=@old_noa
		
		Commit Transaction
	
	END TRY
	BEGIN CATCH
		ROLLBACK
		set @mess='failure'
		close cursor_table 
		deallocate cursor_table
	END CATCH
end
else 
begin
	set @mess='failure'
end

select @mess mess
;
------------------------------------------------------------------------------------------------------------------------------------
acc1_change:--acc1_change
SET QUOTED_IDENTIFIER OFF
declare @old_noa nvarchar(MAX) = [1]
declare @new_noa nvarchar(MAX) = [2]
declare @tablea nvarchar(MAX)
declare @column nvarchar(MAX)
declare @mess nvarchar(MAX)='success'

if(@old_noa!='' and @new_noa!='')
begin
	BEGIN TRY
		Begin Transaction
		--會計科目
		declare cursor_table cursor for 
		SELECT TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE (COLUMN_NAME like 'acc1' or COLUMN_NAME like 'uacc%' or COLUMN_NAME like '%accc5%') 
		and TABLE_NAME not like 'view_%' and TABLE_NAME !='changeno'
		order by TABLE_NAME
		open cursor_table 
		fetch next from cursor_table 
		into @tablea,@column
		while(@@FETCH_STATUS <> -1) 
		begin
			
			EXEC(" update "+@tablea+" set "+@column+"='"+@new_noa+"' where "+@column+"='"+@old_noa+"'")
			
			fetch next from cursor_table 
			into @tablea,@column
		end 
		close cursor_table 
		deallocate cursor_table 
	end		
	
	Commit Transaction
	
	END TRY
	BEGIN CATCH
		ROLLBACK
		set @mess='failure'
		close cursor_table 
		deallocate cursor_table
	END CATCH
end
else 
begin
	set @mess='failure'
end

select @mess mess
;
--------------------------------------------------------------------------------
sssno_change:--sssno_change
SET QUOTED_IDENTIFIER OFF
declare @old_noa nvarchar(MAX) = [1]
declare @new_noa nvarchar(MAX) = [2]
declare @tablea nvarchar(MAX)
declare @column nvarchar(MAX)
declare @mess nvarchar(MAX)='success'

if(@old_noa!='' and @new_noa!='')
begin
	BEGIN TRY
		Begin Transaction
	
		declare cursor_table cursor for 
		SELECT TABLE_NAME,COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
		WHERE (COLUMN_NAME like '%sssno%' or COLUMN_NAME like '%salesno%' or COLUMN_NAME = 'sno'
		or COLUMN_NAME = 'outsno' or COLUMN_NAME = 'insno') 
		and TABLE_NAME not like 'view_%' and TABLE_NAME !='changeno' 
		and TABLE_NAME !='postas'
		and TABLE_NAME !='eipbases' and TABLE_NAME !='eipflows'  and TABLE_NAME !='eipmans'
		order by TABLE_NAME
		open cursor_table 
		fetch next from cursor_table 
		into @tablea,@column
		while(@@FETCH_STATUS <> -1) 
		begin 
			
			EXEC(" update "+@tablea+" set "+@column+"='"+@new_noa+"' where "+@column+"='"+@old_noa+"'")		
	
			fetch next from cursor_table 
			into @tablea,@column
		end 
		close cursor_table 
		deallocate cursor_table 
			
		--密碼主檔nhpe不變更
		
		--員工主檔
		update sss set noa=@new_noa where noa=@old_noa
		
		--所屬部門
		update ssspart set noa=@new_noa where noa=@old_noa
		
		--薪資調整記錄
		update saladjust set noa=@new_noa where noa=@old_noa
		
		--停/復職紀錄
		update sssr set noa=@new_noa where noa=@old_noa
		
		--人事異動紀錄
		update ssschg set noa=@new_noa where noa=@old_noa
		
		--健勞保
		update labase set noa=@new_noa where noa=@old_noa
		update labases set noa=@new_noa where noa=@old_noa
		
		--員工投退保日
		update labased set noa=@new_noa where noa=@old_noa
		
		--投保歷史紀錄
		update salinsures set noa=@new_noa where noa=@old_noa

		--所得設定
		update sssu set noa=@new_noa where noa=@old_noa

		--簽核
		update signform set checkerno=@new_noa where isnull(checkerno,'')=@old_noa
		update signform set approvemano=@new_noa where isnull(approvemano,'')=@old_noa
		update signform set approvefino=@new_noa where isnull(approvefino,'')=@old_noa
		update signform set approvegmno=@new_noa where isnull(approvegmno,'')=@old_noa
		update signform set approvebsno=@new_noa where isnull(approvebsno,'')=@old_noa

		--eip系列 多員工編號分號間隔
		update a 
		set sno=SUBSTRING(b.chgstr,1,len(b.chgstr)-1)
		from eipbases a outer apply (select STUFF(replace(CHAR(59)+a.sno+CHAR(59),CHAR(59)+@old_noa+CHAR(59),CHAR(59)+@new_noa+CHAR(59)),1,1,'') chgstr )b
		where CHAR(59)+a.sno+CHAR(59) like '%'+CHAR(59)+@old_noa+CHAR(59)+'%'
		
		update a 
		set sno=SUBSTRING(b.chgstr,1,len(b.chgstr)-1)
		from eipflows a outer apply (select STUFF(replace(CHAR(59)+a.sno+CHAR(59),CHAR(59)+@old_noa+CHAR(59),CHAR(59)+@new_noa+CHAR(59)),1,1,'') chgstr )b
		where CHAR(59)+a.sno+CHAR(59) like '%'+CHAR(59)+@old_noa+CHAR(59)+'%'
		
		update a 
		set sno=SUBSTRING(b.chgstr,1,len(b.chgstr)-1)
		from eipmans a outer apply (select STUFF(replace(CHAR(59)+a.sno+CHAR(59),CHAR(59)+@old_noa+CHAR(59),CHAR(59)+@new_noa+CHAR(59)),1,1,'') chgstr )b
		where CHAR(59)+a.sno+CHAR(59) like '%'+CHAR(59)+@old_noa+CHAR(59)+'%'
		
		Commit Transaction
	
	END TRY
	BEGIN CATCH
		ROLLBACK
		set @mess='failure'
		close cursor_table 
		deallocate cursor_table
	END CATCH
end
else 
begin
	set @mess='failure'
end

select @mess mess
;